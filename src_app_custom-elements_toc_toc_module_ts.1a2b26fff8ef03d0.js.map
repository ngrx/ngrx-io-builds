{"version":3,"mappings":"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","names":["SubscribeOnObservable","source","delayTime","arguments","scheduler","asap","i","isNumeric","schedule","subscriber","this","dispatch","delay","arg","add","subscribe","t","Observable","lift","SubscribeOnOperator","d","i0","ctx_r5","ctx_r12","TocComponent","scrollService","elementRef","tocService","Subject","isEmbedded","nativeElement","className","indexOf","tocList","pipe","takeUntil","onDestroy","o","itemCount","array","fn","reduce","result","item","level","count","type","primaryMax","combineLatest","activeItemIndex","subscribeOn","items","changes","startWith","index","a","activeIndex","length","e","toArray","p","offsetParent","eRect","getBoundingClientRect","pRect","top","bottom","scrollTop","clientHeight","next","canScroll","isCollapsed","toTop","scrollToTop","s","selectors","TocModule","r","CommonModule","MatIconModule"],"sources":["./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js","./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js","./src/app/custom-elements/toc/toc.component.html","./src/app/custom-elements/toc/toc.component.ts","./src/app/custom-elements/toc/toc.module.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n","<div *ngIf=\"type !== 'None'\" class=\"toc-inner no-print\" [class.collapsed]=\"isCollapsed\">\n\n  <div *ngIf=\"type === 'EmbeddedSimple'\" class=\"toc-heading embedded\">\n    Contents\n  </div>\n\n  <button *ngIf=\"type === 'EmbeddedExpandable'\" type=\"button\" (click)=\"toggle(false)\"\n    class=\"toc-heading embedded secondary\"\n    title=\"Expand/collapse contents\"\n    aria-label=\"Expand/collapse contents\"\n    [attr.aria-pressed]=\"!isCollapsed\">\n    Contents\n    <mat-icon class=\"rotating-icon\" svgIcon=\"keyboard_arrow_right\" [class.collapsed]=\"isCollapsed\"></mat-icon>\n  </button>\n\n  <ul class=\"toc-list\" [class.embedded]=\"type !== 'Floating'\">\n    <ng-container *ngFor=\"let toc of tocList; let i = index\">\n      <li #tocItem title=\"{{toc.title}}\" *ngIf=\"type === 'Floating' || toc.level !== 'h1'\"\n        class=\"{{toc.level}}\" [class.secondary]=\"type === 'EmbeddedExpandable' && i >= primaryMax\" [class.active]=\"i === activeIndex\">\n        <a [href]=\"toc.href\" [innerHTML]=\"toc.content\"></a>\n      </li>\n    </ng-container>\n  </ul>\n\n  <button *ngIf=\"type === 'EmbeddedExpandable'\" type=\"button\" (click)=\"toggle()\"\n    class=\"toc-more-items embedded material-icons\" [class.collapsed]=\"isCollapsed\"\n    title=\"Expand/collapse contents\"\n    aria-label=\"Expand/collapse contents\"\n    [attr.aria-pressed]=\"!isCollapsed\">\n  </button>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { asapScheduler as asap, combineLatest, Subject } from 'rxjs';\nimport { startWith, subscribeOn, takeUntil } from 'rxjs/operators';\n\nimport { ScrollService } from 'app/shared/scroll.service';\nimport { TocItem, TocService } from 'app/shared/toc.service';\n\ntype TocType = 'None' | 'Floating' | 'EmbeddedSimple' | 'EmbeddedExpandable';\n\n@Component({\n    selector: 'aio-toc',\n    templateUrl: 'toc.component.html',\n    styles: []\n})\nexport class TocComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    activeIndex: number | null = null;\n    type: TocType = 'None';\n    isCollapsed = true;\n    isEmbedded = false;\n    @ViewChildren('tocItem') private items: QueryList<ElementRef>;\n    private onDestroy = new Subject();\n    private primaryMax = 4;\n    tocList: TocItem[];\n\n    constructor(\n        private scrollService: ScrollService,\n        elementRef: ElementRef,\n        private tocService: TocService) {\n        this.isEmbedded = elementRef.nativeElement.className.indexOf('embedded') !== -1;\n    }\n\n    ngOnInit() {\n        this.tocService.tocList\n            .pipe(takeUntil(this.onDestroy))\n            .subscribe(tocList => {\n                this.tocList = tocList;\n                const itemCount = count(this.tocList, item => item.level !== 'h1');\n\n                this.type = (itemCount > 0) ?\n                    this.isEmbedded ?\n                        (itemCount > this.primaryMax) ?\n                            'EmbeddedExpandable' :\n                            'EmbeddedSimple' :\n                        'Floating' :\n                    'None';\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.isEmbedded) {\n            // We use the `asap` scheduler because updates to `activeItemIndex` are triggered by DOM changes,\n            // which, in turn, are caused by the rendering that happened due to a ChangeDetection.\n            // Without asap, we would be updating the model while still in a ChangeDetection handler, which is disallowed by Angular.\n            combineLatest([this.tocService.activeItemIndex.pipe(subscribeOn(asap)), this.items.changes.pipe(startWith(this.items))])\n                .pipe(takeUntil(this.onDestroy))\n                .subscribe(([index, items]) => {\n                    this.activeIndex = index;\n                    if (index === null || index >= items.length) {\n                        return;\n                    }\n\n                    const e = items.toArray()[index].nativeElement;\n                    const p = e.offsetParent;\n\n                    const eRect = e.getBoundingClientRect();\n                    const pRect = p.getBoundingClientRect();\n\n                    const isInViewport = (eRect.top >= pRect.top) && (eRect.bottom <= pRect.bottom);\n\n                    if (!isInViewport) {\n                        p.scrollTop += (eRect.top - pRect.top) - (p.clientHeight / 2);\n                    }\n                });\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy.next();\n    }\n\n    toggle(canScroll = true) {\n        this.isCollapsed = !this.isCollapsed;\n        if (canScroll && this.isCollapsed) {\n            this.toTop();\n        }\n    }\n\n    toTop() {\n        this.scrollService.scrollToTop();\n    }\n}\n\nfunction count<T>(array: T[], fn: (item: T) => boolean) {\n    return array.reduce((result, item) => fn(item) ? result + 1 : result, 0);\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WithCustomElementComponent } from '../element-registry';\nimport { TocComponent } from './toc.component';\n\n@NgModule({\n    imports: [ CommonModule, MatIconModule ],\n    declarations: [ TocComponent ],\n    entryComponents: [ TocComponent ],\n})\nexport class TocModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = TocComponent;\n}\n"],"sourceRoot":"webpack:///","file":"src_app_custom-elements_toc_toc_module_ts.1a2b26fff8ef03d0.js"}