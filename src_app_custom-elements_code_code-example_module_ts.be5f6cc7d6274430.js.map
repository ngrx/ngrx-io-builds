{"version":3,"file":"src_app_custom-elements_code_code-example_module_ts.be5f6cc7d6274430.js","mappings":"mQA4BIA,MAAA,YAAuBA,MAAA,GAAYA,8BAAZA,MAAA,GAAAA,MAAAC,EAAAC,OAAA,gBAjB3B,IA+BaC,EAAoB,MApBjC,MAoBaA,EApBbC,cAkDYC,KAAAC,MAAQ,GAsBgBD,KAAAE,SAAU,EA1CtCL,WAAOA,GACPG,KAAKG,QAAUN,EACfG,KAAKI,QAAU,CACX,gBAAiBJ,KAAKH,OACtB,eAAgBG,KAAKH,OAE7B,CACIA,aACA,OAAOG,KAAKG,OAChB,CAIIE,SAAKA,GACLL,KAAKC,MAAQI,EACbL,KAAKE,SAA2C,IAAjCF,KAAKK,KAAKC,QAAQ,UACrC,CACID,WACA,OAAOL,KAAKC,KAChB,CAIIM,aAASA,GAETP,KAAKQ,UAAwB,MAAZD,GAAsC,SAAlB,GAAGA,GAC5C,CACIA,eACA,OAAOP,KAAKQ,SAChB,CAIIC,uBAAmBF,GACnBP,KAAKO,SAAWA,CACpB,CAGIG,wBAAoBH,GACpBP,KAAKO,SAAWA,CACpB,CAQAI,kBACIX,KAAKY,QAAQC,KAAOb,KAAKc,QAAQC,cAAcC,SACnD,EA5DSlB,SAAoB,mBAAAmB,iBAApBnB,EAAoB,EAApBA,EAAoB,UAAAoB,EAAAC,IAAA,MAApBrB,EAAoBsB,UAAA,mBAAAC,UAAA,SAAAC,EAAAC,MAAA,EAAAD,mBAwDlBE,IAAa,6kBAxExB7B,MAAA,aAAoCA,MAAA,GAAyBA,QAE7DA,MAAA,EAAA8B,EAAA,gBAEA9B,MAAA,uBAFSA,MAAA,GAAAA,MAAA,OAAA4B,EAAA1B,QAGPF,MAAA,GAAAA,MAAA,UAAA4B,EAAAnB,QAAAT,CAAmB,WAAA4B,EAAAG,SAAnB/B,CAAmB,WAAA4B,EAAAI,SAAnBhC,CAAmB,OAAA4B,EAAAlB,KAAnBV,CAAmB,SAAA4B,EAAAK,OAAnBjC,CAAmB,WAAA4B,EAAAhB,SAAnBZ,CAAmB,SAAA4B,EAAA1B,yDAWZC,CAAoB,uBC/BpB+B,EAAiB,MAL9B,MAKaA,EALb9B,cAMIC,KAAA8B,uBAAoChC,GAD3B+B,SAAiB,mBAAAZ,iBAAjBY,EAAiB,EAAjBA,EAAiB,UAAAX,EAAAa,IAAA,MAAjBF,MAAiB,UAAAX,EAAAc,IAAA,UAJhBC,KAAcC,OAIfL,CAAiB","names":["i0","ctx_r1","header","CodeExampleComponent","constructor","this","_path","isAvoid","_header","classes","path","indexOf","hidecopy","_hidecopy","hyphenatedHideCopy","capitalizedHideCopy","ngAfterViewInit","aioCode","code","content","nativeElement","innerHTML","t","core","Xpm","selectors","viewQuery","rf","ctx","CodeComponent","CodeExampleComponent_header_3_Template","language","linenums","region","CodeExampleModule","customElementComponent","oAB","cJS","CommonModule","CodeModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/code/code-example.component.ts","./src/app/custom-elements/code/code-example.module.ts"],"sourcesContent":["/* eslint-disable  @angular-eslint/component-selector */\nimport {\n    Component,\n    HostBinding,\n    ElementRef,\n    ViewChild,\n    Input,\n    AfterViewInit,\n} from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n    selector: 'code-example',\n    template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{ header }}</header>\n\n    <aio-code\n      [ngClass]=\"classes\"\n      [language]=\"language\"\n      [linenums]=\"linenums\"\n      [path]=\"path\"\n      [region]=\"region\"\n      [hideCopy]=\"hidecopy\"\n      [header]=\"header\"\n    >\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n    classes: {};\n\n    @Input() language: string;\n\n    @Input() linenums: string;\n\n    @Input() region: string;\n\n    @Input()\n    set header(header: string) {\n        this._header = header;\n        this.classes = {\n            'headed-code': !!this.header,\n            'simple-code': !this.header,\n        };\n    }\n    get header(): string {\n        return this._header;\n    }\n    private _header: string;\n\n    @Input()\n    set path(path: string) {\n        this._path = path;\n        this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n    }\n    get path(): string {\n        return this._path;\n    }\n    private _path = '';\n\n    @Input()\n    set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n        this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n    }\n    get hidecopy(): boolean {\n        return this._hidecopy;\n    }\n    private _hidecopy: boolean;\n\n    @Input('hide-copy')\n    set hyphenatedHideCopy(hidecopy: boolean) {\n        this.hidecopy = hidecopy;\n    }\n\n    @Input('hideCopy')\n    set capitalizedHideCopy(hidecopy: boolean) {\n        this.hidecopy = hidecopy;\n    }\n\n    @HostBinding('class.avoidFile') isAvoid = false;\n\n    @ViewChild('content', { static: true }) content: ElementRef;\n\n    @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n    ngAfterViewInit() {\n        this.aioCode.code = this.content.nativeElement.innerHTML;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [CommonModule, CodeModule],\n    declarations: [CodeExampleComponent],\n    exports: [CodeExampleComponent],\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = CodeExampleComponent;\n}\n"],"x_google_ignoreList":[]}