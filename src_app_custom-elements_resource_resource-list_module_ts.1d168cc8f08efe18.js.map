{"version":3,"file":"src_app_custom-elements_resource_resource-list_module_ts.1d168cc8f08efe18.js","mappings":"0PASA,MAAMA,EAAgBC,KAAqB,iBAGpC,IAAMC,EAAb,MAAM,MAAOA,EAGTC,YAAoBC,eAChBC,KAAKC,WAAaD,KAAKE,gBAGnBA,gBAEJ,MAAMD,EAAaD,KAAKD,KAAKI,IAASR,GAAeS,MACjDC,OAAIC,GAUhB,WAAsBC,GAClB,OAAOC,OAAOC,KAAKF,GAAcF,IAAIK,IACjC,MAAMC,EAAMJ,EAAaG,GACzB,MAAO,CACHE,GAAIC,EAAOH,GACXI,MAAOJ,EACPK,MAAOJ,EAAII,MACXC,cAAeC,EAAgBN,EAAIK,cAAeN,MAGrDQ,KAAKC,GApBUC,CAAad,KACzBe,UAGHpB,SAAiDqB,UAC3CrB,gDAfFJ,GAAe0B,wCAAf1B,EAAe2B,QAAf3B,EAAe,YAAfA,GAAb,GAkCA,WAAyB4B,EAAsBf,GAC3C,OAAOF,OAAOC,KAAKgB,GAAiBpB,IAAIqB,IACpC,MAAMC,EAAMF,EAAgBC,GAC5B,MAAO,CACHd,GAAIC,EAAOa,GACXZ,MAAOY,EACPX,MAAOY,EAAIZ,MACXa,UAAWC,EAAYF,EAAIC,UAAWF,EAAQhB,MAGjDQ,KAAKC,GAId,WAAqBW,EAAmBJ,EAAgBhB,GACpD,OAAOF,OAAOC,KAAKqB,GAAczB,IAAI0B,IACjC,MAAMC,EAAMF,EAAaC,GACzBC,SAAIC,SAAWvB,EACfsB,EAAIE,YAAcR,EAClBM,EAAIpB,GAAKC,EAAOkB,GACTC,IAENd,KAAKiB,GAGd,WAAqBC,EAA2BC,GAC5C,OAAOD,EAAErB,QAAUsB,EAAEtB,MAAQoB,EAAcC,EAAGC,GAAKD,EAAErB,MAAQsB,EAAEtB,MAAQ,GAAI,EAG/E,WAAuBqB,EAAoBC,GACvC,OAAOD,EAAEtB,MAAMwB,cAAgBD,EAAEvB,MAAMwB,cAAgB,GAAI,EAG/D,WAAgBxB,GACZ,OAAOA,EAAMyB,cAAcC,QAAQ,OAAQ,8BClEjCjB,kBAA6C,SAA7CA,CAA6C,QAA7CA,CAA6C,QAGnCA,SAAkBA,QACtBA,gBAAgCA,SAAqCA,8CAHbA,mCAEpDA,wBAC4BA,mEALxCA,eACEA,uBAQFA,kCAR2BA,uDAL7BA,eACEA,eACAA,gBAA8BA,SAAqBA,QAEnDA,uBAUFA,kCAb6BA,0BACGA,wBAEJA,gEAXhCA,iBAA0D,cAEtDA,eACAA,cAAIA,SAAkBA,UAGxBA,iBACEA,uBAeFA,oCApB6BA,0BACvBA,wBAIyBA,2CCChC,IAAMkB,EAAb,MAAM,MAAOA,EAMT3C,YACI4C,EACQC,0BAJZ3C,eAAY,EAKRA,KAAK0C,SAAWA,EAASE,SAASJ,QAAQ,OAAQ,IAGtDK,KAAKlC,GACD,OAAOX,KAAK0C,SAAW,IAAM/B,EAAIC,GAGrCkC,WAGI9C,KAAK2C,gBAAgB1C,WAAW8C,UAAUC,GAAQhD,KAAKC,WAAa+C,GAIxEC,SAASC,GACLlD,KAAKmD,UAAYD,IAASA,EAAOE,WAAaF,EAAOG,KAAKD,YAAc,gDAxBnEX,GAAqBlB,+CAArBkB,EAAqBa,oGAArBC,uBAAuB,waDVpChC,iBAAiC,WAE3BA,uBAwBFA,iBAxB6CA,oFCQpCkB,GAAb,GCCae,EAAb,MAAM,MAAOA,EALb1D,cAMIE,4BAAoCyC,gDAD3Be,6DAFE,CAAC3D,GAAgB4D,SAFlBC,QAIDF,GAAb","names":["resourcesPath","CONTENT_URL_PREFIX","ResourceService","constructor","http","this","categories","getCategories","get","pipe","map","data","categoryJson","Object","keys","catKey","cat","id","makeId","title","order","subCategories","mkSubCategories","sort","compareCats","mkCategories","publishLast","connect","i0","factory","subCategoryJson","subKey","sub","resources","mkResources","resourceJson","resKey","res","category","subCategory","compareTitles","l","r","toUpperCase","toLowerCase","replace","ResourceListComponent","location","resourceService","pathname","href","ngOnInit","subscribe","cats","onScroll","target","scrollPos","scrollTop","body","selectors","ctx","ResourceListModule","imports","CommonModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/resource/resource.service.ts","./src/app/custom-elements/resource/resource-list.component.html","./src/app/custom-elements/resource/resource-list.component.ts","./src/app/custom-elements/resource/resource-list.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Category, Resource, SubCategory } from './resource.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst resourcesPath = CONTENT_URL_PREFIX + 'resources.json';\n\n@Injectable()\nexport class ResourceService {\n    categories: Observable<Category[]>;\n\n    constructor(private http: HttpClient) {\n        this.categories = this.getCategories();\n    }\n\n    private getCategories(): Observable<Category[]> {\n\n        const categories = this.http.get<any>(resourcesPath).pipe(\n            map(data => mkCategories(data)),\n            publishLast(),\n        );\n\n        (categories as ConnectableObservable<Category[]>).connect();\n        return categories;\n    }\n}\n\n// Extract sorted Category[] from resource JSON data\nfunction mkCategories(categoryJson: any): Category[] {\n    return Object.keys(categoryJson).map(catKey => {\n        const cat = categoryJson[catKey];\n        return {\n            id: makeId(catKey),\n            title: catKey,\n            order: cat.order,\n            subCategories: mkSubCategories(cat.subCategories, catKey)\n        } as Category;\n    })\n        .sort(compareCats);\n}\n\n// Extract sorted SubCategory[] from JSON category data\nfunction mkSubCategories(subCategoryJson: any, catKey: string): SubCategory[] {\n    return Object.keys(subCategoryJson).map(subKey => {\n        const sub = subCategoryJson[subKey];\n        return {\n            id: makeId(subKey),\n            title: subKey,\n            order: sub.order,\n            resources: mkResources(sub.resources, subKey, catKey)\n        } as SubCategory;\n    })\n        .sort(compareCats);\n}\n\n// Extract sorted Resource[] from JSON subcategory data\nfunction mkResources(resourceJson: any, subKey: string, catKey: string): Resource[] {\n    return Object.keys(resourceJson).map(resKey => {\n        const res = resourceJson[resKey];\n        res.category = catKey;\n        res.subCategory = subKey;\n        res.id = makeId(resKey);\n        return res as Resource;\n    })\n        .sort(compareTitles);\n}\n\nfunction compareCats(l: Category | SubCategory, r: Category | SubCategory) {\n    return l.order === r.order ? compareTitles(l, r) : l.order > r.order ? 1 : -1;\n}\n\nfunction compareTitles(l: {title: string}, r: {title: string}) {\n    return l.title.toUpperCase() > r.title.toUpperCase() ? 1 : -1;\n}\n\nfunction makeId(title: string) {\n    return title.toLowerCase().replace(/\\s+/g, '-');\n}\n","<div class=\"resources-container\">\n    <div class=\"l-flex--column\">\n      <div class=\"showcase\" *ngFor=\"let category of categories\">\n        <header class=\"c-resource-header\">\n          <a class=\"h-anchor-offset\" id=\"{{category.id}}\"></a>\n          <h2>{{category.title}}</h2>\n        </header>\n\n        <div class=\"shadow-1\">\n          <div *ngFor=\"let subCategory of category.subCategories\">\n            <a class=\"h-anchor-offset\" id=\"{{subCategory.id}}\"></a>\n            <h3 class=\"subcategory-title\">{{subCategory.title}}</h3>\n\n            <div *ngFor=\"let resource of subCategory.resources\">\n              <div class=\"c-resource\" *ngIf=\"resource.rev\">\n                <a class=\"l-flex--column resource-row-link\" target=\"_blank\" [href]=\"resource.url\">\n                  <div>\n                    <h4>{{resource.title}}</h4>\n                    <p class=\"resource-description\">{{resource.desc || 'No Description'}}</p>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { PlatformLocation } from '@angular/common';\n\nimport { Category } from './resource.model';\nimport { ResourceService } from './resource.service';\n\n@Component({\n    selector: 'aio-resource-list',\n    templateUrl: 'resource-list.component.html'\n})\nexport class ResourceListComponent implements OnInit {\n\n    categories: Category[];\n    location: string;\n    scrollPos = 0;\n\n    constructor(\n        location: PlatformLocation,\n        private resourceService: ResourceService) {\n        this.location = location.pathname.replace(/^\\/+/, '');\n    }\n\n    href(cat: {id: string}) {\n        return this.location + '#' + cat.id;\n    }\n\n    ngOnInit() {\n    // Not using async pipe because cats appear twice in template\n    // No need to unsubscribe because categories observable completes.\n        this.resourceService.categories.subscribe(cats => this.categories = cats);\n    }\n\n    @HostListener('window:scroll', ['$event.target'])\n    onScroll(target: any) {\n        this.scrollPos = target ? target.scrollTop || target.body.scrollTop ||  0 : 0;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResourceListComponent } from './resource-list.component';\nimport { ResourceService } from './resource.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ResourceListComponent],\n    providers: [ResourceService],\n})\nexport class ResourceListModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = ResourceListComponent;\n}\n"]}