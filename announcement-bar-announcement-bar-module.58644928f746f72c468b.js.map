{"version":3,"sources":["./src/app/custom-elements/announcement-bar/announcement-bar.component.ts","./src/app/custom-elements/announcement-bar/announcement-bar.module.ts"],"names":["announcementsPath","http","logger","ngOnInit","this","get","pipe","catchError","error","Error","message","map","announcements","findCurrentAnnouncement","subscribe","announcement","filter","Date","startDate","valueOf","now","endDate","AnnouncementBarComponent","customElementComponent","AnnouncementBarModule"],"mappings":"iOA8CE,gBACE,gBACE,gBACA,cACA,cAAgD,qBAAU,OAC5D,OACF,Q,kBAJS,iDACF,sDACe,kDA7CxB,IAAMA,EAAoB,IAAqB,qBAsC/C,aAcE,WAAoBC,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,S,OAE9C,YAAAC,SAAA,sBACEC,KAAKH,KAAKI,IAAoBL,GAC3BM,KACC,OAAAC,EAAA,IAAW,SAAAC,GAET,OADA,EAAKN,OAAOM,MAAM,IAAIC,MAAST,EAAiB,oBAAoBQ,EAAME,UACnE,MAET,OAAAC,EAAA,IAAI,SAAAC,GAAiB,SAAKC,wBAAwBD,MAClD,OAAAL,EAAA,IAAW,SAAAC,GAET,OADA,EAAKN,OAAOM,MAAM,IAAIC,MAAST,EAAiB,2BAA2BQ,EAAME,UAC1E,OAGVI,WAAU,SAAAC,GAAgB,SAAKA,aAAeA,MAM3C,YAAAF,wBAAR,SAAgCD,GAC9B,OAAOA,EACJI,QAAO,SAAAD,GAAgB,WAAIE,KAAKF,EAAaG,WAAWC,UAAYF,KAAKG,SACzEJ,QAAO,SAAAD,GAAgB,WAAIE,KAAKF,EAAaM,SAASF,UAAYF,KAAKG,SACvE,I,sCA5BME,GAAwB,sB,uBAAxBA,EAAwB,iOARnC,sB,KAAgC,6B,qCAHlC,GC1CA,sDAMA,8BAME,KAAAC,uBAAoC,E,8BADzBC,I,oDAAAA,IAAqB,SAJvB,CAAE,IAAc,IAAc,Q,EADzC","file":"announcement-bar-announcement-bar-module.58644928f746f72c468b.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Logger } from 'app/shared/logger.service';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n\nexport interface Announcement {\n  imageUrl: string;\n  message: string;\n  linkUrl: string;\n  startDate: string;\n  endDate: string;\n}\n\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\n@Component({\n  selector: 'aio-announcement-bar',\n  template: `\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\n    <div class=\"announcement-bar\">\n      <img [src]=\"announcement.imageUrl\">\n      <p [innerHTML]=\"announcement.message\"></p>\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\n    </div>\n  </div>`\n})\nexport class AnnouncementBarComponent implements OnInit {\n  announcement: Announcement;\n\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  ngOnInit() {\n    this.http.get<Announcement[]>(announcementsPath)\n      .pipe(\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\n          return [];\n        }),\n        map(announcements => this.findCurrentAnnouncement(announcements)),\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\n          return [];\n        }),\n      )\n      .subscribe(announcement => this.announcement = announcement);\n  }\n\n  /**\n   * Get the first date in the list that is \"live\" now\n   */\n  private findCurrentAnnouncement(announcements: Announcement[]) {\n    return announcements\n      .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\n      .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())\n      [0];\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ AnnouncementBarComponent ],\n  entryComponents: [ AnnouncementBarComponent ],\n})\nexport class AnnouncementBarModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = AnnouncementBarComponent;\n}\n"],"sourceRoot":"webpack:///"}