{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm5/card.js","./node_modules/@angular/material/__ivy_ngcc__/fesm5/tabs.js","./src/app/custom-elements/code/code-tabs.component.ts","./src/app/custom-elements/code/code-tabs.module.ts"],"names":["_c0","_c1","MatCard","_animationMode","this","ɵfac","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","exportAs","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","MatCardModule","ɵmod","ɵinj","factory","imports","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","value","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r22","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r30","$event","i_r23","index","ctx_r29","_r18","_handleClick","ctx_r19","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r34","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r31","i_r32","ctx_r21","content","position","origin","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","prototype","alignToElement","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","ɵdir","MatTabContent","_super","MatTabLabel","apply","arguments","ɵMatTabLabel_BaseFactory","features","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","call","_contentPortal","_stateChanges","Subject","isActive","Object","defineProperty","get","_templateLabel","set","enumerable","configurable","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","contentQueries","dirIndex","_t","first","viewQuery","inputs","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","elementRef","dir","changeDetectorRef","_portalHost","consts","_onTranslateTabStarted","_translateTabComplete","directives","data","animation","_MatTabBodyBase","_dir","_dirChangeSubscription","_onCentering","_onCentered","change","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","MatTabGroup","defaultConfig","animationMode","_allTabs","_tabBodyWrapper","_tabHeader","dynamicHeight","headerPosition","color","provide","useExisting","_focusChanged","disablePagination","_MatTabGroupBase","_changeDetectorRef","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","forEach","tab","ngAfterContentInit","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","reset","filter","notifyOnChanges","destroy","realignInkBar","_alignInkBarToSelectedTab","merge","map","Math","min","max","tabHeight","wrapper","height","offsetHeight","tabHeader","focusIndex","idx","MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","MatTabHeader","viewportRuler","ngZone","platform","_items","_inkBar","_tabListContainer","_tabList","_nextPaginator","_previousPaginator","_showPaginationControls","selectFocusedIndex","indexFocused","_handlePaginatorClick","_handlePaginatorPress","_stopInterval","_handleKeydown","_onContentChanges","_disableScrollBefore","_disableScrollAfter","_MatTabHeaderBase","_disableRipple","_itemSelected","preventDefault","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_stopScrolling","fromEvent","takeUntil","_keyManager","updateActiveItem","ngAfterViewInit","dirChange","of","resize","realign","updatePagination","withHorizontalOrientation","withWrap","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","setLastItemActive","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","scrollLeft","scrollWidth","scrollDistance","translateX","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","_a","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","mouseEvent","button","timer","distance","maxScrollDistance","MatTabsModule","class","codeExamples","querySelectorAll","push","getTabInfo","codeComponents","codeComponent","code","tabContent","getAttribute","innerHTML","language","linenums","path","region","header","CodeTabsComponent","customElementComponent","CodeTabsModule"],"mappings":"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","file":"code-code-tabs-module.ac15c2f2cbb2a08302c0.js","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nvar _c0 = [\"*\", [[\"mat-card-footer\"]]];\nvar _c1 = [\"*\", \"mat-card-footer\"];\nvar _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nvar _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nvar _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    function MatCard(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n    /** @nocollapse */\n    MatCard.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardTitleGroup;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { __extends, __spread } from 'tslib';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nvar _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nvar _c1 = function (a0) { return { animationDuration: a0 }; };\nvar _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nvar _c3 = [\"tabBodyWrapper\"];\nvar _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    var tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r22.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    var tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r22.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); var tab_r22 = ctx.$implicit; var i_r23 = ctx.index; var ctx_r29 = ɵngcc0.ɵɵnextContext(); var _r18 = ɵngcc0.ɵɵreference(1); return ctx_r29._handleClick(tab_r22, _r18, i_r23); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var tab_r22 = ctx.$implicit;\n    var i_r23 = ctx.index;\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r19.selectedIndex == i_r23);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r19._getTabLabelId(i_r23))(\"disabled\", tab_r22.disabled)(\"matRippleDisabled\", tab_r22.disabled || ctx_r19.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r19._getTabIndex(tab_r22, i_r23))(\"aria-posinset\", i_r23 + 1)(\"aria-setsize\", ctx_r19._tabs.length)(\"aria-controls\", ctx_r19._getTabContentId(i_r23))(\"aria-selected\", ctx_r19.selectedIndex == i_r23)(\"aria-label\", tab_r22.ariaLabel || null)(\"aria-labelledby\", !tab_r22.ariaLabel && tab_r22.ariaLabelledby ? tab_r22.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r22.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r22.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    var _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var tab_r31 = ctx.$implicit;\n    var i_r32 = ctx.index;\n    var ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r21.selectedIndex == i_r32);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r21._getTabContentId(i_r32))(\"content\", tab_r31.content)(\"position\", tab_r31.position)(\"origin\", tab_r31.origin)(\"animationDuration\", ctx_r21.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r21._getTabLabelId(i_r32));\n} }\nvar _c5 = [\"tabListContainer\"];\nvar _c6 = [\"tabList\"];\nvar _c7 = [\"nextPaginator\"];\nvar _c8 = [\"previousPaginator\"];\nvar _c9 = [\"mat-tab-nav-bar\", \"\"];\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    var method = function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); };\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    MatInkBar.prototype.alignToElement = function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    MatInkBar.prototype.show = function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    MatInkBar.prototype.hide = function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    MatInkBar.prototype._setStyles = function (element) {\n        var positions = this._inkBarPositioner(element);\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\"\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatInkBar;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Decorates the `ng-template` tags and reads out the template from it. */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return MatTabContent;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to flag tab labels for use with the portal directive */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nvar MatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nvar MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        _this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        _this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        _this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"templateLabel\", {\n        /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n        get: function () { return this._templateLabel; },\n        set: function (value) {\n            // Only update the templateLabel via query if there is actually\n            // a MatTabLabel found. This works around an issue where a user may have\n            // manually set `templateLabel` during creation mode, which would then get clobbered\n            // by `undefined` when this query resolves.\n            if (value) {\n                this._templateLabel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatTab.prototype.ngOnChanges = function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    MatTab.prototype.ngOnDestroy = function () {\n        this._stateChanges.complete();\n    };\n    MatTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], textLabel: [{\n            type: Input,\n            args: ['label']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nvar matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef, _document) || this;\n        _this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        _this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    MatTabBodyPortal.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe(function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n            _this.detach();\n        });\n    };\n    /** Clean up centering subscription. */\n    MatTabBodyPortal.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(function () { return MatTabBody; }),] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () { return MatTabBody; })), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(function () { return MatTabBody; })]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nvar _MatTabBodyBase = /** @class */ (function () {\n    function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe(function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged(function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(function (event) {\n            // If the transition to the center is complete, emit an event.\n            if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                _this._onCentered.emit();\n            }\n            if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                _this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    Object.defineProperty(_MatTabBodyBase.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    _MatTabBodyBase.prototype.ngOnInit = function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    };\n    _MatTabBodyBase.prototype.ngOnDestroy = function () {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    };\n    _MatTabBodyBase.prototype._onTranslateTabStarted = function (event) {\n        var isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /** The text direction of the containing app. */\n    _MatTabBodyBase.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _MatTabBodyBase.prototype._isCenterPosition = function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _MatTabBodyBase.prototype._computePositionAnimationState = function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _MatTabBodyBase.prototype._computePositionFromOrigin = function (origin) {\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    /** @nocollapse */\n    _MatTabBodyBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    _MatTabBodyBase.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n    return _MatTabBodyBase;\n}());\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nvar MatTabBody = /** @class */ (function (_super) {\n    __extends(MatTabBody, _super);\n    function MatTabBody(elementRef, dir, changeDetectorRef) {\n        return _super.call(this, elementRef, dir, changeDetectorRef) || this;\n    }\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n    };\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n    return MatTabBody;\n}(_MatTabBodyBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nvar nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nvar MatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nvar MatTabGroupMixinBase = /** @class */ (function () {\n    function MatTabGroupMixinBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupMixinBase;\n}());\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nvar _MatTabGroupBase = /** @class */ (function (_super) {\n    __extends(_MatTabGroupBase, _super);\n    function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        _this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        _this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        _this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /** Position of the tab header. */\n        _this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        _this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        _this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        _this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        _this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabGroupBase.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: function () { return this._dynamicHeight; },\n        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"animationDuration\", {\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get: function () { return this._animationDuration; },\n        set: function (value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    _MatTabGroupBase.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(function () {\n                _this._tabs.forEach(function (tab, index) { return tab.isActive = index === indexToSelect; });\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    _MatTabGroupBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /** Listens to changes in all of the tabs. */\n    _MatTabGroupBase.prototype._subscribeToAllTabChanges = function () {\n        var _this = this;\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe(function (tabs) {\n            _this._tabs.reset(tabs.filter(function (tab) {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === _this;\n            }));\n            _this._tabs.notifyOnChanges();\n        });\n    };\n    _MatTabGroupBase.prototype.ngOnDestroy = function () {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    _MatTabGroupBase.prototype.realignInkBar = function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    _MatTabGroupBase.prototype._focusChanged = function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    _MatTabGroupBase.prototype._createChangeEvent = function (index) {\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _MatTabGroupBase.prototype._subscribeToTabLabels = function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, __spread(this._tabs.map(function (tab) { return tab._stateChanges; }))).subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    };\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _MatTabGroupBase.prototype._clampTabIndex = function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    _MatTabGroupBase.prototype._getTabLabelId = function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    _MatTabGroupBase.prototype._getTabContentId = function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _MatTabGroupBase.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    _MatTabGroupBase.prototype._removeTabBodyWrapperHeight = function () {\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    _MatTabGroupBase.prototype._handleClick = function (tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    _MatTabGroupBase.prototype._getTabIndex = function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    /** @nocollapse */\n    _MatTabGroupBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabGroupBase.propDecorators = {\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        disablePagination: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", animationDuration: \"animationDuration\", backgroundColor: \"backgroundColor\", headerPosition: \"headerPosition\", disablePagination: \"disablePagination\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], animationDuration: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], headerPosition: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }] }); })();\n    return _MatTabGroupBase;\n}(_MatTabGroupMixinBase));\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n    };\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n    return MatTabGroup;\n}(_MatTabGroupBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nvar MatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    MatTabLabelWrapper.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    MatTabLabelWrapper.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    MatTabLabelWrapper.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nvar MatPaginatedTabHeader = /** @class */ (function () {\n    function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(function () {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(_this._destroyed))\n                .subscribe(function () {\n                _this._stopInterval();\n            });\n        });\n    }\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            value = coerceNumberProperty(value);\n            if (this._selectedIndex != value) {\n                this._selectedIndexChanged = true;\n                this._selectedIndex = value;\n                if (this._keyManager) {\n                    this._keyManager.updateActiveItem(value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatPaginatedTabHeader.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('after');\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var dirChange = this._dir ? this._dir.change : of(null);\n        var resize = this._viewportRuler.change(150);\n        var realign = function () {\n            _this.updatePagination();\n            _this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentChecked = function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    MatPaginatedTabHeader.prototype.ngOnDestroy = function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    };\n    /** Handles keyboard events on the header. */\n    MatPaginatedTabHeader.prototype._handleKeydown = function (event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    MatPaginatedTabHeader.prototype._onContentChanges = function () {\n        var _this = this;\n        var textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n    };\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    MatPaginatedTabHeader.prototype.updatePagination = function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    MatPaginatedTabHeader.prototype._isValidIndex = function (index) {\n        if (!this._items) {\n            return true;\n        }\n        var tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    MatPaginatedTabHeader.prototype._setTabFocus = function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var containerEl = this._tabListContainer.nativeElement;\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    MatPaginatedTabHeader.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    MatPaginatedTabHeader.prototype._updateTabScrollPosition = function () {\n        if (this.disablePagination) {\n            return;\n        }\n        var scrollDistance = this.scrollDistance;\n        var platform = this._platform;\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: function () { return this._scrollDistance; },\n        set: function (value) {\n            this._scrollTo(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollHeader = function (direction) {\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    };\n    /** Handles click events on the pagination arrows. */\n    MatPaginatedTabHeader.prototype._handlePaginatorClick = function (direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollToLabel = function (labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var _a = selectedLabel.elementRef.nativeElement, offsetLeft = _a.offsetLeft, offsetWidth = _a.offsetWidth;\n        var labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        var beforeVisiblePos = this.scrollDistance;\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkPaginationEnabled = function () {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkScrollingControls = function () {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._getMaxScrollDistance = function () {\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    MatPaginatedTabHeader.prototype._alignInkBarToSelectedTab = function () {\n        var selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    /** Stops the currently-running paginator interval.  */\n    MatPaginatedTabHeader.prototype._stopInterval = function () {\n        this._stopScrolling.next();\n    };\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    MatPaginatedTabHeader.prototype._handlePaginatorPress = function (direction, mouseEvent) {\n        var _this = this;\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(function () {\n            var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                _this._stopInterval();\n            }\n        });\n    };\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    MatPaginatedTabHeader.prototype._scrollTo = function (position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        var maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n    };\n    /** @nocollapse */\n    MatPaginatedTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatPaginatedTabHeader.propDecorators = {\n        disablePagination: [{ type: Input }]\n    };\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n    return MatPaginatedTabHeader;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nvar _MatTabHeaderBase = /** @class */ (function (_super) {\n    __extends(_MatTabHeaderBase, _super);\n    function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabHeaderBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabHeaderBase.prototype._itemSelected = function (event) {\n        event.preventDefault();\n    };\n    /** @nocollapse */\n    _MatTabHeaderBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabHeaderBase.propDecorators = {\n        disableRipple: [{ type: Input }]\n    };\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n    return _MatTabHeaderBase;\n}(MatPaginatedTabHeader));\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener($event) { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener($event) { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener($event) { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabHeader;\n}(_MatTabHeaderBase));\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nvar _MatTabNavBase = /** @class */ (function (_super) {\n    __extends(_MatTabNavBase, _super);\n    function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        _this.color = 'primary';\n        return _this;\n    }\n    Object.defineProperty(_MatTabNavBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var classList = this._elementRef.nativeElement.classList;\n            classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabNavBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabNavBase.prototype._itemSelected = function () {\n        // noop\n    };\n    _MatTabNavBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(function () {\n            _this.updateActiveLink();\n        });\n        _super.prototype.ngAfterContentInit.call(this);\n    };\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    _MatTabNavBase.prototype.updateActiveLink = function (_element) {\n        if (!this._items) {\n            return;\n        }\n        var items = this._items.toArray();\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    };\n    /** @nocollapse */\n    _MatTabNavBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabNavBase.propDecorators = {\n        backgroundColor: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        color: [{ type: Input }]\n    };\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n    return _MatTabNavBase;\n}(MatPaginatedTabHeader));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        return _super.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabNav.propDecorators = {\n        _items: [{ type: ContentChildren, args: [forwardRef(function () { return MatTabLink; }), { descendants: true },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener($event) { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener($event) { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener($event) { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(function () { return MatTabLink; }), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabNav;\n}(_MatTabNavBase));\n// Boilerplate for applying mixins to MatTabLink.\nvar MatTabLinkMixinBase = /** @class */ (function () {\n    function MatTabLinkMixinBase() {\n    }\n    return MatTabLinkMixinBase;\n}());\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nvar _MatTabLinkBase = /** @class */ (function (_super) {\n    __extends(_MatTabLinkBase, _super);\n    function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this.elementRef = elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        _this._isActive = false;\n        _this.rippleConfig = globalRippleOptions || {};\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            _this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n        return _this;\n    }\n    Object.defineProperty(_MatTabLinkBase.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: function () { return this._isActive; },\n        set: function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this.elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabLinkBase.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get: function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabLinkBase.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    _MatTabLinkBase.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    };\n    /** @nocollapse */\n    _MatTabLinkBase.ctorParameters = function () { return [\n        { type: _MatTabNavBase },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabLinkBase.propDecorators = {\n        active: [{ type: Input }]\n    };\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n    return _MatTabLinkBase;\n}(_MatTabLinkMixinBase));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        var _this = _super.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode) || this;\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n        return _this;\n    }\n    MatTabLink.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._tabLinkRipple._removeTriggerEvents();\n    };\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatTabLink;\n}(_MatTabLinkBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatTabsModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","/* tslint:disable component-selector */\nimport {\n  Component,\n  AfterViewInit,\n  ViewChild,\n  Input,\n  ViewChildren,\n  QueryList,\n  OnInit,\n} from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string | null;\n  code: string;\n  language: string | null;\n  linenums: any;\n  path: string;\n  region: string;\n  header: string | null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input('linenums') linenums: string;\n\n  @ViewChild('content', { static: true }) content;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = this.content.nativeElement.querySelectorAll(\n      'code-pane'\n    );\n\n    for (let i = 0; i < codeExamples.length; i++) {\n      const tabContent = codeExamples[i];\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: HTMLElement): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      header: tabContent.getAttribute('header'),\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n"],"sourceRoot":"webpack:///"}