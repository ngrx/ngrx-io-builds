{
  "id": "guide/component/push",
  "title": "",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/component/push.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h3 id=\"pushpipe\">PushPipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component/push#pushpipe\"><i class=\"material-icons\">link</i></a></h3>\n<p>The <code>ngrxPush</code> pipe serves as a drop-in replacement for the <code>async</code> pipe.\nIt contains intelligent handling of change detection to enable us\nrunning in zone-full as well as zone-less mode without any changes to the code.</p>\n<p>The current way of binding an observable to the view looks like that:</p>\n<code-example language=\"html\">\n{{observable$ | async}}\n&#x3C;ng-container *ngIf=\"observable$ | async as o\">{{o}}&#x3C;/ng-container>\n&#x3C;component [<a href=\"api/store/testing/MockSelector#value\" class=\"code-anchor\">value</a>]=\"observable$ | async\">&#x3C;/component>\n</code-example>\n<p>The problem is <code>async</code> pipe just marks the component and all its ancestors as dirty.\nIt needs zone.js microtask queue to exhaust until <code>ApplicationRef.tick</code> is called to render all dirty marked components.</p>\n<p>Heavy dynamic and interactive UIs suffer from zones change detection a lot and can\nlean to bad performance or even unusable applications, but the <code>async</code> pipe does not work in zone-less mode.</p>\n<p><code>ngrxPush</code> pipe solves that problem. It can be used like shown here:</p>\n<code-example language=\"htmlmixed\">\n{{observable$ | ngrxPush}}\n&#x3C;ng-container *ngIf=\"observable$ | ngrxPush as o\">{{o}}&#x3C;/ng-container>\n&#x3C;component [<a href=\"api/store/testing/MockSelector#value\" class=\"code-anchor\">value</a>]=\"observable$ | ngrxPush\">&#x3C;/component>\n</code-example>\n<p>Included Features:</p>\n<ul>\n<li>Take observables or promises, retrieve their values and render the value to the template</li>\n<li>Handling null and undefined values in a clean unified/structured way</li>\n<li>Triggers change-detection differently if <code>zone.js</code> is present or not (<code>detectChanges</code> or <code>markForCheck</code>)</li>\n<li>Distinct same values in a row to increase performance</li>\n<li>Coalescing of change detection calls to boost performance</li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/store/testing/MockSelector#value\n - guide/component/push#pushpipe\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/component/push.md?message=docs%3A%20describe%20your%20change...\n-->"
}