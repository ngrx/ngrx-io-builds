{
  "id": "guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector",
  "title": "prefer-one-generic-in-create-for-feature-selector",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"prefer-one-generic-in-create-for-feature-selector\">prefer-one-generic-in-create-for-feature-selector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector#prefer-one-generic-in-create-for-feature-selector\"><i class=\"material-icons\">link</i></a></h1>\n<p>Prefer using a single generic to define the feature state.</p>\n<ul>\n<li><strong>Type</strong>: suggestion</li>\n<li><strong>Recommended</strong>: Yes</li>\n<li><strong>Fixable</strong>: No</li>\n<li><strong>Suggestion</strong>: Yes</li>\n<li><strong>Requires type checking</strong>: No</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p><code><a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a></code> is typically used with <code>forFeature</code>, which should not be aware about the shape of the Global Store. Most of the time, feature states are lazy-loaded. As such, they only need to know (and care) about their own shape.</p>\n<p>This doesn't affect the <a href=\"https://timdeschryver.dev/blog/sharing-data-between-modules-is-peanuts\">composability of these selectors</a> across features.\nYou can still use multiple selectors from different feature states together.</p>\n<blockquote>\n<p>Tip: If you're accessing a lazy loaded feature that isn't loaded yet, the state returned by <code><a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a></code> is <code>undefined</code>.</p>\n</blockquote>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\nconst customersFeatureState = <a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a>&#x3C;\n  GlobalStore,\n  CustomersFeatureState\n>('customers');\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\nconst customersFeatureState =\n  <a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a>&#x3C;CustomersFeatureState>('customers');\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/store/createFeatureSelector\n - guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector#prefer-one-generic-in-create-for-feature-selector\n - guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector#rule-details\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector.md?message=docs%3A%20describe%20your%20change...\n - https://timdeschryver.dev/blog/sharing-data-between-modules-is-peanuts\n-->"
}