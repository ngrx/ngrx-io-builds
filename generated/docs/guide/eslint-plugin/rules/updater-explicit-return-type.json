{
  "id": "guide/eslint-plugin/rules/updater-explicit-return-type",
  "title": "updater-explicit-return-type",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/updater-explicit-return-type.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"updater-explicit-return-type\">updater-explicit-return-type<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/updater-explicit-return-type#updater-explicit-return-type\"><i class=\"material-icons\">link</i></a></h1>\n<p><code>Updater</code> should have an explicit return type.</p>\n<ul>\n<li><strong>Type</strong>: problem</li>\n<li><strong>Fixable</strong>: No</li>\n<li><strong>Suggestion</strong>: No</li>\n<li><strong>Requires type checking</strong>: No</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/updater-explicit-return-type#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p>To enforce that the <code>updater</code> method from <code>@ngrx/component-store</code> returns the expected state interface, we must explicitly add the return type.</p>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\ninterface MoviesState {\n  movies: Movie[];\n}\n\nclass MoviesStore extends <a href=\"api/component-store/ComponentStore\" class=\"code-anchor\">ComponentStore</a>&#x3C;MoviesState> {\n  readonly addMovie = this.updater((state, movie: Movie) => ({\n    movies: [...state.movies, movie],\n    // ⚠ this doesn't throw, but is caught by the linter\n    extra: 'property',\n  }));\n}\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\ninterface MoviesState {\n  movies: Movie[];\n}\n\nclass MoviesStore extends <a href=\"api/component-store/ComponentStore\" class=\"code-anchor\">ComponentStore</a>&#x3C;MoviesState> {\n  readonly addMovie = this.updater(\n    (state, movie: Movie): MoviesState => ({\n      movies: [...state.movies, movie],\n      // ⚠ this does throw\n      extra: 'property',\n    })\n  );\n}\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/component-store/ComponentStore\n - guide/eslint-plugin/rules/updater-explicit-return-type#rule-details\n - guide/eslint-plugin/rules/updater-explicit-return-type#updater-explicit-return-type\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/updater-explicit-return-type.md?message=docs%3A%20describe%20your%20change...\n-->"
}