{
  "id": "guide/eslint-plugin/rules/no-multiple-actions-in-effects",
  "title": "no-multiple-actions-in-effects",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/no-multiple-actions-in-effects.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"no-multiple-actions-in-effects\">no-multiple-actions-in-effects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/no-multiple-actions-in-effects#no-multiple-actions-in-effects\"><i class=\"material-icons\">link</i></a></h1>\n<p><code>Effect</code> should not return multiple actions.</p>\n<ul>\n<li><strong>Type</strong>: problem</li>\n<li><strong>Recommended</strong>: Yes</li>\n<li><strong>Fixable</strong>: No</li>\n<li><strong>Suggestion</strong>: No</li>\n<li><strong>Requires type checking</strong>: Yes</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/no-multiple-actions-in-effects#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p>An Effect should map one event (action) to a single other action.\nAn action can result in several other Effects being triggered, or multiple changes in the reducer, in which case the developer might be tempted to map an Effect to several actions. A more understandable approach is to dispatch one \"combining\" action that describes what happened (a unique event), rather than multiple actions.</p>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Effects {\n  loadEmployeeList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(componentLoaded),\n      exhaustMap(() =>\n        this.dataService.loadEmployeeList().pipe(\n          switchMap((response) => [\n            loadEmployeeListSuccess(response),\n            loadCompanyList(),\n            cleanData(),\n          ]),\n          catchError((error) => loadEmployeeListError(error))\n        )\n      )\n    );\n  });\n\n  loadCompanyList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(loadCompanyList)\n      // handle loadCompanyList\n    );\n  });\n\n  cleanData$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(cleanData)\n      // handle cleanData\n    );\n  });\n\n  constructor(private readonly actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n}\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\n// in <a href=\"api/effects/EffectNotification#effect\" class=\"code-anchor\">effect</a>:\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Effects {\n  loadEmployeeList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(componentLoaded),\n      exhaustMap(() =>\n        this.dataService.loadEmployeeList().pipe(\n          map((response) => loadEmployeeListSuccess(response)),\n          catchError((error) => loadEmployeeListError(error))\n        )\n      )\n    );\n  });\n\n  // use the one dispatched action\n\n  loadCompanyList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(loadEmployeeListSuccess)\n      // handle loadCompanyList\n    );\n  });\n\n  //use the one dispatched action\n\n  cleanData$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(loadEmployeeListSuccess)\n      // handle cleanData\n    );\n  });\n\n  constructor(private readonly actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n}\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/effects/Actions\n - api/effects/EffectNotification#effect\n - api/effects/createEffect\n - api/effects/ofType\n - api/store-devtools/DevToolsFeatureOptions#export\n - guide/eslint-plugin/rules/no-multiple-actions-in-effects#no-multiple-actions-in-effects\n - guide/eslint-plugin/rules/no-multiple-actions-in-effects#rule-details\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/no-multiple-actions-in-effects.md?message=docs%3A%20describe%20your%20change...\n-->"
}