{
  "id": "guide/eslint-plugin/rules/no-effect-decorator-and-creator",
  "title": "no-effect-decorator-and-creator",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/no-effect-decorator-and-creator.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"no-effect-decorator-and-creator\">no-effect-decorator-and-creator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/no-effect-decorator-and-creator#no-effect-decorator-and-creator\"><i class=\"material-icons\">link</i></a></h1>\n<p><code>Effect</code> should use either the <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code> or the <code>@Effect</code> decorator, but not both.</p>\n<ul>\n<li><strong>Type</strong>: suggestion</li>\n<li><strong>Recommended</strong>: Yes</li>\n<li><strong>Fixable</strong>: Yes</li>\n<li><strong>Suggestion</strong>: Yes</li>\n<li><strong>Requires type checking</strong>: No</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/no-effect-decorator-and-creator#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p>There are two ways we can register an Effect in NgRx. One is using the <code>@Effect</code> decorator (this is currently deprecated), the other is with the help of the <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code>. Using both simultaneously will result in the Effect being registered twice, and the side-effect will be performed twice every time the corresponding action is dispatched.</p>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Effects {\n  @Effect() loadData$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() =>\n    this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(loadData)\n      // performing the side <a href=\"api/effects/EffectNotification#effect\" class=\"code-anchor\">effect</a>\n    )\n  );\n\n  constructor(private readonly actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n}\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Effects {\n  loadData$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(loadData),\n      // performing the side <a href=\"api/effects/EffectNotification#effect\" class=\"code-anchor\">effect</a>\n    ))\n  };\n\n  constructor(\n    private readonly actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>,\n  ) {}\n}\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/effects/Actions\n - api/effects/EffectNotification#effect\n - api/effects/createEffect\n - api/effects/ofType\n - api/store-devtools/DevToolsFeatureOptions#export\n - guide/eslint-plugin/rules/no-effect-decorator-and-creator#no-effect-decorator-and-creator\n - guide/eslint-plugin/rules/no-effect-decorator-and-creator#rule-details\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/no-effect-decorator-and-creator.md?message=docs%3A%20describe%20your%20change...\n-->"
}