{
  "id": "guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially",
  "title": "avoid-dispatching-multiple-actions-sequentially",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"avoid-dispatching-multiple-actions-sequentially\">avoid-dispatching-multiple-actions-sequentially<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially#avoid-dispatching-multiple-actions-sequentially\"><i class=\"material-icons\">link</i></a></h1>\n<p>It is recommended to only dispatch one <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a></code> at a time.</p>\n<ul>\n<li><strong>Type</strong>: suggestion</li>\n<li><strong>Fixable</strong>: No</li>\n<li><strong>Suggestion</strong>: No</li>\n<li><strong>Requires type checking</strong>: No</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p>An action should be an event that abstracts away the details of store internals.\nAn action can be a composition of several events, in which case the developer might be tempted to dispatch several actions in sequence. But a better approach is to dispatch one \"combining\" action, which exactly describes what that event entails.</p>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Component implement OnInit {\n  constructor(\n    private readonly store: <a href=\"api/store/Store\" class=\"code-anchor\">Store</a>,\n  ) {}\n\n  ngOnInit() {\n    // âš  multiple actions dispatched\n    this.store.dispatch(loadEmployeeList());\n    this.store.dispatch(loadCompanyList());\n    this.store.dispatch(cleanData());\n  }\n}\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\n// in component code:\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Component implement OnInit {\n  constructor(\n    private readonly store: <a href=\"api/store/Store\" class=\"code-anchor\">Store</a>,\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(componentLoaded());\n  }\n}\n\n// in <a href=\"api/effects/EffectNotification#effect\" class=\"code-anchor\">effect</a>:\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class Effects {\n\n  loadEmployeeList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => this.actions.pipe(\n    <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(componentLoaded),\n    exhaustMap(() => this.dataService.loadEmployeeList().pipe(\n      map(response => loadEmployeeListSuccess(response)),\n      catchError(error => loadEmployeeListError(error)),\n    )),\n  ));\n\n  loadCompanyList$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => this.actions.pipe(\n    <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(componentLoaded),\n    // handle loadCompanyList\n  ));\n\n  cleanData$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => this.actions.pipe(\n    <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(componentLoaded),\n    // handle cleanData\n  ));\n\n  constructor(\n    private readonly actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>,\n  ) {}\n}\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/effects/Actions\n - api/effects/EffectNotification#effect\n - api/effects/createEffect\n - api/effects/ofType\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store/Action\n - api/store/Store\n - guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially#avoid-dispatching-multiple-actions-sequentially\n - guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially#rule-details\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially.md?message=docs%3A%20describe%20your%20change...\n-->"
}