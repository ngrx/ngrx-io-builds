{
  "id": "guide/eslint-plugin/rules/use-effects-lifecycle-interface",
  "title": "use-effects-lifecycle-interface",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/use-effects-lifecycle-interface.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"use-effects-lifecycle-interface\">use-effects-lifecycle-interface<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/use-effects-lifecycle-interface#use-effects-lifecycle-interface\"><i class=\"material-icons\">link</i></a></h1>\n<p>Ensures classes implement lifecycle interfaces corresponding to the declared lifecycle methods.</p>\n<ul>\n<li><strong>Type</strong>: suggestion</li>\n<li><strong>Recommended</strong>: Yes</li>\n<li><strong>Fixable</strong>: Yes</li>\n<li><strong>Suggestion</strong>: No</li>\n<li><strong>Requires type checking</strong>: No</li>\n<li><strong>Configurable</strong>: No</li>\n</ul>\n<!-- Everything above this generated, do not edit -->\n<!-- MANUAL-DOC:START -->\n<h2 id=\"rule-details\">Rule Details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/use-effects-lifecycle-interface#rule-details\"><i class=\"material-icons\">link</i></a></h2>\n<p>If a class is using an effect lifecycle hook, it should implement the corresponding interface.\nThis prevents signature typos, and it's safer if the signature changes in the future.</p>\n<p>Examples of <strong>incorrect</strong> code for this rule:</p>\n<code-example language=\"ts\">\nclass <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a> {\n  ngrxOnInitEffects(): <a href=\"api/store/Action\" class=\"code-anchor\">Action</a> {\n    return { type: '[<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>] Init' };\n  }\n}\n</code-example>\n<code-example language=\"ts\">\nclass <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a> {\n  constructor(private actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n\n  ngrxOnRunEffects(resolvedEffects$: Observable&#x3C;<a href=\"api/effects/EffectNotification\" class=\"code-anchor\">EffectNotification</a>>) {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>('LOGGED_IN'),\n      exhaustMap(() =>\n        resolvedEffects$.pipe(\n          takeUntil(this.actions$.pipe(<a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>('LOGGED_OUT')))\n        )\n      )\n    );\n  }\n}\n</code-example>\n<p>Examples of <strong>correct</strong> code for this rule:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/effects/OnInitEffects\" class=\"code-anchor\">OnInitEffects</a> } from '@ngrx/effects';\n\nclass <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a> implements <a href=\"api/effects/OnInitEffects\" class=\"code-anchor\">OnInitEffects</a> {\n  ngrxOnInitEffects(): <a href=\"api/store/Action\" class=\"code-anchor\">Action</a> {\n    return { type: '[<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>] Init' };\n  }\n}\n</code-example>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/effects/OnRunEffects\" class=\"code-anchor\">OnRunEffects</a> } from '@ngrx/effects';\n\nclass <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a> implements <a href=\"api/effects/OnRunEffects\" class=\"code-anchor\">OnRunEffects</a> {\n  constructor(private actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n  ngrxOnRunEffects(resolvedEffects$: Observable&#x3C;<a href=\"api/effects/EffectNotification\" class=\"code-anchor\">EffectNotification</a>>) {\n    return this.actions$.pipe(\n      <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>('LOGGED_IN'),\n      exhaustMap(() =>\n        resolvedEffects$.pipe(\n          takeUntil(this.actions$.pipe(<a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>('LOGGED_OUT')))\n        )\n      )\n    );\n  }\n}\n</code-example>\n<h2 id=\"further-reading\">Further reading<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin/rules/use-effects-lifecycle-interface#further-reading\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"https://ngrx.io/guide/effects/lifecycle#controlling-effects\">Effect lifecycle docs</a></li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/effects/Actions\n - api/effects/Effect\n - api/effects/EffectNotification\n - api/effects/OnInitEffects\n - api/effects/OnRunEffects\n - api/effects/ofType\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/Action\n - guide/eslint-plugin/rules/use-effects-lifecycle-interface#further-reading\n - guide/eslint-plugin/rules/use-effects-lifecycle-interface#rule-details\n - guide/eslint-plugin/rules/use-effects-lifecycle-interface#use-effects-lifecycle-interface\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/eslint-plugin/rules/use-effects-lifecycle-interface.md?message=docs%3A%20describe%20your%20change...\n - https://ngrx.io/guide/effects/lifecycle#controlling-effects\n-->"
}