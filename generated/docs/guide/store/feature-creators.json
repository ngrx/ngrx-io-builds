{
  "id": "guide/store/feature-creators",
  "title": "Feature Creators",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/feature-creators.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"feature-creators\">Feature Creators<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/feature-creators#feature-creators\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"what-is-an-ngrx-feature\">What is an NgRx feature?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/feature-creators#what-is-an-ngrx-feature\"><i class=\"material-icons\">link</i></a></h2>\n<p>There are three main building blocks of global state management with <code>@ngrx/store</code>: actions, reducers, and selectors.\nFor a particular feature state, we create a reducer for handling state transitions based on the dispatched actions\nand selectors to obtain slices of the feature state. Also, we need to define a feature name needed to register\nthe feature reducer in the NgRx store. Therefore, we can consider the NgRx feature as a grouping of the feature name,\nfeature reducer, and selectors for the particular feature state.</p>\n<h2 id=\"using-feature-creator\">Using feature creator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/feature-creators#using-feature-creator\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a></code> function reduces repetitive code in selector files by generating a feature selector and child selectors\nfor each feature state property. It accepts an object containing a feature name and a feature reducer as the input argument:</p>\n<code-example header=\"books.reducer.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a>, <a href=\"api/store/createReducer\" class=\"code-anchor\">createReducer</a> } from '@ngrx/store';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Book } from './book.model';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> * as BookListPageActions from './book-list-page.actions';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> * as BooksApiActions from './books-api.actions';\n\ninterface <a href=\"api/store/State\" class=\"code-anchor\">State</a> {\n  books: Book[];\n  <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>: boolean;\n}\n\nconst initialState: <a href=\"api/store/State\" class=\"code-anchor\">State</a> = {\n  books: [],\n  <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>: false,\n};\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const booksFeature = <a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a>({\n  name: 'books',\n  reducer: <a href=\"api/store/createReducer\" class=\"code-anchor\">createReducer</a>(\n    initialState,\n    <a href=\"api/store/on\" class=\"code-anchor\">on</a>(BookListPageActions.enter, (<a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a>) => ({\n      ...state,\n      <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>: true,\n    })),\n    <a href=\"api/store/on\" class=\"code-anchor\">on</a>(BooksApiActions.loadBooksSuccess, (<a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a>, { books }) => ({\n      ...state,\n      books,\n      <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>: false,\n    }))\n  ),\n});\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const {\n  name, // feature name\n  reducer, // feature reducer\n  selectBooksState, // feature <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a>\n  selectBooks, // <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a> for `books` property\n  selectLoading, // <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a> for `<a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>` property\n} = booksFeature;\n</code-example>\n<p>An object created with the <code><a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a></code> function contains a feature name, a feature reducer, a feature selector,\nand a selector for each feature state property. All generated selectors have the \"select\" prefix, and the feature selector has\nthe \"State\" suffix. In this example, the name of the feature selector is <code>selectBooksState</code>, where \"books\" is the feature name.\nThe names of the child selectors are <code>selectBooks</code> and <code>selectLoading</code>, based on the property names of the books feature state.</p>\n<p>The generated selectors can be used independently or to create other selectors:</p>\n<code-example header=\"books.selectors.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a> } from '@ngrx/store';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { booksFeature } from './books.reducer';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const selectBookListPageViewModel = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n  booksFeature.selectBooks,\n  booksFeature.selectLoading,\n  (books, <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a>) => ({ books, <a href=\"api/data/EntityCollection#loading\" class=\"code-anchor\">loading</a> })\n);\n</code-example>\n<h2 id=\"feature-registration\">Feature registration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/feature-creators#feature-registration\"><i class=\"material-icons\">link</i></a></h2>\n<p>Registering the feature reducer in the store can be done by passing the entire feature object to the <code>StoreModule.forFeature</code> method:</p>\n<code-example header=\"books.module.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { NgModule } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/StoreModule\" class=\"code-anchor\">StoreModule</a> } from '@ngrx/store';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { booksFeature } from './books.reducer';\n\n@NgModule({\n  imports: [StoreModule.forFeature(booksFeature)],\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class BooksModule {}\n</code-example>\n<h2 id=\"restrictions\">Restrictions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/feature-creators#restrictions\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a></code> function cannot be used for features whose state contains optional properties.\nIn other words, all state properties have to be passed to the initial state object.</p>\n<p>So, if the state contains optional properties:</p>\n<code-example header=\"books.reducer.ts\">\ninterface <a href=\"api/store/State\" class=\"code-anchor\">State</a> {\n  books: Book[];\n  activeBookId?: string;\n}\n\nconst initialState: <a href=\"api/store/State\" class=\"code-anchor\">State</a> = {\n  books: [],\n};\n</code-example>\n<p>Each optional symbol (<code>?</code>) have to be replaced with <code>| null</code> or <code>| undefined</code>:</p>\n<code-example header=\"books.reducer.ts\">\ninterface <a href=\"api/store/State\" class=\"code-anchor\">State</a> {\n  books: Book[];\n  activeBookId: string | null;\n  // or activeBookId: string | undefined;\n}\n\nconst initialState: <a href=\"api/store/State\" class=\"code-anchor\">State</a> = {\n  books: [],\n  activeBookId: null,\n  // or activeBookId: undefined,\n};\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/data/EntityCollection#loading\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store-devtools/StoreDevtools#state\n - api/store/State\n - api/store/StoreModule\n - api/store/createFeature\n - api/store/createReducer\n - api/store/createSelector\n - api/store/on\n - api/store/testing/MockSelector#selector\n - guide/store/feature-creators#feature-creators\n - guide/store/feature-creators#feature-registration\n - guide/store/feature-creators#restrictions\n - guide/store/feature-creators#using-feature-creator\n - guide/store/feature-creators#what-is-an-ngrx-feature\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/feature-creators.md?message=docs%3A%20describe%20your%20change...\n-->"
}