{
  "id": "guide/store/recipes/downgrade",
  "title": "Using Store in AngularJS",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/recipes/downgrade.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"using-store-in-angularjs\">Using Store in AngularJS<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/recipes/downgrade#using-store-in-angularjs\"><i class=\"material-icons\">link</i></a></h1>\n<p>If you are working on an AngularJS to Angular conversion, you can use\n<code>@ngrx/store</code> to provide global state to your hybrid application.</p>\n<h2 id=\"downgrading-store-service\">Downgrading Store service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/recipes/downgrade#downgrading-store-service\"><i class=\"material-icons\">link</i></a></h2>\n<p>If you want to <strong>dispatch</strong> an action or <strong>select</strong> some slice of your store\nstate, you will need to downgrade the Store service to use it in the AngularJS\nparts of your application.</p>\n<code-example header=\"app.module.js\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/Store\" class=\"code-anchor\">Store</a> } from '@ngrx/store';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { downgradeInjectable } from '@angular/upgrade/static';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { module as ngModule } from 'angular';\n// app\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { MyActionClass } from 'path/to.my/file.action';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { mySelectorFunction } from 'path/to.my/file.selector';\n\n// Using the `downgradeInjectable` to create the `ngrxStoreService` factory in AngularJS\nngModule('appName').factory('ngrxStoreService', downgradeInjectable(<a href=\"api/store/Store\" class=\"code-anchor\">Store</a>));\n\n// AngularJS controller\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> default ngModule('appName').controller('AngularJSController', [\n  '$scope',\n  '$controller',\n  'ngrxStoreService',\n  function($scope, $controller, ngrxStoreService) {\n    // ...\n    ngrxStoreService.dispatch(new MyActionClass(myPayload));\n    ngrxStoreService.select(mySelectorFunction).subscribe(/*...*/);\n    // ...\n  },\n]);\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/Store\n - guide/store/recipes/downgrade#downgrading-store-service\n - guide/store/recipes/downgrade#using-store-in-angularjs\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/recipes/downgrade.md?message=docs%3A%20describe%20your%20change...\n-->"
}