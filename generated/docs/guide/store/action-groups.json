{
  "id": "guide/store/action-groups",
  "title": "Action Groups",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/action-groups.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"action-groups\">Action Groups<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/action-groups#action-groups\"><i class=\"material-icons\">link</i></a></h1>\n<div class=\"video-container\">\n  <div class=\"video-responsive-wrapper\">\n    <iframe src=\"https://www.youtube.com/embed/rk83ZMqEDV4\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen frameborder=\"0\"></iframe>\n  </div>\n</div>\n<p>The <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function creates a group of action creators with the same source.\nIt accepts an action group source and an event dictionary as input arguments, where an event is a key-value pair of an event name and event props.</p>\n<code-example header=\"products-page.actions.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>, <a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>, <a href=\"api/store/props\" class=\"code-anchor\">props</a> } from '@ngrx/store';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const ProductsPageActions = <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>({\n  source: 'Products Page',\n  events: {\n    // defining an event without payload using the `<a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>` function\n    'Opened': <a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>(),\n\n    // defining an event with payload using the `<a href=\"api/store/props\" class=\"code-anchor\">props</a>` function\n    'Pagination Changed': <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ page: number; offset: number }>(),\n\n    // defining an event with payload using the <a href=\"api/store/props\" class=\"code-anchor\">props</a> factory\n    'Query Changed': (query: string) => ({ query }),\n  },\n});\n</code-example>\n<div class=\"alert is-helpful\">\n<p>The <code><a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a></code> function is used to define an action creator without payload within an action group.</p>\n</div>\n<p>If we create a new action creator using the <code><a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a></code> function by copying the previous one but accidentally forget to change its type, the compilation will pass.\nFortunately, this is not the case with the <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function because we will get a compilation error if two actions from the same group have the same type.</p>\n<p>The <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function returns a dictionary of action creators where the name of each action creator is created by camel-casing the event name, and the action type is created using the \"[Source] Event Name\" pattern.\nAlso, there is no longer a need for barrel files or named imports because the action group can be imported directly into another file.</p>\n<code-example header=\"products.component.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Component, inject, OnInit } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/Store\" class=\"code-anchor\">Store</a> } from '@ngrx/store';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { ProductsPageActions } from './products-page.actions';\n\n@Component({ /* ... */ })\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class ProductsComponent implements OnInit {\n  private readonly store = inject(<a href=\"api/store/Store\" class=\"code-anchor\">Store</a>);\n\n  ngOnInit(): void {\n    // action type: [Products Page] Opened\n    this.store.dispatch(ProductsPageActions.opened());\n  }\n\n  onPaginationChange(page: number, offset: number): void {\n    // action type: [Products Page] Pagination Changed\n    this.store.dispatch(\n      ProductsPageActions.paginationChanged({ page, offset })\n    );\n  }\n\n  onQueryChange(query: string): void {\n    // action type: [Products Page] Query Changed\n    this.store.dispatch(ProductsPageActions.queryChanged(query));\n  }\n}\n</code-example>\n<h2 id=\"alternative-way-of-defining-event-names\">Alternative way of defining event names<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/action-groups#alternative-way-of-defining-event-names\"><i class=\"material-icons\">link</i></a></h2>\n<p>In the previous example, event names are defined in the title case format.\nIn that case, it can be challenging to search for unused action creators because their names are automatically generated by camel-casing the event names.</p>\n<p>The <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function provides the ability to define event names in the camel case format as well, so action creators will have the same names as events.\nThis makes it easier to search for their usage within the codebase.</p>\n<code-example header=\"products-api.actions.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>, <a href=\"api/store/props\" class=\"code-anchor\">props</a> } from '@ngrx/store';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Product } from './product.model';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const ProductsApiActions = <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>({\n  source: 'Products API',\n  events: {\n    productsLoadedSuccess: <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ products: Product[] }>(),\n    productsLoadedFailure: <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ errorMsg: string }>(),\n  },\n});\n\n// generated action creators:\nconst {\n  productsLoadedSuccess, // type: \"[Products API] productsLoadedSuccess\"\n  productsLoadedFailure, // type: \"[Products API] productsLoadedFailure\"\n} = ProductsApiActions;\n</code-example>\n<h2 id=\"limitations\">Limitations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/action-groups#limitations\"><i class=\"material-icons\">link</i></a></h2>\n<p>An action group uses the event names to create properties within the group that represent the action creators.\nThe action creator names are generated and are the camelCased version of the event names.\nFor example, for the event name <code>Query Changed</code>, the action creator name will be <code>queryChanged</code>.\nTherefore, it is not possible to define action creators whose names differ from their event names using the <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function.</p>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/Store\n - api/store/createAction\n - api/store/createActionGroup\n - api/store/emptyProps\n - api/store/props\n - guide/store/action-groups#action-groups\n - guide/store/action-groups#alternative-way-of-defining-event-names\n - guide/store/action-groups#limitations\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/action-groups.md?message=docs%3A%20describe%20your%20change...\n-->"
}