{
  "id": "guide/store/action-groups",
  "title": "Action Groups",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/action-groups.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"action-groups\">Action Groups<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/action-groups#action-groups\"><i class=\"material-icons\">link</i></a></h1>\n<p>Action groups is a feature to group actions together that belong to the same source. While writing actions, the actions in most of the cases looks like below.</p>\n<code-example header=\"products-page.actions.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>, <a href=\"api/store/props\" class=\"code-anchor\">props</a> } from '@ngrx/store';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const opened = <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>('[Products Page] Opened');\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const paginationChanged = <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>(\n  '[Products Page] Pagination Changed',\n  <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ page: number; offset: number }>()\n);\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const queryChanged = <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>(\n  '[Products Page] Query Changed',\n  (query: string) => ({ query })\n);\n</code-example>\n<p>In the example we can see that the source (<code>[Products Page])</code> is duplicated within each action. With the help of the <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> API this can be avoided.\nThe next example leverages <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> to group actions together that belong to the same source. This makes that defining actions is more compact.</p>\n<code-example header=\"products-page.actions.ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>, <a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>, <a href=\"api/store/props\" class=\"code-anchor\">props</a> } from '@ngrx/store';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const ProductsPageActions = <a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a>({\n  source: 'Products Page',\n  events: {\n    // defining an event without payload using the `<a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>` function\n    'Opened': <a href=\"api/store/emptyProps\" class=\"code-anchor\">emptyProps</a>(),\n    \n    // defining an event with payload using the `<a href=\"api/store/props\" class=\"code-anchor\">props</a>` function\n    'Pagination Changed': <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ page: number; offset: number }>(),\n    \n    // defining an event with payload using the <a href=\"api/store/props\" class=\"code-anchor\">props</a> factory\n    'Query Changed': (query: string) => ({ query }),\n  }\n});\n</code-example>\n<p>To dispatch an action from the group, import the group and invoke an action.\nThis returns an action that you can then dispatch to the store.</p>\n<code-example language=\"typescript\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { ProductsPageActions } from './products-page.actions';\n\n@Component({ /* ... */ })\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class ProductsComponent implements OnInit {\n  constructor(private readonly store: <a href=\"api/store/Store\" class=\"code-anchor\">Store</a>) {}\n\n ngOnInit(): void {\n    // action type: [Products Page] Opened\n    this.store.dispatch(ProductsPageActions.opened());\n  }\n  \n  onPaginationChange(page: number, offset: number): void {\n    // action type: [Products Page] Pagination Changed\n    this.store.dispatch(ProductsPageActions.paginationChanged({ page, offset }));\n  }\n  \n  onQueryChange(query: string): void {\n    // action type: [Products Page] Query Changed\n    this.store.dispatch(ProductsPageActions.queryChanged(query));\n  }\n}\n</code-example>\n<h2 id=\"limitations\">Limitations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store/action-groups#limitations\"><i class=\"material-icons\">link</i></a></h2>\n<p>An action group uses the event names to create properties within the group that represent the action creators.\nThe action creator names are generated and are the camelCased version of the event names.\nFor example, for the event name <code>Query Changed</code>, the action creator name will be <code>queryChanged</code>.\nTherefore, it is not possible to define action creators whose names differ from their event names using the <code><a href=\"api/store/createActionGroup\" class=\"code-anchor\">createActionGroup</a></code> function.</p>\n<p>You can read more about Action Groups:</p>\n<ul>\n<li><a href=\"https://dev.to/ngrx/ngrx-action-group-creator-1deh\">NgRx Action Group Creator</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=rk83ZMqEDV4\">Creating Actions with NgRx Just Got Even Easier</a></li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/Store\n - api/store/createAction\n - api/store/createActionGroup\n - api/store/emptyProps\n - api/store/props\n - guide/store/action-groups#action-groups\n - guide/store/action-groups#limitations\n - https://dev.to/ngrx/ngrx-action-group-creator-1deh\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/action-groups.md?message=docs%3A%20describe%20your%20change...\n - https://www.youtube.com/watch?v=rk83ZMqEDV4\n-->"
}