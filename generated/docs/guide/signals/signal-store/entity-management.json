{
  "id": "guide/signals/signal-store/entity-management",
  "title": "Entity Management",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/entity-management.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"entity-management\">Entity Management<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#entity-management\"><i class=\"material-icons\">link</i></a></h1>\n<p>The <code>@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a></code> plugin offers a simple and efficient way to manage entity collections with NgRx SignalStore.\nThis plugin provides the <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> feature and a set of entity updaters.</p>\n<h2 id=\"withentities-feature\"><code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> Feature<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#withentities-feature\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> feature integrates entity state into the store.\nBy default, <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> requires an entity to have an <code><a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a></code> property, which serves as a unique identifier and must be of type <code><a href=\"api/signals/entities/EntityId\" class=\"code-anchor\">EntityId</a></code> (either a <code>string</code> or a <code>number</code>).</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { computed } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a> } from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = {\n  <a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>: number;\n  text: string;\n  completed: boolean;\n};\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>&#x3C;Todo>()\n);\n\n</code-example>\n<p>The <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> feature adds the following signals to the <code>TodosStore</code>:</p>\n<ul>\n<li><code><a href=\"api/entity/EntityState#ids\" class=\"code-anchor\">ids</a>: Signal&#x3C;<a href=\"api/signals/entities/EntityId\" class=\"code-anchor\">EntityId</a>[]></code>: An array of all entity IDs.</li>\n<li><code>entityMap: Signal&#x3C;EntityMap&#x3C;Todo>></code>: A map of entities where each key is an ID.</li>\n<li><code><a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>: Signal&#x3C;Todo[]></code>: An array of all entities.</li>\n</ul>\n<p>The <code><a href=\"api/entity/EntityState#ids\" class=\"code-anchor\">ids</a></code> and <code>entityMap</code> are state slices, while <code><a href=\"api/signals/entities\" class=\"code-anchor\">entities</a></code> is a computed signal.</p>\n<h2 id=\"entity-updaters\">Entity Updaters<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#entity-updaters\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/signals/entities\" class=\"code-anchor\">entities</a></code> plugin provides a set of standalone entity updaters.\nThese functions can be used with <code><a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a></code> to facilitate entity collection updates.</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>, <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>, <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>,\n  <a href=\"api/signals/entities/removeEntities\" class=\"code-anchor\">removeEntities</a>,\n  <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>,\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>,\n} from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = { /* ... */ };\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>&#x3C;Todo>(),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    addTodo(todo: Todo): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(todo));\n    },\n    removeEmptyTodos(): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntities\" class=\"code-anchor\">removeEntities</a>(({ text }) => !text));\n    },\n    completeAllTodos(): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>({ completed: true }));\n    },\n  }))\n);\n\n</code-example>\n<h3 id=\"addentity\"><code><a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#addentity\"><i class=\"material-icons\">link</i></a></h3>\n<p>Adds an entity to the collection.\nIf the entity collection has an entity with the same ID, it is not overridden and no error is thrown.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(todo));\n</code-example>\n<h3 id=\"addentities\"><code><a href=\"api/signals/entities/addEntities\" class=\"code-anchor\">addEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#addentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Adds multiple entities to the collection.\nIf the entity collection has entities with the same IDs, they are not overridden and no error is thrown.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntities\" class=\"code-anchor\">addEntities</a>([todo1, todo2]));\n</code-example>\n<h3 id=\"setentity\"><code><a href=\"api/signals/entities/setEntity\" class=\"code-anchor\">setEntity</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#setentity\"><i class=\"material-icons\">link</i></a></h3>\n<p>Adds or replaces an entity in the collection.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/setEntity\" class=\"code-anchor\">setEntity</a>(todo));\n</code-example>\n<h3 id=\"setentities\"><code><a href=\"api/signals/entities/setEntities\" class=\"code-anchor\">setEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#setentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Adds or replaces multiple entities in the collection.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/setEntities\" class=\"code-anchor\">setEntities</a>([todo1, todo2]));\n</code-example>\n<h3 id=\"setallentities\"><code><a href=\"api/signals/entities/setAllEntities\" class=\"code-anchor\">setAllEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#setallentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Replaces the current entity collection with the provided collection.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/setAllEntities\" class=\"code-anchor\">setAllEntities</a>([todo1, todo2, todo3]));\n</code-example>\n<h3 id=\"updateentity\"><code><a href=\"api/signals/entities/updateEntity\" class=\"code-anchor\">updateEntity</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#updateentity\"><i class=\"material-icons\">link</i></a></h3>\n<p>Updates an entity in the collection by ID. Supports partial updates. No error is thrown if an entity doesn't exist.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntity\" class=\"code-anchor\">updateEntity</a>({ <a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>: 1, changes: { completed: true } })\n);\n\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntity\" class=\"code-anchor\">updateEntity</a>({\n    <a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>: 1,\n    changes: (todo) => ({ completed: !todo.completed }),\n  })\n);\n</code-example>\n<h3 id=\"updateentities\"><code><a href=\"api/signals/entities/updateEntities\" class=\"code-anchor\">updateEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#updateentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Updates multiple entities in the collection by IDs or predicate. Supports partial updates. No error is thrown if entities don't exist.</p>\n<code-example language=\"ts\">\n// update <a href=\"api/signals/entities\" class=\"code-anchor\">entities</a> by IDs\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntities\" class=\"code-anchor\">updateEntities</a>({ <a href=\"api/entity/EntityState#ids\" class=\"code-anchor\">ids</a>: [1, 2], changes: { completed: true } })\n);\n\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntities\" class=\"code-anchor\">updateEntities</a>({\n    <a href=\"api/entity/EntityState#ids\" class=\"code-anchor\">ids</a>: [1, 2],\n    changes: (todo) => ({ completed: !todo.completed }),\n  })\n);\n\n// update <a href=\"api/signals/entities\" class=\"code-anchor\">entities</a> by <a href=\"api/store-devtools/StoreDevtoolsConfig#predicate\" class=\"code-anchor\">predicate</a>\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntities\" class=\"code-anchor\">updateEntities</a>({\n    <a href=\"api/store-devtools/StoreDevtoolsConfig#predicate\" class=\"code-anchor\">predicate</a>: ({ text }) => text.endsWith('✅'),\n    changes: { text: '' },\n  })\n);\n\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateEntities\" class=\"code-anchor\">updateEntities</a>({\n    <a href=\"api/store-devtools/StoreDevtoolsConfig#predicate\" class=\"code-anchor\">predicate</a>: ({ text }) => text.endsWith('❓'),\n    changes: (todo) => ({ text: todo.text.slice(0, -1) }),\n  })\n);\n</code-example>\n<h3 id=\"updateallentities\"><code><a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#updateallentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Updates all entities in the collection. Supports partial updates. No error is thrown if entities don't exist.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>({ text: '' }));\n\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n  store,\n  <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>((todo) => ({ text: `${todo.text} ${todo.id}` }))\n);\n</code-example>\n<h3 id=\"removeentity\"><code><a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#removeentity\"><i class=\"material-icons\">link</i></a></h3>\n<p>Removes an entity from the collection by ID. No error is thrown if an entity doesn't exist.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>(1));\n</code-example>\n<h3 id=\"removeentities\"><code><a href=\"api/signals/entities/removeEntities\" class=\"code-anchor\">removeEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#removeentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Removes multiple entities from the collection by IDs or predicate. No error is thrown if entities don't exist.</p>\n<code-example language=\"ts\">\n// remove <a href=\"api/signals/entities\" class=\"code-anchor\">entities</a> by IDs\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntities\" class=\"code-anchor\">removeEntities</a>([1, 2]));\n\n// remove <a href=\"api/signals/entities\" class=\"code-anchor\">entities</a> by <a href=\"api/store-devtools/StoreDevtoolsConfig#predicate\" class=\"code-anchor\">predicate</a>\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntities\" class=\"code-anchor\">removeEntities</a>((todo) => todo.completed));\n</code-example>\n<h3 id=\"removeallentities\"><code><a href=\"api/signals/entities/removeAllEntities\" class=\"code-anchor\">removeAllEntities</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#removeallentities\"><i class=\"material-icons\">link</i></a></h3>\n<p>Removes all entities from the collection. No error is thrown if entities don't exist.</p>\n<code-example language=\"ts\">\n<a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeAllEntities\" class=\"code-anchor\">removeAllEntities</a>());\n</code-example>\n<h2 id=\"custom-entity-identifier\">Custom Entity Identifier<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#custom-entity-identifier\"><i class=\"material-icons\">link</i></a></h2>\n<p>If an entity doesn't have an identifier named <code><a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a></code>, a custom ID selector should be used.\nThe selector's return type should be either <code>string</code> or <code>number</code>.</p>\n<p>Custom ID selectors should be provided when adding, setting, or updating entities.\nTherefore, all variations of the <code>add*</code>, <code>set*</code>, and <code>update*</code> functions include an optional second argument, which is a config object that allows specifying the <code>selectId</code> function.</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>, <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>, <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/entities/addEntities\" class=\"code-anchor\">addEntities</a>,\n  <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>,\n  <a href=\"api/signals/entities/SelectEntityId\" class=\"code-anchor\">SelectEntityId</a>,\n  <a href=\"api/signals/entities/setEntity\" class=\"code-anchor\">setEntity</a>,\n  <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>,\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>,\n} from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = {\n  key: number;\n  text: string;\n  completed: boolean;\n};\n\nconst selectId: <a href=\"api/signals/entities/SelectEntityId\" class=\"code-anchor\">SelectEntityId</a>&#x3C;Todo> = (todo) => todo.key;\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>&#x3C;Todo>(),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    addTodos(todos: Todo[]): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntities\" class=\"code-anchor\">addEntities</a>(todos, { selectId }));\n    },\n    setTodo(todo: Todo): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/setEntity\" class=\"code-anchor\">setEntity</a>(todo, { selectId }));\n    },\n    completeAllTodos(): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(\n        store,\n        <a href=\"api/signals/entities/updateAllEntities\" class=\"code-anchor\">updateAllEntities</a>({ completed: true }, { selectId })\n      );\n    },\n    removeTodo(key: number): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>(key));\n    },\n  }))\n);\n\n</code-example>\n<p>The <code>remove*</code> updaters automatically select the correct identifier, so it is not necessary to provide a custom ID selector.</p>\n<h2 id=\"named-entity-collections\">Named Entity Collections<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#named-entity-collections\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> feature allows specifying a custom prefix for entity properties by providing a collection name as an input argument.</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>, <a href=\"api/signals/type\" class=\"code-anchor\">type</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a> } from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = {\n  <a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>: number;\n  text: string;\n  completed: boolean;\n};\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  // 💡 Entity <a href=\"api/signals/type\" class=\"code-anchor\">type</a> is specified using the `<a href=\"api/signals/type\" class=\"code-anchor\">type</a>` function.\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>({ entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Todo>(), collection: 'todo' }),\n);\n\n</code-example>\n<p>The names of the <code>TodosStore</code> properties are changed from <code><a href=\"api/entity/EntityState#ids\" class=\"code-anchor\">ids</a></code>, <code>entityMap</code>, and <code><a href=\"api/signals/entities\" class=\"code-anchor\">entities</a></code> to <code>todoIds</code>, <code>todoEntityMap</code>, and <code>todoEntities</code>.</p>\n<p>All updaters that operate on named entity collections require a collection name.</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>,\n  <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>,\n  <a href=\"api/signals/type\" class=\"code-anchor\">type</a>,\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>,\n} from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>, <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>, <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a> } from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = { /* ... */ };\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>({ entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Todo>(), collection: 'todo' }),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    addTodo(todo: Todo): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(todo, { collection: 'todo' }));\n    },\n    removeTodo(<a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>: number): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>(<a href=\"api/data/UpdateResponseData#id\" class=\"code-anchor\">id</a>, { collection: 'todo' }));\n    },\n  }))\n);\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p>Named entity collections allow managing multiple collections in a single store by using the <code><a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a></code> feature multiple times.</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const LibraryStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>({ entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Book>(), collection: 'book' }),\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>({ entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Author>(), collection: 'author' }),\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>({ entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Category>(), collection: 'category' }),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    addBook(book: Book): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(book, { collection: 'book' }));\n    },\n    addAuthor(author: Author): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(author, { collection: 'author' }));\n    },\n    addCategory(category: Category): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(category, { collection: 'category' }));\n    },\n  }))\n);\n</code-example>\n<p>Although it is possible to manage multiple collections in one store, in most cases, it is recommended to have dedicated stores for each entity type.</p>\n</div>\n<h2 id=\"entityconfig\"><code><a href=\"api/signals/entities/entityConfig\" class=\"code-anchor\">entityConfig</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#entityconfig\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/signals/entities/entityConfig\" class=\"code-anchor\">entityConfig</a></code> function reduces repetitive code when defining a custom entity configuration and ensures strong typing.\nIt accepts a config object where the entity type is required, and the collection name and custom ID selector are optional.</p>\n<code-example header=\"todos.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>,\n  <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>,\n  <a href=\"api/signals/type\" class=\"code-anchor\">type</a>,\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>,\n} from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>,\n  <a href=\"api/signals/entities/entityConfig\" class=\"code-anchor\">entityConfig</a>,\n  <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>,\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>,\n} from '@ngrx/signals/<a href=\"api/signals/entities\" class=\"code-anchor\">entities</a>';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> Todo = {\n  key: number;\n  text: string;\n  completed: boolean;\n};\n\nconst todoConfig = <a href=\"api/signals/entities/entityConfig\" class=\"code-anchor\">entityConfig</a>({\n  entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Todo>(),\n  collection: 'todo',\n  selectId: (todo) => todo.key,\n});\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>(todoConfig),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    addTodo(todo: Todo): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/addEntity\" class=\"code-anchor\">addEntity</a>(todo, todoConfig));\n    },\n    removeTodo(todo: Todo): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, <a href=\"api/signals/entities/removeEntity\" class=\"code-anchor\">removeEntity</a>(todo, todoConfig));\n    },\n  }))\n);\n\n</code-example>\n<h2 id=\"private-entity-collections\">Private Entity Collections<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/entity-management#private-entity-collections\"><i class=\"material-icons\">link</i></a></h2>\n<p>Private entity collections are defined by using the <code>_</code> prefix for the collection name.</p>\n<code-example language=\"ts\">\nconst todoConfig = <a href=\"api/signals/entities/entityConfig\" class=\"code-anchor\">entityConfig</a>({\n  entity: <a href=\"api/signals/type\" class=\"code-anchor\">type</a>&#x3C;Todo>(),\n  // 👇 private collection\n  collection: '_todo',\n});\n\nconst TodosStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/entities/withEntities\" class=\"code-anchor\">withEntities</a>(todoConfig),\n  <a href=\"api/signals/withComputed\" class=\"code-anchor\">withComputed</a>(({ _todoEntities }) => ({\n    // 👇 exposing entity array publicly\n    todos: _todoEntities,\n  }))\n);\n\n@Component({\n  /* ... */\n  template: `\n    &#x3C;h1>Todos&#x3C;/h1>\n    &#x3C;ngrx-todo-list [todos]=\"store.todos()\" />\n  `,\n  providers: [TodosStore],\n})\nclass TodosComponent {\n  readonly store = inject(TodosStore);\n}\n</code-example>\n<div class=\"alert is-helpful\">\n<p>Learn more about private store members in the <a href=\"/guide/signals/signal-store/private-store-members\">Private Store Members</a> guide.</p>\n</div>\n\n</div>\n\n<!-- links to this doc:\n - guide/signals\n - guide/signals/signal-store\n - guide/signals/signal-store/custom-store-features\n-->\n<!-- links from this doc:\n - /guide/signals/signal-store/private-store-members\n - api/data/UpdateResponseData#id\n - api/entity/EntityState#ids\n - api/signals/entities\n - api/signals/entities/EntityId\n - api/signals/entities/SelectEntityId\n - api/signals/entities/addEntities\n - api/signals/entities/addEntity\n - api/signals/entities/entityConfig\n - api/signals/entities/removeAllEntities\n - api/signals/entities/removeEntities\n - api/signals/entities/removeEntity\n - api/signals/entities/setAllEntities\n - api/signals/entities/setEntities\n - api/signals/entities/setEntity\n - api/signals/entities/updateAllEntities\n - api/signals/entities/updateEntities\n - api/signals/entities/updateEntity\n - api/signals/entities/withEntities\n - api/signals/patchState\n - api/signals/signalStore\n - api/signals/type\n - api/signals/withComputed\n - api/signals/withMethods\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store-devtools/StoreDevtoolsConfig#predicate\n - guide/signals/signal-store/entity-management#addentities\n - guide/signals/signal-store/entity-management#addentity\n - guide/signals/signal-store/entity-management#custom-entity-identifier\n - guide/signals/signal-store/entity-management#entity-management\n - guide/signals/signal-store/entity-management#entity-updaters\n - guide/signals/signal-store/entity-management#entityconfig\n - guide/signals/signal-store/entity-management#named-entity-collections\n - guide/signals/signal-store/entity-management#private-entity-collections\n - guide/signals/signal-store/entity-management#removeallentities\n - guide/signals/signal-store/entity-management#removeentities\n - guide/signals/signal-store/entity-management#removeentity\n - guide/signals/signal-store/entity-management#setallentities\n - guide/signals/signal-store/entity-management#setentities\n - guide/signals/signal-store/entity-management#setentity\n - guide/signals/signal-store/entity-management#updateallentities\n - guide/signals/signal-store/entity-management#updateentities\n - guide/signals/signal-store/entity-management#updateentity\n - guide/signals/signal-store/entity-management#withentities-feature\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/entity-management.md?message=docs%3A%20describe%20your%20change...\n-->"
}