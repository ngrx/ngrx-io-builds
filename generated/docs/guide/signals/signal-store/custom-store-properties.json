{
  "id": "guide/signals/signal-store/custom-store-properties",
  "title": "Custom Store Properties",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/custom-store-properties.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"custom-store-properties\">Custom Store Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/custom-store-properties#custom-store-properties\"><i class=\"material-icons\">link</i></a></h1>\n<p>The <code><a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a></code> feature can be used to add static properties, observables, dependencies, or other custom properties to a SignalStore.\nIt accepts a factory function that returns an object containing additional properties for the store.\nThe factory function receives an object containing state signals, previously defined properties, and methods as its input argument.</p>\n<h2 id=\"exposing-observables\">Exposing Observables<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/custom-store-properties#exposing-observables\"><i class=\"material-icons\">link</i></a></h2>\n<p><code><a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a></code> can be useful for exposing observables from a SignalStore, which can serve as integration points with RxJS-based APIs:</p>\n<code-example header=\"books.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { toObservable } from '@angular/core/<a href=\"api/signals/rxjs-interop\" class=\"code-anchor\">rxjs-interop</a>';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>, <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>, <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Book } from './book.model';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> BooksState = {\n  books: Book[];\n  isLoading: boolean;\n};\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const BooksStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a>&#x3C;BooksState>({ books: [], isLoading: false }),\n  <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>(({ isLoading }) => ({\n    isLoading$: toObservable(isLoading),\n  })),\n);\n\n</code-example>\n<h2 id=\"grouping-dependencies\">Grouping Dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/custom-store-properties#grouping-dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<p>Dependencies required across multiple store features can be grouped using <code><a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a></code>:</p>\n<code-example header=\"books.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { inject } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>, <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>, <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a> } from '@ngrx/signals';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/data/Logger\" class=\"code-anchor\">Logger</a> } from './logger';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Book } from './book.model';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { BooksService } from './books.service';\n\n<a href=\"api/signals/type\" class=\"code-anchor\">type</a> BooksState = {\n  books: Book[];\n  isLoading: boolean;\n};\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const BooksStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a>&#x3C;BooksState>({ books: [], isLoading: false }),\n  <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>(() => ({\n    booksService: inject(BooksService),\n    logger: inject(<a href=\"api/data/Logger\" class=\"code-anchor\">Logger</a>),\n  })),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>(({ booksService, logger, ...store }) => ({\n    async loadBooks(): Promise&#x3C;void> {\n      logger.debug('Loading books...');\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, { isLoading: true });\n      \n      const books = await booksService.getAll();\n      logger.debug('Books <a href=\"api/data/EntityCollection#loaded\" class=\"code-anchor\">loaded</a> successfully', books);\n      \n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, { books, isLoading: false });\n    },\n  })),\n  <a href=\"api/signals/withHooks\" class=\"code-anchor\">withHooks</a>({\n    onInit({ logger }) {\n      logger.debug('BooksStore initialized');\n    },\n  }),\n);\n\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/data/EntityCollection#loaded\n - api/data/Logger\n - api/signals/patchState\n - api/signals/rxjs-interop\n - api/signals/signalStore\n - api/signals/type\n - api/signals/withHooks\n - api/signals/withMethods\n - api/signals/withProps\n - api/signals/withState\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - guide/signals/signal-store/custom-store-properties#custom-store-properties\n - guide/signals/signal-store/custom-store-properties#exposing-observables\n - guide/signals/signal-store/custom-store-properties#grouping-dependencies\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/custom-store-properties.md?message=docs%3A%20describe%20your%20change...\n-->"
}