{
  "id": "guide/signals/signal-store/private-store-members",
  "title": "Private Store Members",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/private-store-members.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"private-store-members\">Private Store Members<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signals/signal-store/private-store-members#private-store-members\"><i class=\"material-icons\">link</i></a></h1>\n<p>SignalStore allows defining private members that cannot be accessed from outside the store by using the <code>_</code> prefix.\nThis includes root-level state slices, properties, and methods.</p>\n<code-tabs linenums=\"false\">\n<code-pane header=\"counter.store.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { computed } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { toObservable } from '@angular/core/<a href=\"api/signals/rxjs-interop\" class=\"code-anchor\">rxjs-interop</a>';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> {\n  <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>,\n  <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>,\n  <a href=\"api/signals/withComputed\" class=\"code-anchor\">withComputed</a>,\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>,\n  <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>,\n  <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a>,\n} from '@ngrx/signals';\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const CounterStore = <a href=\"api/signals/signalStore\" class=\"code-anchor\">signalStore</a>(\n  <a href=\"api/signals/withState\" class=\"code-anchor\">withState</a>({\n    count1: 0,\n    // üëá private state slice\n    _count2: 0,\n  }),\n  <a href=\"api/signals/withComputed\" class=\"code-anchor\">withComputed</a>(({ count1, _count2 }) => ({\n    // üëá private computed signal\n    _doubleCount1: computed(() => count1() * 2),\n    doubleCount2: computed(() => _count2() * 2),\n  })),\n  <a href=\"api/signals/withProps\" class=\"code-anchor\">withProps</a>(({ count2, _doubleCount1 }) => ({\n    // üëá private property\n    _count2$: toObservable(count2),\n    doubleCount1$: toObservable(_doubleCount1),\n  })),\n  <a href=\"api/signals/withMethods\" class=\"code-anchor\">withMethods</a>((store) => ({\n    increment1(): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, { count1: store.count1() + 1 });\n    },\n    // üëá private <a href=\"api/data/RequestData#method\" class=\"code-anchor\">method</a>\n    _increment2(): void {\n      <a href=\"api/signals/patchState\" class=\"code-anchor\">patchState</a>(store, { _count2: store._count2() + 1 });\n    },\n  })),\n);\n\n</code-pane>\n\n<code-pane header=\"counter.component.ts\">\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { Component, inject, OnInit } from '@angular/core';\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { CounterStore } from './counter.store';\n\n@Component({\n  /* ... */\n  providers: [CounterStore],\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class CounterComponent implements OnInit {\n  readonly store = inject(CounterStore);\n\n  ngOnInit(): void {\n    console.log(this.store.count1()); // ‚úÖ\n    console.log(this.store._count2()); // ‚ùå\n\n    console.log(this.store._doubleCount1()); // ‚ùå\n    console.log(this.store.doubleCount2()); // ‚úÖ\n\n    this.store._count2$.subscribe(console.log); // ‚ùå\n    this.store.doubleCount1$.subscribe(console.log); // ‚úÖ\n\n    this.store.increment1(); // ‚úÖ\n    this.store._increment2(); // ‚ùå\n  }\n}\n\n</code-pane>\n</code-tabs>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/data/RequestData#method\n - api/signals/patchState\n - api/signals/rxjs-interop\n - api/signals/signalStore\n - api/signals/withComputed\n - api/signals/withMethods\n - api/signals/withProps\n - api/signals/withState\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - guide/signals/signal-store/private-store-members#private-store-members\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/signals/signal-store/private-store-members.md?message=docs%3A%20describe%20your%20change...\n-->"
}