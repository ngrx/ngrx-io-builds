{
  "id": "guide/data/architecture-overview",
  "title": "Architecture overview",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/data/architecture-overview.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"architecture-overview\">Architecture overview<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/data/architecture-overview#architecture-overview\"><i class=\"material-icons\">link</i></a></h1>\n<p>You describe your entity model to NgRx Data in a few lines of <a href=\"guide/data/entity-metadata\">entity metadata</a> and let the library do the rest of the work.</p>\n<p>Your component injects an NgRx Data <strong><code><a href=\"api/data/EntityCollectionService\" class=\"code-anchor\">EntityCollectionService</a></code></strong> and calls one or more of the standard set of command methods for dispatching actions.</p>\n<p>Your component also subscribes to one or more of the service's <code>Observable</code> <em>selectors</em> in order to reactively process and display entity state changes produced by those commands.</p>\n<p>NgRx Data is really just NgRx under the hood. The data flows in typical NgRx fashion.\nThe following diagram illustrates the journey of a persistence <code><a href=\"api/data/EntityAction\" class=\"code-anchor\">EntityAction</a></code>\nsuch as <code><a href=\"api/data/EntityOp#QUERY_ALL\" class=\"code-anchor\">QUERY_ALL</a></code> for the <code>Hero</code> entity type.</p>\n<figure>\n  <img src=\"generated/images/guide/data/action-flow.png\" alt=\"flow diagram\" width=\"800\" height=\"358\">\n</figure>\n<ol>\n<li>\n<p>The view/component calls <a href=\"guide/data/entity-services\"><code>EntityCollectionService.getAll()</code></a>, which dispatches the hero's <code><a href=\"api/data/EntityOp#QUERY_ALL\" class=\"code-anchor\">QUERY_ALL</a></code> <a href=\"guide/data/entity-actions\">EntityAction</a> to the store.</p>\n</li>\n<li>\n<p>NgRx kicks into gear ...</p>\n<ol>\n<li>\n<p>The NgRx Data <a href=\"guide/data/entity-reducer\">EntityReducer</a> reads the action's <code>entityName</code> property (<code>Hero</code> in this example) and\nforwards the action and existing entity collection state to the <code><a href=\"api/data/EntityCollectionReducer\" class=\"code-anchor\">EntityCollectionReducer</a></code> for heroes.</p>\n</li>\n<li>\n<p>The collection reducer picks a switch-case based on the action's <code><a href=\"api/data/EntityActionPayload#entityOp\" class=\"code-anchor\">entityOp</a></code> (operation) property.\nThat case processes the action and collection state into a new (updated) hero collection.</p>\n</li>\n<li>\n<p>The store updates the <em>entity cache</em> in the state tree with that updated collection.</p>\n</li>\n<li>\n<p><em>NgRx</em> observable selectors detect and report the changes (if any) to subscribers in the view.</p>\n</li>\n</ol>\n</li>\n<li>\n<p>The original <code><a href=\"api/data/EntityAction\" class=\"code-anchor\">EntityAction</a></code> then goes to the <a href=\"guide/data/entity-effects\">EntityEffects</a>.</p>\n</li>\n<li>\n<p>The effect selects an <a href=\"guide/data/entity-dataservice\">EntityDataService</a> for that entity type. The data service sends an HTTP request to the server.</p>\n</li>\n<li>\n<p>The effect turns the HTTP response into a new <em>success</em> action with heroes (or an <em>error</em> action if the request failed).</p>\n</li>\n<li>\n<p><em>NgRx effects</em> Dispatches that action to the store, which reiterates step #2 to update the collection with heroes and refresh the view.</p>\n</li>\n</ol>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/data/EntityAction\n - api/data/EntityActionPayload#entityOp\n - api/data/EntityCollectionReducer\n - api/data/EntityCollectionService\n - api/data/EntityOp#QUERY_ALL\n - guide/data/architecture-overview#architecture-overview\n - guide/data/entity-actions\n - guide/data/entity-dataservice\n - guide/data/entity-effects\n - guide/data/entity-metadata\n - guide/data/entity-reducer\n - guide/data/entity-services\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/data/architecture-overview.md?message=docs%3A%20describe%20your%20change...\n-->"
}