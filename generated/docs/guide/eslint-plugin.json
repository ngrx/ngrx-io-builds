{
  "id": "guide/eslint-plugin",
  "title": "Overview",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/index.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"overview\">Overview<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#overview\"><i class=\"material-icons\">link</i></a></h1>\n<p>You can use <a href=\"https://eslint.org/\">ESLint</a> to follow best practices and avoid common pitfalls in your application.</p>\n<p>The NgRx ESLint Plugin is no different and promotes the key concepts to create maintainable projects.\nIt consists of <a href=\"guide/eslint-plugin#rules\">rules</a> that are grouped into predefined <a href=\"guide/eslint-plugin#configurations\">configurations</a> for each NgRx package to help you get started quickly.</p>\n<p>By default, all rules have set the severity level to <code>error</code>.\nSome rules also include a recommendation or an automatic fix using <code>ng lint --fix</code>.</p>\n<h2 id=\"configuration-and-usage\">Configuration and Usage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#configuration-and-usage\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"eslint-v8\">ESLint v8<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#eslint-v8\"><i class=\"material-icons\">link</i></a></h3>\n<p>To use the NgRx ESLint Plugin with ESLint v8, add it to your ESLint file (e.g. <code>.eslintrc.json</code>).\nAdd the <code>@ngrx</code> plugin to the <code>plugins</code> section and add the rules you want to use within your project to the <code>rules</code> section.</p>\n<code-example language=\"json\">\n{\n  \"plugins\": [\"@ngrx\"],\n  \"rules\": {\n    \"@ngrx/good-action-hygiene\": \"error\"\n  }\n}\n</code-example>\n<p>For rules that require type information, the ESLint configuration needs to provide the <code>parserOptions.project</code> property, otherwise the rule throws an error.</p>\n<code-example language=\"json\">\n{\n  \"plugins\": [\"@ngrx\"],\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"rules\": {\n    \"@ngrx/avoid-cyclic-effects\": \"error\"\n  }\n}\n</code-example>\n<p>Instead of adding rules individually, you can use one of the <a href=\"guide/eslint-plugin#configurations\">preconfigured configurations</a> by adding it to the <code>extends</code> section.\nThis automatically includes all rules of the configuration.\nTo override a specific rule, add it to the <code>rules</code> section and adjust the severity level or the configuration.</p>\n<code-example language=\"json\">\n{\n  \"extends\": [\"plugin:@ngrx/all\"],\n  \"rules\": {\n    \"@ngrx/good-action-hygiene\": \"warn\"\n  }\n}\n</code-example>\n<p>Instead of including all NgRx rules, you can also use a specific configuration for a package.\nThis is useful if you only use a specific package, as it only includes the rules relevant to that package.</p>\n<code-example language=\"json\">\n{\n  \"extends\": [\"@ngrx/signals\"]\n}\n</code-example>\n<h3 id=\"eslint-v9\">ESLint v9<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#eslint-v9\"><i class=\"material-icons\">link</i></a></h3>\n<p>To use the NgRx ESLint Plugin with ESLint v9, include the desired configurations within your ESLint configuration file (e.g. <code>eslint.config.js</code>).\nOptionally override some rules via the <code>rules</code> property.</p>\n<p>Import the NgRx Plugin via <code>@ngrx/eslint-plugin/v9</code> and use one or more predefined <a href=\"guide/eslint-plugin#configurations\">configurations</a> by adding them to the <code>extends</code> array.</p>\n<code-example language=\"ts\">\nconst tseslint = require('typescript-eslint');\nconst ngrx = require('@ngrx/eslint-plugin/v9');\n\nmodule.exports = tseslint.config({\n  files: ['**/*.ts'],\n  extends: [\n    // ðŸ‘‡ Use all rules at once\n    ...ngrx.configs.all,\n    // ðŸ‘‡ Or only <a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> the rules for a specific package\n    ...ngrx.configs.store,\n    ...ngrx.configs.effects,\n    ...ngrx.configs.componentStore,\n    ...ngrx.configs.operators,\n    ...ngrx.configs.signals,\n  ],\n  rules: {\n    // ðŸ‘‡ Configure specific rules\n    '@ngrx/with-state-no-arrays-at-root-level': 'warn',\n  },\n});\n</code-example>\n<h2 id=\"rules\">Rules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#rules\"><i class=\"material-icons\">link</i></a></h2>\n<!-- DO NOT EDIT, this table is automatically generated-->\n<!-- RULES-CONFIG:START -->\n<h3 id=\"component-store\">component-store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#component-store\"><i class=\"material-icons\">link</i></a></h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Category</th>\n<th>Fixable</th>\n<th>Has suggestions</th>\n<th>Configurable</th>\n<th>Requires type information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-combining-component-store-selectors\">@ngrx/avoid-combining-component-store-selectors</a></td>\n<td>Prefer combining selectors at the selector level.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-mapping-component-store-selectors\">@ngrx/avoid-mapping-component-store-selectors</a></td>\n<td>Avoid mapping logic outside the selector level.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/require-super-ondestroy\">@ngrx/require-super-ondestroy</a></td>\n<td>Overriden ngOnDestroy method in component stores require a call to super.ngOnDestroy().</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/updater-explicit-return-type\">@ngrx/updater-explicit-return-type</a></td>\n<td><code>Updater</code> should have an explicit return type.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"effects\">effects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#effects\"><i class=\"material-icons\">link</i></a></h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Category</th>\n<th>Fixable</th>\n<th>Has suggestions</th>\n<th>Configurable</th>\n<th>Requires type information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-cyclic-effects\">@ngrx/avoid-cyclic-effects</a></td>\n<td>Avoid <code>Effect</code> that re-emit filtered actions.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-dispatch-in-effects\">@ngrx/no-dispatch-in-effects</a></td>\n<td><code>Effect</code> should not call <code>store.dispatch</code>.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-effects-in-providers\">@ngrx/no-effects-in-providers</a></td>\n<td><code>Effect</code> should not be listed as a provider if it is added to the <code><a href=\"api/effects/EffectsModule\" class=\"code-anchor\">EffectsModule</a></code>.</td>\n<td>problem</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-multiple-actions-in-effects\">@ngrx/no-multiple-actions-in-effects</a></td>\n<td><code>Effect</code> should not return multiple actions.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-action-creator-in-of-type\">@ngrx/prefer-action-creator-in-of-type</a></td>\n<td>Using <code>action creator</code> in <code><a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a></code> is preferred over <code>string</code>.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-effect-callback-in-block-statement\">@ngrx/prefer-effect-callback-in-block-statement</a></td>\n<td>A block statement is easier to troubleshoot.</td>\n<td>suggestion</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/use-effects-lifecycle-interface\">@ngrx/use-effects-lifecycle-interface</a></td>\n<td>Ensures classes implement lifecycle interfaces corresponding to the declared lifecycle methods.</td>\n<td>suggestion</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"operators\">operators<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#operators\"><i class=\"material-icons\">link</i></a></h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Category</th>\n<th>Fixable</th>\n<th>Has suggestions</th>\n<th>Configurable</th>\n<th>Requires type information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-concat-latest-from\">@ngrx/prefer-concat-latest-from</a></td>\n<td>Use <code><a href=\"api/operators/concatLatestFrom\" class=\"code-anchor\">concatLatestFrom</a></code> instead of <code>withLatestFrom</code> to prevent the selector from firing until the correct <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a></code> is dispatched.</td>\n<td>problem</td>\n<td>Yes</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"signals\">signals<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#signals\"><i class=\"material-icons\">link</i></a></h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Category</th>\n<th>Fixable</th>\n<th>Has suggestions</th>\n<th>Configurable</th>\n<th>Requires type information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-protected-state\">@ngrx/prefer-protected-state</a></td>\n<td>A Signal Store prefers protected state</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/signal-state-no-arrays-at-root-level\">@ngrx/signal-state-no-arrays-at-root-level</a></td>\n<td>signalState should accept a record or dictionary as an input argument.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/signal-store-feature-should-use-generic-type\">@ngrx/signal-store-feature-should-use-generic-type</a></td>\n<td>A custom Signal Store feature that accepts an input should define a generic type.</td>\n<td>problem</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/with-state-no-arrays-at-root-level\">@ngrx/with-state-no-arrays-at-root-level</a></td>\n<td>withState should accept a record or dictionary as an input argument.</td>\n<td>problem</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"store\">store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#store\"><i class=\"material-icons\">link</i></a></h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Category</th>\n<th>Fixable</th>\n<th>Has suggestions</th>\n<th>Configurable</th>\n<th>Requires type information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-combining-selectors\">@ngrx/avoid-combining-selectors</a></td>\n<td>Prefer combining selectors at the selector level.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially\">@ngrx/avoid-dispatching-multiple-actions-sequentially</a></td>\n<td>It is recommended to only dispatch one <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a></code> at a time.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-duplicate-actions-in-reducer\">@ngrx/avoid-duplicate-actions-in-reducer</a></td>\n<td>A <code>Reducer</code> should handle an <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a></code> once.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/avoid-mapping-selectors\">@ngrx/avoid-mapping-selectors</a></td>\n<td>Avoid mapping logic outside the selector level.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/good-action-hygiene\">@ngrx/good-action-hygiene</a></td>\n<td>Ensures the use of good action hygiene.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-multiple-global-stores\">@ngrx/no-multiple-global-stores</a></td>\n<td>There should only be one global store injected.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-reducer-in-key-names\">@ngrx/no-reducer-in-key-names</a></td>\n<td>Avoid the word \"reducer\" in the key names.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-store-subscription\">@ngrx/no-store-subscription</a></td>\n<td>Using the <code>async</code> pipe is preferred over <code>store</code> subscription.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/no-typed-global-store\">@ngrx/no-typed-global-store</a></td>\n<td>The global store should not be typed.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/on-function-explicit-return-type\">@ngrx/on-function-explicit-return-type</a></td>\n<td><code>On</code> function should have an explicit return type.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-action-creator-in-dispatch\">@ngrx/prefer-action-creator-in-dispatch</a></td>\n<td>Using <code>action creator</code> in <code>dispatch</code> is preferred over <code>object</code> or old <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a></code>.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-action-creator\">@ngrx/prefer-action-creator</a></td>\n<td>Using <code>action creator</code> is preferred over <code><a href=\"api/store/Action\" class=\"code-anchor\">Action</a> class</code>.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-inline-action-props\">@ngrx/prefer-inline-action-props</a></td>\n<td>Prefer using inline types instead of interfaces, types or classes.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector\">@ngrx/prefer-one-generic-in-create-for-feature-selector</a></td>\n<td>Prefer using a single generic to define the feature state.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefer-selector-in-select\">@ngrx/prefer-selector-in-select</a></td>\n<td>Using a selector in the <code><a href=\"api/store/select\" class=\"code-anchor\">select</a></code> is preferred over <code>string</code> or <code><a href=\"api/store/props\" class=\"code-anchor\">props</a> drilling</code>.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/prefix-selectors-with-select\">@ngrx/prefix-selectors-with-select</a></td>\n<td>The selector should start with \"select\", for example \"selectEntity\".</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/select-style\">@ngrx/select-style</a></td>\n<td>Selector can be used either with <code><a href=\"api/store/select\" class=\"code-anchor\">select</a></code> as a pipeable operator or as a method.</td>\n<td>suggestion</td>\n<td>Yes</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a href=\"/guide/eslint-plugin/rules/use-consistent-global-store-name\">@ngrx/use-consistent-global-store-name</a></td>\n<td>Use a consistent name for the global store.</td>\n<td>suggestion</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<!-- RULES-CONFIG:END -->\n<h2 id=\"configurations\">Configurations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/eslint-plugin#configurations\"><i class=\"material-icons\">link</i></a></h2>\n<!-- DO NOT EDIT, this table is automatically generated-->\n<!-- CONFIGURATIONS-CONFIG:START -->\n<table>\n<thead>\n<tr>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/all.json\">all</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/component-store.json\">component-store</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/effects.json\">effects</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/operators.json\">operators</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/signals.json\">signals</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/store.json\">store</a></td>\n</tr>\n</tbody>\n</table>\n  <!-- CONFIGURATIONS-CONFIG:END -->\n\n</div>\n\n<!-- links to this doc:\n - docs\n-->\n<!-- links from this doc:\n - /guide/eslint-plugin/rules/avoid-combining-component-store-selectors\n - /guide/eslint-plugin/rules/avoid-combining-selectors\n - /guide/eslint-plugin/rules/avoid-cyclic-effects\n - /guide/eslint-plugin/rules/avoid-dispatching-multiple-actions-sequentially\n - /guide/eslint-plugin/rules/avoid-duplicate-actions-in-reducer\n - /guide/eslint-plugin/rules/avoid-mapping-component-store-selectors\n - /guide/eslint-plugin/rules/avoid-mapping-selectors\n - /guide/eslint-plugin/rules/good-action-hygiene\n - /guide/eslint-plugin/rules/no-dispatch-in-effects\n - /guide/eslint-plugin/rules/no-effects-in-providers\n - /guide/eslint-plugin/rules/no-multiple-actions-in-effects\n - /guide/eslint-plugin/rules/no-multiple-global-stores\n - /guide/eslint-plugin/rules/no-reducer-in-key-names\n - /guide/eslint-plugin/rules/no-store-subscription\n - /guide/eslint-plugin/rules/no-typed-global-store\n - /guide/eslint-plugin/rules/on-function-explicit-return-type\n - /guide/eslint-plugin/rules/prefer-action-creator\n - /guide/eslint-plugin/rules/prefer-action-creator-in-dispatch\n - /guide/eslint-plugin/rules/prefer-action-creator-in-of-type\n - /guide/eslint-plugin/rules/prefer-concat-latest-from\n - /guide/eslint-plugin/rules/prefer-effect-callback-in-block-statement\n - /guide/eslint-plugin/rules/prefer-inline-action-props\n - /guide/eslint-plugin/rules/prefer-one-generic-in-create-for-feature-selector\n - /guide/eslint-plugin/rules/prefer-protected-state\n - /guide/eslint-plugin/rules/prefer-selector-in-select\n - /guide/eslint-plugin/rules/prefix-selectors-with-select\n - /guide/eslint-plugin/rules/require-super-ondestroy\n - /guide/eslint-plugin/rules/select-style\n - /guide/eslint-plugin/rules/signal-state-no-arrays-at-root-level\n - /guide/eslint-plugin/rules/signal-store-feature-should-use-generic-type\n - /guide/eslint-plugin/rules/updater-explicit-return-type\n - /guide/eslint-plugin/rules/use-consistent-global-store-name\n - /guide/eslint-plugin/rules/use-effects-lifecycle-interface\n - /guide/eslint-plugin/rules/with-state-no-arrays-at-root-level\n - api/effects/EffectsModule\n - api/effects/ofType\n - api/operators/concatLatestFrom\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/Action\n - api/store/props\n - api/store/select\n - guide/eslint-plugin#component-store\n - guide/eslint-plugin#configuration-and-usage\n - guide/eslint-plugin#configurations\n - guide/eslint-plugin#effects\n - guide/eslint-plugin#eslint-v8\n - guide/eslint-plugin#eslint-v9\n - guide/eslint-plugin#operators\n - guide/eslint-plugin#overview\n - guide/eslint-plugin#rules\n - guide/eslint-plugin#signals\n - guide/eslint-plugin#store\n - https://eslint.org/\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/all.json\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/component-store.json\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/effects.json\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/operators.json\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/signals.json\n - https://github.com/ngrx/platform/blob/main/modules/eslint-plugin/src/configs/store.json\n - https://github.com/ngrx/platform/edit/main/projects/ngrx.io/content/guide/eslint-plugin/index.md?message=docs%3A%20describe%20your%20change...\n-->"
}