{
  "id": "guide/migration/v15",
  "title": "V15 Update Guide",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v15.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"v15-update-guide\">V15 Update Guide<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#v15-update-guide\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"angular-cli-update\">Angular CLI update<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#angular-cli-update\"><i class=\"material-icons\">link</i></a></h2>\n<p>NgRx supports using the Angular CLI <code>ng update</code> command to update your dependencies. Migration schematics are run to make the upgrade smoother. These schematics will fix some of the breaking changes.</p>\n<p>To update your packages to the latest released version, run the command below.</p>\n<code-example language=\"sh\">\nng update @ngrx/store@15\n</code-example>\n<h2 id=\"dependencies\">Dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<p>Version 15 has the minimum version requirements:</p>\n<ul>\n<li>Angular version 15.x</li>\n<li>Angular CLI version 15.x</li>\n<li>TypeScript version 4.8.x</li>\n<li>RxJS version ^6.5.3 || ^7.5.0</li>\n</ul>\n<h2 id=\"breaking-changes\">Breaking changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#breaking-changes\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"ngrxstore\">@ngrx/store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxstore\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"strict-selector-projector\">Strict Selector Projector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#strict-selector-projector\"><i class=\"material-icons\">link</i></a></h4>\n<p>The projector function on the selector is type-safe by default.\nThe projector function also has become strict for selectors with props.</p>\n<p>BEFORE:</p>\n<p>The projector is not type-safe, allowing for potential mismatch types in the projector function.</p>\n<code-example language=\"ts\">\nconst mySelector = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n  () => 'one',\n  () => 2,\n  (one, two) => 3\n)\n\nmySelector.projector() // &#x3C;- type is projector(...args: any[]): number\n</code-example>\n<p>AFTER:</p>\n<p>The projector is strict by default, but can be bypassed with an <code>any</code> type assertion to specify a less specific type.</p>\n<code-example language=\"ts\">\nconst mySelector = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n  () => 'one',\n  () => 2,\n  (one, two) => 3\n)\n\nmySelector.projector() // &#x3C;- Results in type error. Type is projector(s1: string, s2: number): number\n</code-example>\n<p>To retain previous behavior</p>\n<code-example language=\"ts\">\nconst mySelector = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n  () => 'one',\n  () => 2,\n  (one, two) => 3\n)\n\n(mySelector.projector as any)()\n</code-example>\n<h3 id=\"ngrxeffects\">@ngrx/effects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxeffects\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"removal-of-effect\">Removal of @Effect<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#removal-of-effect\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>@Effect</code> decorator is removed in favor of <a href=\"api/effects/createEffect\"><code>createEffect</code></a>.\nThis change also means that the ESLint rules @ngrx/no-effect-decorator-and-creator and @ngrx/no-effect-decorator are removed.</p>\n<blockquote>\n<p>A migration was added (in the v13 release) to upgrade existing codebases to the <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code> function.</p>\n</blockquote>\n<p>BEFORE:</p>\n<p>An effect is defined with the <code>@Effect</code> decorator.</p>\n<code-example language=\"ts\">\n@Effect()\ndata$ = this.actions$.pipe();\n</code-example>\n<p>AFTER:</p>\n<p>You need to define an effect with <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code>.</p>\n<code-example language=\"ts\">\ndata$ = <a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a>(() => this.actions$.pipe());\n</code-example>\n<h3 id=\"ngrxrouter-store\">@ngrx/router-store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxrouter-store\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"title\">Title<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#title\"><i class=\"material-icons\">link</i></a></h4>\n<p>BREAKING CHANGE:</p>\n<p>The property <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot#title\" class=\"code-anchor\">title</a>: string | undefined</code> is added to the <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot\" class=\"code-anchor\">MinimalActivatedRouteSnapshot</a></code> interface when a title added to the route config.</p>\n<p>BEFORE:</p>\n<p>The <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot\" class=\"code-anchor\">MinimalActivatedRouteSnapshot</a></code> interface doesn't contain the <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot#title\" class=\"code-anchor\">title</a></code> property.</p>\n<p>AFTER:</p>\n<p>The <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot\" class=\"code-anchor\">MinimalActivatedRouteSnapshot</a></code> interface contains the required <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot#title\" class=\"code-anchor\">title</a></code> property.</p>\n<h3 id=\"ngrxcomponent\">@ngrx/component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxcomponent\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"removal-of-reactivecomponentmodule\">Removal of ReactiveComponentModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#removal-of-reactivecomponentmodule\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>ReactiveComponentModule</code> is removed in favor of <a href=\"/api/component/LetModule\"><code>LetModule</code></a> and <a href=\"/api/component/PushModule\"><code>PushModule</code></a>.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { ReactiveComponentModule } from '@ngrx/component';\n\n@NgModule({\n  imports: [\n    // ... other imports\n    ReactiveComponentModule,\n  ],\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class MyFeatureModule {}\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/component/LetModule\" class=\"code-anchor\">LetModule</a>, <a href=\"api/component/PushModule\" class=\"code-anchor\">PushModule</a> } from '@ngrx/component';\n\n@NgModule({\n  imports: [\n    // ... other imports\n    <a href=\"api/component/LetModule\" class=\"code-anchor\">LetModule</a>,\n    <a href=\"api/component/PushModule\" class=\"code-anchor\">PushModule</a>,\n  ],\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class MyFeatureModule {}\n</code-example>\n<h4 id=\"renamed-letviewcontext-properties\">Renamed LetViewContext Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#renamed-letviewcontext-properties\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>$</code> prefix is removed from <code>LetViewContext</code> property names.</p>\n<p>BEFORE:</p>\n<p><code>LetViewContext</code> property names contain the <code>$</code> prefix:</p>\n<code-example language=\"html\">\n&#x3C;ng-container *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$; $error as e; $complete as c\">\n  ...\n&#x3C;/ng-container>\n</code-example>\n<p>AFTER:</p>\n<p><code>LetViewContext</code> property names don't contain the <code>$</code> prefix:</p>\n<code-example language=\"html\">\n&#x3C;ng-container *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$; error as e; complete as c\">\n  ...\n&#x3C;/ng-container>\n</code-example>\n<h4 id=\"letdirective-behavior-on-suspense-event\">LetDirective Behavior on Suspense Event<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#letdirective-behavior-on-suspense-event\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code> view will be cleared when the replaced observable is in a suspense state.\nAlso, the <code>suspense</code> property is removed from the <code>LetViewContext</code> because it would always be <code>false</code> when the <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code> view is rendered.\nInstead of <code>suspense</code> property, use <a href=\"guide/component/let#using-suspense-template\">suspense template</a> to handle the suspense state.</p>\n<p>BEFORE:</p>\n<p>The <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code> view will not be cleared when the replaced observable is in a suspense state and the suspense template is not passed:</p>\n<code-example language=\"ts\">\n@Component({\n  template: `\n    &#x3C;!-- When button is clicked, the '<a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a>' view won't be cleared. -->\n    &#x3C;!-- Instead, the <a href=\"api/store/testing/MockSelector#value\" class=\"code-anchor\">value</a> of 'o' will be 'undefined' until the replaced --> \n    &#x3C;!-- observable emits the first <a href=\"api/store/testing/MockSelector#value\" class=\"code-anchor\">value</a> (after 1 second). -->\n    &#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$ as o\">{{ o }}&#x3C;/p>\n    &#x3C;button (click)=\"replaceObs()\">Replace Observable&#x3C;/button>\n  `\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class TestComponent {\n  obs$ = of(1);\n  \n  replaceObs(): void {\n    this.obs$ = of(2).pipe(delay(1000));\n  }\n}\n</code-example>\n<p>AFTER:</p>\n<p>The <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code> view will be cleared when the replaced observable is in a suspense state and the suspense template is not passed:</p>\n<code-example language=\"ts\">\n@Component({\n  template: `\n    &#x3C;!-- When button is clicked, the '<a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a>' view will be cleared. -->\n    &#x3C;!-- The view will be created again when the replaced observable -->\n    &#x3C;!-- emits the first <a href=\"api/store/testing/MockSelector#value\" class=\"code-anchor\">value</a> (after 1 second). -->\n    &#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$ as o\">{{ o }}&#x3C;/p>\n    &#x3C;button (click)=\"replaceObs()\">Replace Observable&#x3C;/button>\n  `\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class TestComponent {\n  obs$ = of(1);\n  \n  replaceObs(): void {\n    this.obs$ = of(2).pipe(delay(1000));\n  }\n}\n</code-example>\n<h2 id=\"deprecations\">Deprecations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#deprecations\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"ngrxstore-1\">@ngrx/store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxstore-1\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"deprecated-createfeature-signature-with-root-state-introduced-in-v152\">Deprecated <code><a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a></code> Signature with Root State (Introduced in v15.2)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#deprecated-createfeature-signature-with-root-state-introduced-in-v152\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a></code> signature with root state is deprecated in favor of a signature without root state.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\ninterface AppState {\n  users: <a href=\"api/store/State\" class=\"code-anchor\">State</a>;\n}\n\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const usersFeature = <a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a>&#x3C;AppState>({\n  name: 'users',\n  reducer: <a href=\"api/store/createReducer\" class=\"code-anchor\">createReducer</a>(initialState, /* case reducers */),\n});\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> const usersFeature = <a href=\"api/store/createFeature\" class=\"code-anchor\">createFeature</a>({\n  name: 'users',\n  reducer: <a href=\"api/store/createReducer\" class=\"code-anchor\">createReducer</a>(initialState, /* case reducers */),\n});\n</code-example>\n<h4 id=\"deprecated-getmockstore-in-favor-of-createmockstore\">Deprecated <code><a href=\"api/store/testing/getMockStore\" class=\"code-anchor\">getMockStore</a></code> in favor of <code><a href=\"api/store/testing/createMockStore\" class=\"code-anchor\">createMockStore</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#deprecated-getmockstore-in-favor-of-createmockstore\"><i class=\"material-icons\">link</i></a></h4>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/testing/getMockStore\" class=\"code-anchor\">getMockStore</a> } from '@ngrx/store/testing';\nconst mockStore = <a href=\"api/store/testing/getMockStore\" class=\"code-anchor\">getMockStore</a>();\n</code-example>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/store/testing/createMockStore\" class=\"code-anchor\">createMockStore</a> } from '@ngrx/store/testing';\nconst mockStore = <a href=\"api/store/testing/createMockStore\" class=\"code-anchor\">createMockStore</a>();\n</code-example>\n<h3 id=\"ngrxrouter-store-1\">@ngrx/router-store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#ngrxrouter-store-1\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"renamed-getselectors-function-introduced-in-v152\">Renamed <code><a href=\"api/router-store/getSelectors\" class=\"code-anchor\">getSelectors</a></code> Function (Introduced in v15.2)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v15#renamed-getselectors-function-introduced-in-v152\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/router-store/getSelectors\" class=\"code-anchor\">getSelectors</a></code> function is deprecated in favor of <code><a href=\"api/router-store/getRouterSelectors\" class=\"code-anchor\">getRouterSelectors</a></code>.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/router-store/getSelectors\" class=\"code-anchor\">getSelectors</a> } from '@ngrx/router-store';\n\nconst routerSelectors = <a href=\"api/router-store/getSelectors\" class=\"code-anchor\">getSelectors</a>();\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/router-store/getRouterSelectors\" class=\"code-anchor\">getRouterSelectors</a> } from '@ngrx/router-store';\n\nconst routerSelectors = <a href=\"api/router-store/getRouterSelectors\" class=\"code-anchor\">getRouterSelectors</a>();\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/component/LetModule\n - /api/component/PushModule\n - api/component/LetDirective\n - api/component/LetModule\n - api/component/PushModule\n - api/effects/createEffect\n - api/router-store/MinimalActivatedRouteSnapshot\n - api/router-store/MinimalActivatedRouteSnapshot#title\n - api/router-store/getRouterSelectors\n - api/router-store/getSelectors\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store/State\n - api/store/createFeature\n - api/store/createReducer\n - api/store/createSelector\n - api/store/testing/MockSelector#value\n - api/store/testing/createMockStore\n - api/store/testing/getMockStore\n - guide/component/let#using-suspense-template\n - guide/migration/v15#angular-cli-update\n - guide/migration/v15#breaking-changes\n - guide/migration/v15#dependencies\n - guide/migration/v15#deprecated-createfeature-signature-with-root-state-introduced-in-v152\n - guide/migration/v15#deprecated-getmockstore-in-favor-of-createmockstore\n - guide/migration/v15#deprecations\n - guide/migration/v15#letdirective-behavior-on-suspense-event\n - guide/migration/v15#ngrxcomponent\n - guide/migration/v15#ngrxeffects\n - guide/migration/v15#ngrxrouter-store\n - guide/migration/v15#ngrxrouter-store-1\n - guide/migration/v15#ngrxstore\n - guide/migration/v15#ngrxstore-1\n - guide/migration/v15#removal-of-effect\n - guide/migration/v15#removal-of-reactivecomponentmodule\n - guide/migration/v15#renamed-getselectors-function-introduced-in-v152\n - guide/migration/v15#renamed-letviewcontext-properties\n - guide/migration/v15#strict-selector-projector\n - guide/migration/v15#title\n - guide/migration/v15#v15-update-guide\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v15.md?message=docs%3A%20describe%20your%20change...\n-->"
}