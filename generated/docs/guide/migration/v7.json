{
  "id": "guide/migration/v7",
  "title": "V7 Update Guide",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v7.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"v7-update-guide\">V7 Update Guide<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#v7-update-guide\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"angular-cli-update\">Angular CLI update<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#angular-cli-update\"><i class=\"material-icons\">link</i></a></h2>\n<p>NgRx supports using the Angular CLI <code>ng update</code> command to update your dependencies.</p>\n<p>To update your packages to the latest released version, run the command below.</p>\n<code-example language=\"sh\">\nng update @ngrx/store@7\n</code-example>\n<h2 id=\"dependencies\">Dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<p>V7 has the minimum version requirements:</p>\n<ul>\n<li>Angular version 7</li>\n<li>TypeScript version 3.1.x</li>\n<li>RxJS version 6.x</li>\n</ul>\n<h2 id=\"ngrxstore\">@ngrx/store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#ngrxstore\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"feature-loaded-action\">Feature loaded action<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#feature-loaded-action\"><i class=\"material-icons\">link</i></a></h3>\n<p>When multiple feature reducers are registered, a single action is dispatched instead of an action for each added feature reducer.</p>\n<p>BEFORE:</p>\n<p>When adding/removing one feature:</p>\n<code-example language=\"ts\">\n{type: '@ngrx/store/update-reducers', feature: 'feat1'}\n</code-example>\n<p>When adding/removing multiple features:</p>\n<code-example language=\"ts\">\n{type: '@ngrx/store/update-reducers', feature: 'feat1'}\n{type: '@ngrx/store/update-reducers', feature: 'feat2'}\n</code-example>\n<p>AFTER:</p>\n<p>When adding/removing one feature:</p>\n<code-example language=\"ts\">\n{type: '@ngrx/store/update-reducers', <a href=\"api/store-devtools/StoreDevtoolsConfig#features\" class=\"code-anchor\">features</a>: ['feat1']}\n</code-example>\n<p>When adding/removing multiple features:</p>\n<code-example language=\"ts\">\n{type: '@ngrx/store/update-reducers', <a href=\"api/store-devtools/StoreDevtoolsConfig#features\" class=\"code-anchor\">features</a>: ['feat1', 'feat2']}\n</code-example>\n<h2 id=\"ngrxeffects\">@ngrx/effects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#ngrxeffects\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"oftype-removal\"><code><a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a></code> removal<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#oftype-removal\"><i class=\"material-icons\">link</i></a></h3>\n<p>In NgRx 6.1 the <code><a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a></code> function was marked as deprecated in favor of the <code><a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a></code> operator, in NgRx v7 this function was dropped.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>, <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a> } from '@ngrx/effects';\n\n@Injectable()\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class MyEffects {\n  @<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>()\n  someEffect$: Observable&#x3C;<a href=\"api/store/Action\" class=\"code-anchor\">Action</a>> = this.actions$\n    .ofType(UserActions.LOGIN)\n    .pipe(map(() => new AnotherAction()));\n\n  constructor(private actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n}\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n<a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> { <a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>, <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>, <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a> } from '@ngrx/effects'; // <a href=\"api/store-devtools/DevToolsFeatureOptions#import\" class=\"code-anchor\">import</a> <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a> operator\n\n@Injectable()\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class MyEffects {\n  @<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a>()\n  someEffect$: Observable&#x3C;<a href=\"api/store/Action\" class=\"code-anchor\">Action</a>> = this.actions$.pipe(\n    <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a>(UserActions.LOGIN), // use the pipeable <a href=\"api/effects/ofType\" class=\"code-anchor\">ofType</a> operator\n    map(() => new AnotherAction())\n  );\n\n  constructor(private actions$: <a href=\"api/effects/Actions\" class=\"code-anchor\">Actions</a>) {}\n}\n</code-example>\n<h2 id=\"ngrxrouter-store\">@ngrx/router-store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#ngrxrouter-store\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"default-state-key\">Default state key<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#default-state-key\"><i class=\"material-icons\">link</i></a></h3>\n<p>The default NgRx router state key is changed from <code><a href=\"api/router-store/routerReducer\" class=\"code-anchor\">routerReducer</a></code> to <code>router</code>.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nStoreRouterConnectingModule.forRoot({\n  <a href=\"api/router-store/StoreRouterConfig#stateKey\" class=\"code-anchor\">stateKey</a>: 'router',\n}),\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\nStoreRouterConnectingModule.forRoot(),\n</code-example>\n<h3 id=\"activatedroutesnapshotrouteconfig\">ActivatedRouteSnapshot.RouteConfig<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#activatedroutesnapshotrouteconfig\"><i class=\"material-icons\">link</i></a></h3>\n<p>The default router serializer now returns a <code>null</code> value for <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot#routeConfig\" class=\"code-anchor\">routeConfig</a></code> when <code><a href=\"api/router-store/MinimalActivatedRouteSnapshot#routeConfig\" class=\"code-anchor\">routeConfig</a></code> doesn't exist on the <code>ActivatedRouteSnapshot</code> instead of an empty object.</p>\n<p>BEFORE:</p>\n<code-example language=\"json\">\n{\n  \"<a href=\"api/router-store/MinimalActivatedRouteSnapshot#routeConfig\" class=\"code-anchor\">routeConfig</a>\": {}\n}\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"json\">\n{\n  \"<a href=\"api/router-store/MinimalActivatedRouteSnapshot#routeConfig\" class=\"code-anchor\">routeConfig</a>\": null\n}\n</code-example>\n<h2 id=\"ngrxstore-devtools\">@ngrx/store-devtools<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#ngrxstore-devtools\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"recompute-state-action\">Recompute state action<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v7#recompute-state-action\"><i class=\"material-icons\">link</i></a></h3>\n<p>The devtools is using the new <code>@ngrx/store-devtools/recompute</code> action to recompute its state instead of the <code>@ngrx/store/update-reducers</code> action.</p>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/effects/Actions\n - api/effects/Effect\n - api/effects/ofType\n - api/router-store/MinimalActivatedRouteSnapshot#routeConfig\n - api/router-store/StoreRouterConfig#stateKey\n - api/router-store/routerReducer\n - api/store-devtools/DevToolsFeatureOptions#export\n - api/store-devtools/DevToolsFeatureOptions#import\n - api/store-devtools/StoreDevtoolsConfig#features\n - api/store/Action\n - guide/migration/v7#activatedroutesnapshotrouteconfig\n - guide/migration/v7#angular-cli-update\n - guide/migration/v7#default-state-key\n - guide/migration/v7#dependencies\n - guide/migration/v7#feature-loaded-action\n - guide/migration/v7#ngrxeffects\n - guide/migration/v7#ngrxrouter-store\n - guide/migration/v7#ngrxstore\n - guide/migration/v7#ngrxstore-devtools\n - guide/migration/v7#oftype-removal\n - guide/migration/v7#recompute-state-action\n - guide/migration/v7#v7-update-guide\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v7.md?message=docs%3A%20describe%20your%20change...\n-->"
}