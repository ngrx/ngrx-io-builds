{
  "id": "guide/migration/v14",
  "title": "V14 Update Guide",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v14.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"v14-update-guide\">V14 Update Guide<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#v14-update-guide\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"angular-cli-update\">Angular CLI update<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#angular-cli-update\"><i class=\"material-icons\">link</i></a></h2>\n<p>NgRx supports using the Angular CLI <code>ng update</code> command to update your dependencies. Migration schematics are run to make the upgrade smoother. These schematics will fix some of the breaking changes.</p>\n<p>To update your packages to the latest released version, run the command below.</p>\n<code-example language=\"sh\">\nng update @ngrx/store@14\n</code-example>\n<h2 id=\"dependencies\">Dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<p>Version 14 has the minimum version requirements:</p>\n<ul>\n<li>Angular version 14.x</li>\n<li>Angular CLI version 14.x</li>\n<li>TypeScript version 4.6.x</li>\n<li>RxJS version ^6.5.3 || ^7.5.0</li>\n</ul>\n<h2 id=\"breaking-changes\">Breaking changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#breaking-changes\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"ngrxrouter-store\">@ngrx/router-store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#ngrxrouter-store\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"default-serialized-and-serializer-names\">Default serialized and serializer names<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#default-serialized-and-serializer-names\"><i class=\"material-icons\">link</i></a></h4>\n<ul>\n<li>Renamed <code>DefaultRouterStateSerializer</code> to <code><a href=\"api/router-store/FullRouterStateSerializer\" class=\"code-anchor\">FullRouterStateSerializer</a></code> (used with <code><a href=\"api/router-store/RouterState#Full\" class=\"code-anchor\">RouterState.Full</a></code>)</li>\n<li><code><a href=\"api/router-store/MinimalRouterStateSerializer\" class=\"code-anchor\">MinimalRouterStateSerializer</a></code> is the default serializer (used with <code><a href=\"api/router-store/RouterState#Minimal\" class=\"code-anchor\">RouterState.Minimal</a></code>)</li>\n</ul>\n<div class=\"alert is-helpful\">\n  A migration is provided to rename `DefaultRouterStateSerializer` to `FullRouterStateSerializer`.\n</div>\n<h3 id=\"ngrxcomponent\">@ngrx/component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#ngrxcomponent\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"use-global-render-strategy-in-zone-less-mode\">Use global render strategy in zone-less mode<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#use-global-render-strategy-in-zone-less-mode\"><i class=\"material-icons\">link</i></a></h4>\n<p>The native local rendering strategy is replaced by global in zone-less mode for better performance.</p>\n<p>BEFORE:</p>\n<p>The change detection is triggered via <code>changeDetectorRef.detectChanges</code> in zone-less mode.</p>\n<p>AFTER:</p>\n<p>The change detection is triggered via <code>ÉµmarkDirty</code> in zone-less mode.</p>\n<h4 id=\"add-error-as-value-to-letdirectives-context\">Add error as value to <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code>'s context<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#add-error-as-value-to-letdirectives-context\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>$error</code> property from <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code>'s view context is a thrown error or <code>undefined</code> instead of <code>true</code>/<code>false</code>.</p>\n<p>BEFORE:</p>\n<code-example language=\"html\">\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$; $error as e\">{{ e }}&#x3C;/p>\n</code-example>\n<ul>\n<li><code>e</code> will be <code>true</code> when <code>obs$</code> emits error event.</li>\n<li><code>e</code> will be <code>false</code> when <code>obs$</code> emits next/complete event.</li>\n</ul>\n<p>AFTER:</p>\n<code-example language=\"html\">\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"obs$; $error as e\">{{ e }}&#x3C;/p>\n</code-example>\n<ul>\n<li><code>e</code> will be thrown error when <code>obs$</code> emits error event.</li>\n<li><code>e</code> will be <code>undefined</code> when <code>obs$</code> emits next/complete event.</li>\n</ul>\n<h4 id=\"add-ability-to-pass-non-observable-values\">add ability to pass non-observable values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#add-ability-to-pass-non-observable-values\"><i class=\"material-icons\">link</i></a></h4>\n<ol>\n<li>The context of <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code> is strongly typed when <code>null</code> or\n<code>undefined</code> is passed as input.</li>\n</ol>\n<p>BEFORE:</p>\n<code-example language=\"html\">\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"null as n\">{{ n }}&#x3C;/p>\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"undefined as u\">{{ u }}&#x3C;/p>\n</code-example>\n<ul>\n<li>The type of <code>n</code> is <code>any</code>.</li>\n<li>The type of <code>u</code> is <code>any</code>.</li>\n</ul>\n<p>AFTER:</p>\n<code-example language=\"html\">\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"null as n\">{{ n }}&#x3C;/p>\n&#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"undefined as u\">{{ u }}&#x3C;/p>\n</code-example>\n<ul>\n<li>The type of <code>n</code> is <code>null</code>.</li>\n<li>The type of <code>u</code> is <code>undefined</code>.</li>\n</ul>\n<hr>\n<ol start=\"2\">\n<li>Arrays, iterables, generator functions, and readable streams are\nnot treated as observable-like inputs anymore. To keep the same behavior\nas in v13, convert the array/iterable/generator function/readable stream\nto observable using the <code>from</code> function from the <code>rxjs</code> package\nbefore passing it to the <code><a href=\"api/component/LetDirective\" class=\"code-anchor\">LetDirective</a></code>/<code><a href=\"api/component/PushPipe\" class=\"code-anchor\">PushPipe</a></code>.</li>\n</ol>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\n@Component({\ntemplate: `\n  &#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"numbers as n\">{{ n }}&#x3C;/p>\n  &#x3C;p>{{ numbers | <a href=\"api/component/PushPipe\" class=\"code-anchor\">ngrxPush</a> }}&#x3C;/p>\n`,\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class NumbersComponent {\n    numbers = [1, 2, 3];\n}\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n@Component({\ntemplate: `\n  &#x3C;p *<a href=\"api/component/LetDirective\" class=\"code-anchor\">ngrxLet</a>=\"numbers$ as n\">{{ n }}&#x3C;/p>\n  &#x3C;p>{{ numbers$ | <a href=\"api/component/PushPipe\" class=\"code-anchor\">ngrxPush</a> }}&#x3C;/p>\n`,\n})\n<a href=\"api/store-devtools/DevToolsFeatureOptions#export\" class=\"code-anchor\">export</a> class NumbersComponent {\n    numbers$ = from([1, 2, 3]);\n}\n</code-example>\n<h3 id=\"ngrxschematics\">@ngrx/schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#ngrxschematics\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"remove-defaultcollection\">Remove <code>defaultCollection</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v14#remove-defaultcollection\"><i class=\"material-icons\">link</i></a></h4>\n<p>Removed the <code>defaultCollection</code> option in favor of <code>schematicCollections</code>.\nWhen the schematics are installed, <code>@ngrx/schematics</code> is added to the <code>schematicCollections</code> in the <code>angular.json</code> file.</p>\n<div class=\"alert is-helpful\">\n  A migration is provided to add `@ngrx/schematics` to the `schematicCollections`.\n</div>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/component/LetDirective\n - api/component/PushPipe\n - api/router-store/FullRouterStateSerializer\n - api/router-store/MinimalRouterStateSerializer\n - api/router-store/RouterState#Full\n - api/router-store/RouterState#Minimal\n - api/store-devtools/DevToolsFeatureOptions#export\n - guide/migration/v14#add-ability-to-pass-non-observable-values\n - guide/migration/v14#add-error-as-value-to-letdirectives-context\n - guide/migration/v14#angular-cli-update\n - guide/migration/v14#breaking-changes\n - guide/migration/v14#default-serialized-and-serializer-names\n - guide/migration/v14#dependencies\n - guide/migration/v14#ngrxcomponent\n - guide/migration/v14#ngrxrouter-store\n - guide/migration/v14#ngrxschematics\n - guide/migration/v14#remove-defaultcollection\n - guide/migration/v14#use-global-render-strategy-in-zone-less-mode\n - guide/migration/v14#v14-update-guide\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v14.md?message=docs%3A%20describe%20your%20change...\n-->"
}