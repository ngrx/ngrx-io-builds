{
  "id": "guide/migration/v13",
  "title": "V13 Update Guide",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v13.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"v13-update-guide\">V13 Update Guide<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#v13-update-guide\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"angular-cli-update\">Angular CLI update<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#angular-cli-update\"><i class=\"material-icons\">link</i></a></h2>\n<p>NgRx supports using the Angular CLI <code>ng update</code> command to update your dependencies. Migration schematics are run to make the upgrade smoother. These schematics will fix some of the breaking changes.</p>\n<p>To update your packages to the latest released version, run the command below.</p>\n<code-example language=\"sh\">\nng update @ngrx/store\n</code-example>\n<h2 id=\"dependencies\">Dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<p>Version 13 has the minimum version requirements:</p>\n<ul>\n<li>Angular version 13.x</li>\n<li>Angular CLI version 13.x</li>\n<li>TypeScript version 4.4.x</li>\n<li>RxJS version 7.4.x</li>\n</ul>\n<h2 id=\"breaking-changes\">Breaking changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#breaking-changes\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"ngrxstore\">@ngrx/store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxstore\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"variadic-tuple-types-for-createselector\">Variadic tuple types for createSelector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#variadic-tuple-types-for-createselector\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a></code> can now be combined with an unlimited amount of child selectors, which was previously limited to 8 child selectors.</p>\n<div class=\"alert is-helpful\">\n<p>A migration is provided to update the generic types of createSelector.</p>\n</div>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nconst <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a> = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>&#x3C;<a href=\"api/store/State\" class=\"code-anchor\">State</a>, Customer, Order[], CustomerWithOrder>\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\n//                  needs to be a tuple ðŸ‘‡\nconst <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a> =  <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>&#x3C;<a href=\"api/store/State\" class=\"code-anchor\">State</a>, [Customer, Order[]], CustomerWithOrder>\n</code-example>\n<h4 id=\"action-creator-props\">Action creator props<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#action-creator-props\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/store/props\" class=\"code-anchor\">props</a></code> of an action created with <code><a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a></code> can't be a primitive type (<code>string</code>, <code>number</code>, <code>boolean</code>).\nAdditionally, the error messages are updated to be more explicit about what is wrong.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nconst action = <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>('[Source] Event', <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;string>());\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\nconst action = <a href=\"api/store/createAction\" class=\"code-anchor\">createAction</a>('[Source] Event', <a href=\"api/store/props\" class=\"code-anchor\">props</a>&#x3C;{ name: string }>());\n</code-example>\n<h4 id=\"storemoduleforfeature-with-featureslice\">StoreModule.forFeature with FeatureSlice<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#storemoduleforfeature-with-featureslice\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/store/StoreModule#forFeature\" class=\"code-anchor\">StoreModule.forFeature()</a></code> method doesn't accept a configuration object anymore.</p>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nStoreModule.forFeature(\n  featureSlice,\n  { initialState: 100, <a href=\"api/store/StoreConfig#metaReducers\" class=\"code-anchor\">metaReducers</a>: [metaReducer] }\n);\n\nStoreModule.forFeature(\n  { name: 'feature', reducer: featureReducer },\n  { initialState: 100, <a href=\"api/store/StoreConfig#metaReducers\" class=\"code-anchor\">metaReducers</a>: [metaReducer] }\n);\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\nStoreModule.forFeature(\n  featureSlice\n);\n\nStoreModule.forFeature(\n  { name: 'feature', reducer: featureReducer },\n);\n</code-example>\n<h4 id=\"storemodule-initialstate-config\">StoreModule initialState config<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#storemodule-initialstate-config\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>initialState</code> provided via the configuration object is now typed and needs to match the interface of the state interface.</p>\n<h3 id=\"ngrxschematics\">@ngrx/schematics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxschematics\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"create-effect-migration\">create-effect-migration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#create-effect-migration\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>create-effect-migration</code> migration has been removed.\nIt's now added to the automated migration (run with <code>ng-update</code>) of the <code>@ngrx/effects</code> module.\nThis replaces all references to <code>@<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a></code> (which is deprecated) with the <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code> method.</p>\n<h3 id=\"ngrxdata\">@ngrx/data<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxdata\"><i class=\"material-icons\">link</i></a></h3>\n<p>The <code>queryManySuccess</code> query sets the <code><a href=\"api/data/EntityCollection#loaded\" class=\"code-anchor\">loaded</a></code> flag to <code>true</code>.</p>\n<h3 id=\"ngrxcomponent\">@ngrx/component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxcomponent\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"pushpipe\">PushPipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#pushpipe\"><i class=\"material-icons\">link</i></a></h4>\n<p><code>PushPipe</code> no longer has a class-level generic type parameter.\nThis change is needed to make <code>PushPipe</code> work with strict templates.\nIt affects the use of <code>PushPipe</code> outside of component templates.</p>\n<h2 id=\"deprecations\">Deprecations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#deprecations\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"ngrxstore-1\">@ngrx/store<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxstore-1\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"createfeatureselector\">createFeatureSelector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#createfeatureselector\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code><a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a>&#x3C;<a href=\"api/store/State\" class=\"code-anchor\">State</a>, FeatureState></code> method with two generics, has been deprecated.\nInstead, only provide the <code>FeatureState</code> generic.</p>\n<div class=\"alert is-helpful\">\n<p>A migration is provided to update the generic types of <code><a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a></code>.</p>\n</div>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nconst selectFeature = <a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a>&#x3C;<a href=\"api/store/State\" class=\"code-anchor\">State</a>, Feature>('feature');\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\nconst selectFeature = <a href=\"api/store/createFeatureSelector\" class=\"code-anchor\">createFeatureSelector</a>&#x3C;Feature>('feature');\n</code-example>\n<h4 id=\"selectors-with-props\">Selectors With Props<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#selectors-with-props\"><i class=\"material-icons\">link</i></a></h4>\n<p>Selectors with props are deprecated in favor of \"normal\" factory selectors.\nFactory selectors have the following benefits:</p>\n<ul>\n<li>easier to write and to teach</li>\n<li>selectors are typed</li>\n<li>child selectors are correctly memoized</li>\n</ul>\n<p>BEFORE:</p>\n<code-example language=\"ts\">\nconst selectCustomer = <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n    selectCustomers,\n    (customers, <a href=\"api/store/props\" class=\"code-anchor\">props</a>: { customerId: number }) => {\n      return customers[props.customerId];\n    }\n);\n\n// Or if the <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a> is already defined as a factory <a href=\"api/store/testing/MockSelector#selector\" class=\"code-anchor\">selector</a>\n\nconst selectCustomer = () =>\n  <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n    selectCustomers,\n    (customers, <a href=\"api/store/props\" class=\"code-anchor\">props</a>: { customerId: number }) => {\n      return customers[props.customerId];\n    }\n  );\n</code-example>\n<p>AFTER:</p>\n<code-example language=\"ts\">\nconst selectCustomer = (customerId: number) =>\n  <a href=\"api/store/createSelector\" class=\"code-anchor\">createSelector</a>(\n    selectCustomers,\n    (customers) => {\n      return customers[customerId];\n    }\n  );\n</code-example>\n<h3 id=\"ngrxeffects\">@ngrx/effects<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#ngrxeffects\"><i class=\"material-icons\">link</i></a></h3>\n<h4 id=\"effect-decorator\">@Effect decorator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration/v13#effect-decorator\"><i class=\"material-icons\">link</i></a></h4>\n<p>The <code>@<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a></code> decorator is deprecated in favor of <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code>.\nSee the <a href=\"/guide/effects#writing-effects\">docs</a> for more info.</p>\n<div class=\"alert is-helpful\">\n<p>A migration is provided to update to remove the <code>@<a href=\"api/effects/Effect\" class=\"code-anchor\">Effect</a></code> decorator, and to wrap the effect within a <code><a href=\"api/effects/createEffect\" class=\"code-anchor\">createEffect</a></code> method.</p>\n</div>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /guide/effects#writing-effects\n - api/data/EntityCollection#loaded\n - api/effects/Effect\n - api/effects/createEffect\n - api/store/State\n - api/store/StoreConfig#metaReducers\n - api/store/StoreModule#forFeature\n - api/store/createAction\n - api/store/createFeatureSelector\n - api/store/createSelector\n - api/store/props\n - api/store/testing/MockSelector#selector\n - guide/migration/v13#action-creator-props\n - guide/migration/v13#angular-cli-update\n - guide/migration/v13#breaking-changes\n - guide/migration/v13#create-effect-migration\n - guide/migration/v13#createfeatureselector\n - guide/migration/v13#dependencies\n - guide/migration/v13#deprecations\n - guide/migration/v13#effect-decorator\n - guide/migration/v13#ngrxcomponent\n - guide/migration/v13#ngrxdata\n - guide/migration/v13#ngrxeffects\n - guide/migration/v13#ngrxschematics\n - guide/migration/v13#ngrxstore\n - guide/migration/v13#ngrxstore-1\n - guide/migration/v13#pushpipe\n - guide/migration/v13#selectors-with-props\n - guide/migration/v13#storemodule-initialstate-config\n - guide/migration/v13#storemoduleforfeature-with-featureslice\n - guide/migration/v13#v13-update-guide\n - guide/migration/v13#variadic-tuple-types-for-createselector\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/migration/v13.md?message=docs%3A%20describe%20your%20change...\n-->"
}