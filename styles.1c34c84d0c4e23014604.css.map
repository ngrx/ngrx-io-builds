{"version":3,"sources":["./src/styles/2-modules/_details.scss","./src/styles.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./src/styles/_ngrx.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/styles/0-base/_typography.scss","./src/styles/_mixins.scss","./src/styles/_constants.scss","./src/styles/1-layouts/_api-pages.scss","./src/styles/1-layouts/_content-layout.scss","./src/styles/1-layouts/_doc-viewer.scss","./src/styles/1-layouts/_footer.scss","./src/styles/1-layouts/_layout-global.scss","./src/styles/1-layouts/_marketing-layout.scss","./src/styles/1-layouts/_homepage.scss","./src/styles/1-layouts/_not-found.scss","./src/styles/1-layouts/_sidenav.scss","./src/styles/1-layouts/_table-of-contents.scss","./src/styles/1-layouts/_top-menu.scss","./src/styles/2-modules/_alert.scss","./src/styles/2-modules/_api-pages.scss","./src/styles/2-modules/_api-list.scss","./src/styles/2-modules/_buttons.scss","./src/styles/2-modules/_callout.scss","./src/styles/2-modules/_card.scss","./src/styles/2-modules/_code.scss","./src/styles/2-modules/_contribute.scss","./src/styles/2-modules/_contributor.scss","./src/styles/2-modules/_edit-page-cta.scss","./src/styles/2-modules/_features.scss","./src/styles/2-modules/_filetree.scss","./src/styles/2-modules/_heading-anchors.scss","./src/styles/2-modules/_hr.scss","./src/styles/2-modules/_images.scss","./src/styles/2-modules/_progress-bar.scss","./src/styles/2-modules/_table.scss","./src/styles/2-modules/_presskit.scss","./src/styles/2-modules/_resources.scss","./src/styles/2-modules/_scrollbar.scss","./src/styles/2-modules/_search-results.scss","./src/styles/2-modules/_toc.scss","./src/styles/2-modules/_select-menu.scss","./src/styles/2-modules/_deploy-theme.scss","./src/styles/2-modules/_notification.scss","./src/styles/2-modules/_label.scss","./src/styles/_print.scss"],"names":[],"mappings":"AA6BE,gBCgnQF,CCx8PI,kLAvEF,4CAEA,qBD6PF,CChLI,yHA/EF,4CAEA,qBDiQF,CErRM,oPA3DJ,kFAIA,gDAGA,qBFyWF,CE9SM,iKAlEJ,oFAIA,gDAGA,qBF8WF,CE3SM,0JA1EJ,oFAIA,gDAGA,qBFmXF,CEpRE,aAGM,oPAzFN,2CF0XA,CE1RM,iKAhGN,2CF6XA,CErRM,0JAxGN,0CFgYA,CACF,CG1WM,gPAlCJ,2CAEA,qBHsZF,CG7WM,wJA3CJ,2CAEA,qBH0ZF,CI5VM,sPAzCJ,4CAEA,qBJgZF,CIhWM,2JAlDJ,4CAEA,qBJoZF,CKhcE;EAA0C,KL6xB5C,CK5xBE;EAAwC,KL+xB1C,CM/tBI,wEACE,gBNixCN,COtyCI,4BACE,WPorDN,COlrDM,yCACE,WPorDR,CQ5sDI,yBACE,eR+8DN,CS53DI,+BACE,WTkuEN,CS/tEI,+FAEE,YTkuEN,CS7tEI,kCACE,UACA,YTguEN,CSrtEI,iNACE,QT4tEN,CU53EE,2BACE,eV0lFJ,CUxlFE,yCACE,WV2lFJ,CUrgFI,yBA1FF,2BACE,eVmmFF,CUjmFA,yCACE,WVomFF,CACF,CWxkFI,eACE,eXulFN,CY/jFE,0CACE,cACA,cACA,cZ4wFJ,CY1wFE,oCACE,YACA,kBACA,SACA,kBACA,8BACA,gBACA,eACA,kBACA,qBACA,+BZ4wFJ,CY3wFI,oCAXF,oCAYI,eZ8wFJ,CACF,CY1wFE,8CACE,oCAEI,oCADF,oCAEI,eZ4wFJ,CACF,CACF,CACF,CYzwFE,gCACE,sBACA,UZ2wFJ,CYzwFE,6BACE,aZ2wFJ,CYxwFE,6BACE,YACA,eZ0wFJ,CYxwFE,6BACE,aZ0wFJ,CYvwFE,6BACE,aZywFJ,CYtwFE,6BACE,aZwwFJ,CYjwFE,0DACE,UZswFJ,CYnwFE,6BACE,YACA,eZqwFJ,CYlwFE,6BACE,cACA,eZowFJ,CYjwFE,6BACE,aZmwFJ,CYhwFE,6BACE,aZkwFJ,CY9vFE,gCACE,aACA,gBACA,aZgwFJ,CY7vFE,gNAQE,oBZ+vFJ,CYrvFA,oBACE,SZuvFF,CYrvFA,mCACE,YZwvFF,CYtvFA,kCACE,YZyvFF,CYrvFI,6BACE,0FZwvFN,CYzvFI,8BACE,2FZ2vFN,CY5vFI,8BACE,2FZ8vFN,CY/vFI,8BACE,2FZiwFN,CYlwFI,8BACE,2FZowFN,CYrwFI,8BACE,4FZuwFN,CYxwFI,8BACE,4FZ0wFN,CY3wFI,8BACE,4FZ6wFN,CY9wFI,8BACE,4FZgxFN,CavwFE,mBACE,eAxLU,CAyLV,cA1LQ,CA2LR,4Cb0wFJ,CavwFE,oCAEE,abywFJ,CatwFE,oCACE,cbywFJ,CclyFE,yCCtGE,oDAcF,sBD0FE,edsyFJ,CcnyFE,sCC3GE,oDAcF,sBD+FE,eduyFJ,CcpyFE,6CChHE,oDAcF,sBDoGE,edwyFJ,CcryFE,6CCrHE,oDAcF,sBDyGE,edyyFJ,CcnyFE,2BC7HE,gEDsIA,ed+xFJ,Cc5xFE,2BCzIE,gEDkJA,edwxFJ,CcrxFE,6BCrJE,oDAcF,qBfi6FF,CctxFE,sCCzJE,oDAcF,qBfs6FF,CcxxFI,4CACE,ed0xFN,CctxFE,wBCjKE,oDAcF,qBf86FF,CcvxFE,8CCrKE,sDAcF,sBDyJE,ed2xFJ,CcxxFE,8CC1KE,oDAcF,sBD8JE,ed4xFJ,CczxFE,8CC/KE,oDAcF,uBDmKE,ed6xFJ,Cc1xFE,8CCpLE,oDAcF,sBDwKE,ed8xFJ,CgB/gGE,4BD2DE,oDAcF,qBf28FF,CiBj4FE,4GAGI,6CACA,eACA,ejBm4FN,CkBjhGE,6BACE,4ClBwhGJ,CkBrhGE,gBAEI,eACA,elBuhGN,CkBnhGE,iCACE,clBshGJ,CkBnhGE,qCAEE,clBshGJ,CmBh+FE,cACE,4CnBm+FJ,CmB/9FE,yCACE,gBnBk+FJ,CoBh/FE,UACE,eACA,epBm/FJ,CoBj/FI,+EAEE,cpBm/FN,CqBjjGE,WACE,4CrBojGJ,CqBjjGE,iBACE,eACA,erBojGJ,CqBjjGE,2BACE,crBojGJ,CsBz6FE,cACE,4CtB46FJ,CsBz6FE,mBACE,ctB46FJ,CsBz6FE,qDAGI,eACA,etB26FN,CsBv6FE,8BAEI,cA9L6B,CA+L7B,etBy6FN,CuBjmGE,kBR0DE,oDAcF,qBf8hGF,COjkGE,4BAEI,6CACA,eACA,ePmkGN,CO/jGE,6BQaE,oDAcF,qBfyiGF,CCr+FE,gBc3FE,iBAiBU,CAhBV,eAiBY,CAhBZ,iBAiBY,CAhBZ,4CAiBY,CAGd,qBfijGF,CCz+FE,wBACE,wBD4+FJ,CCt+FI,kEACE,cAvB2B,CAwB3B,iBD0+FN,CCt+FI,gFACE,aACA,WDy+FN,CCv+FM,oGACE,eACA,iBD0+FR,CCr+FE,sBACE,eAEA,qCDu+FJ,CCn+FI,kLAvEF,4CAEA,qBD8iGF,CCj+FI,yHA/EF,4CAEA,qBDkjGF,CC99FE,8BACE,cACA,oBDi+FJ,CC99FE,sBACE,aDi+FJ,CC99FE,0BAGE,gBD+9FJ,CC59FE,kCACE,aA/EoB,CAgFpB,wBAzEqB,CA6ErB,+BD49FJ,CElmGI,0DACE,qBFqmGN,CElmGI,wDACE,iBFomGN,CEhmGM,oPA3DJ,oFAIA,gDAGA,qBF0pGF,CE/lGM,iKAlEJ,oFAIA,gDAGA,qBF+pGF,CE5lGM,0JA1EJ,oFAIA,gDAGA,qBFoqGF,CE1lGI,wDACE,aF4lGN,CEzlGI,4DAGE,aFylGN,CEtlGI,oEACE,wBAjDmB,CAqDnB,+BFqlGN,CE/kGE,aAGM,oPAzFN,2CF2qGA,CE3kGM,iKAhGN,2CF8qGA,CEtkGM,0JAxGN,2CFirGA,CACF,CGrqGI,sDACE,qBHuqGN,CGpqGI,sDACE,cACA,gBHsqGN,CGlqGM,gPAlCJ,2CAEA,qBHusGF,CG9pGM,wJA3CJ,2CAEA,qBH2sGF,CIvpGI,yDACE,aJ0pGN,CIvpGI,yDACE,cACA,iBJypGN,CIrpGM,sPAzCJ,4CAEA,qBJisGF,CIjpGM,2JAlDJ,4CAEA,qBJqsGF,CwBxwGE,4CAGE,cxB0wGJ,CyB9wGE,gEARA,mBACA,gBACA,uBAQE,cACA,qBzBmxGJ,CyBhxGI,8FACE,czBmxGN,C0B3tGE,wBACE,mB1B8tGJ,C2BzvGE,eAEI,6CACA,eACA,e3B2vGN,CQlwGE,4DAGI,6CACA,cRowGN,C4B7uGE,8BACE,4C5BovGJ,C4BjvGE,oBACE,c5BovGJ,C6BppGE,uDC7FE,4C9B2vGJ,C6B9pGE,6BAGI,eACA,e7B0pGN,CS7tGE,8CACE,4CTguGJ,CS7tGE,gBAEI,eACA,eT+tGN,CS3tGE,0BACE,eT8tGJ,CS3tGE,sBACE,cT8tGJ,CS3tGE,yBAEI,eACA,eT6tGN,C+B9sGE,4CAHE,4C/B2tGJ,C+BxtGE,6BAGI,eACA,e/BotGN,CUlyGE,6GKOE,oDAcF,sBLbE,QVsyGJ,CgC71GE,aACE,6CACA,cAtBQ,CAuBR,eAtBe,CAuBf,kBhCg2GJ,CgC71GE,qBACE,cAxBgB,CAyBhB,eAvBA,CAwBA,kBhCg2GJ,CiC90GE,gCACE,4CjCq1GJ,CiCh1GI,8BACE,cjCm1GN,CyBr4GE,wCARA,mBACA,gBACA,uBAQE,cACA,qBzBy4GJ,CyBt4GI,uDACE,czBw4GN,CiCz1GI,gCACE,cjC21GN,CyBl5GE,0CARA,mBACA,gBACA,uBAQE,cACA,qBzBs5GJ,CyBn5GI,yDACE,czBq5GN,CiCj2GI,8BACE,6CACA,eACA,ejCm2GN,CiC71GI,qCACE,cjCg2GN,CyBr6GE,+CARA,mBACA,gBACA,uBAQE,cACA,qBzBy6GJ,CiCn2GI,qGACE,cjCw2GN,CyBl7GE,iDARA,mBACA,gBACA,uBAQE,cACA,qBzBs7GJ,CyBn7GI,gEACE,czBq7GN,CiC92GI,qCACE,4CA1CU,CA2CV,eACA,ejCg3GN,CkCx5GE,YAEI,6CACA,clC05GN,CmC57GE,oBpB2DE,oDAcF,qBfw3GF,CoCz7GE,qBAEI,6CACA,cpC27GN,CoCv7GE,4BACE,cAEE,oBACA,kBACA,epCy7GN,CWz8GE,UACE,4CX48GJ,CWz8GE,qCAEE,gBACA,cX48GJ,CqCv+GE,YACE,gBAIA,iBrCu+GJ,CqCh+GI,wBACE,uBrCk+GN,CqC99GE,iCACE,gBrCi+GJ,CqC99GE,oBACE,kBACA,kBACA,oBAEA,wDACA,kBrCg+GJ,CsCz9GI,8CDHE,YrC+9GN,CsChgHE,qBACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,UAIA,mBAGA,UAGA,wBACA,oBtC4/GJ,CuClgHE,mDAEE,oBAGA,MACA,OACA,YACA,UvCkgHJ,CuC9/GE,uBACE,eACA,YvCigHJ,CuC//GI,6BAGE,YvC+/GN,CuCh/GE,8CANE,aACA,kBACA,YvCogHJ,CuChgHE,kBAIE,oBACA,sBAMA,eACA,evCo/GJ,CuCj/GE,sBAEE,kBACA,MACA,SACA,OACA,QAEA,YApEuB,CAqEvB,oBACA,wCACA,kDACA,SvCk/GJ,CuCh/GI,mDACE,SvCk/GN,CuC7+GM,6EAGE,UvC6+GR,CuCx+GE,2BACE,0BvC2+GJ,CuCn+GI,iGACE,SvCs+GN,CuCh+GE,6CACE,kBACA,YA3Gc,CAgHd,aAIA,sBAGA,cACA,cvC09GJ,CuCt9GE,wBACE,eAKA,WAKA,iBvCi9GJ,CKxlHE,+BACE,WL2lHJ,CKrlHE,yCAyCA,wBACA,iCAxCE,sBACA,yBLylHJ,CKhlHE,iDA6BA,wBACA,iCA5BE,kBLolHJ,CK1kHE;EAA0C,KL8kH5C,CK7kHE;EAAwC,KLglH1C,CK9kHE,oDAEE,qGL+kHJ,CK5kHE,0DAEE,iGL8kHJ,CwC5lHE,8CACE,iBxCmmHJ,CyCxnHE,oBAII,+BzCwnHN,CkC1nHE,YACE,qBlC6nHJ,CkCjnHI,4LAHE,0BlC8nHN,CkC3nHI,uBAEE,qBlCynHN,CkCtnHI,gCACE,qBlCwnHN,CkCpnHE,gEACE,alCunHJ,CkCpnHE,+DACE,alCunHJ,CkCpnHE,6DACE,alCunHJ,CmC3pHE,oBACE,qBnC8pHJ,CmC3pHE,2CACE,qBnC8pHJ,C0CzpHE,qBACE,qB1C4pHJ,C0C1pHI,2BACE,a1C4pHN,C0CxpHE,8BACE,a1C2pHJ,C0CxpHE,0FAEE,kB1C2pHJ,C0CnpHE,wJAIE,kB1CspHJ,C0CnpHE,oFAEE,kB1CspHJ,C0CjpHI,0HACE,kB1CqpHN,C2C9rHE,oBAIE,yBACA,qB3C8rHJ,C2CvrHI,kBCkIF,iF5CyjHF,C2C3rHI,kBCkIF,gG5C6jHF,C2C/rHI,kBCkIF,gG5CikHF,C2CnsHI,kBCkIF,gG5CqkHF,C2CvsHI,kBCkIF,iG5CykHF,C2C3sHI,kBCkIF,iG5C6kHF,C2C/sHI,kBCkIF,kG5CilHF,C2CntHI,kBCkIF,sG5CqlHF,C2CvtHI,kBCkIF,sG5CylHF,C2C3tHI,kBCkIF,sG5C6lHF,C2C/tHI,mBCkIF,uG5CimHF,C2CnuHI,mBCkIF,uG5CqmHF,C2CvuHI,mBCkIF,uG5CymHF,C2C3uHI,mBCkIF,uG5C6mHF,C2C/uHI,mBCkIF,uG5CinHF,C2CnvHI,mBCkIF,uG5CqnHF,C2CvvHI,mBCkIF,wG5CynHF,C2C3vHI,mBCkIF,wG5C6nHF,C2C/vHI,mBCkIF,wG5CioHF,C2CnwHI,mBCkIF,wG5CqoHF,C2CvwHI,mBCkIF,yG5CyoHF,C2C3wHI,mBCkIF,yG5C6oHF,C2C/wHI,mBCkIF,yG5CipHF,C2CnxHI,mBCkIF,yG5CqpHF,C2CvxHI,mBCkIF,yG5CypHF,C2CpxHI,yBACE,Y3CuxHN,C6CjzHE,wBAEE,gBACA,qB7CmzHJ,C4CvpHE,sDAXA,iG5CqqHF,C6C/yHI,8EACE,e7CizHN,C6C/yHM,wGACE,qB7CizHR,CapuHE,mBACE,WACA,kBbuuHJ,CsCtyHI,6CzBkEE,kBACA,ebuuHN,CaluHI,qCACE,mBACA,UbquHN,CahuHI,mCACE,WACA,kBbmuHN,Ca/tHE,WACE,iBbkuHJ,Ca9tHI,qCACE,YbiuHN,Ca5tHI,uCAWI,mBAMF,qBbgtHN,Ca5sHE,mBACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBb+sHJ,Ca5sHE,mFAEE,eb+sHJ,Ca1sHE,oCAEE,cb4sHJ,Ca32HE,oCACE,UANS,CAOT,WAPS,CAQT,gBb82HJ,Ca12HI,oDACE,Qb42HN,Cav2HI,oDACE,Wby2HN,Cap2HI,qDACE,Ubs2HN,Caj2HI,+DACE,UACA,Wbm2HN,Ca91HI,oDACE,Wbg2HN,Ca31HI,8DACE,WACA,Ub61HN,Cav1HM,uEACE,Sby1HR,Cap1HM,iFACE,UACA,Ubs1HR,Caj1HM,sEACE,Ubm1HR,Ca90HM,gFACE,WACA,Sbg1HR,Can5HE,qCACE,UAPW,CAQX,WARW,CASX,gBbs5HJ,Cal5HI,qDACE,Sbo5HN,Ca/4HI,qDACE,Ybi5HN,Ca54HI,sDACE,Ub84HN,Caz4HI,gEACE,UACA,Wb24HN,Cat4HI,qDACE,Wbw4HN,Can4HI,+DACE,WACA,Ubq4HN,Ca/3HM,wEACE,Ubi4HR,Ca53HM,kFACE,UACA,Wb83HR,Caz3HM,uEACE,Wb23HR,Cat3HM,iFACE,WACA,Ubw3HR,Ca37HE,oCACE,UALS,CAMT,WANS,CAOT,gBb87HJ,Ca17HI,oDACE,Sb47HN,Cav7HI,oDACE,Yby7HN,Cap7HI,qDACE,Ubs7HN,Caj7HI,+DACE,UACA,Wbm7HN,Ca96HI,oDACE,Wbg7HN,Ca36HI,8DACE,WACA,Ub66HN,Cav6HM,uEACE,Uby6HR,Cap6HM,iFACE,UACA,Wbs6HR,Caj6HM,sEACE,Wbm6HR,Ca95HM,gFACE,WACA,Ubg6HR,CgB3+HE,4B4BkJA,yG5BhJE,gBACA,qBhB8+HJ,CiB55HE,iDAKE,cACA,sBjB25HJ,CiB37HE,qFACE,ajB67HJ,CiB37HE,kFACE,ajB67HJ,CiB37HE,4EACE,ajB67HJ,CiBz7HI,glBAEE,qBjB07HN,CiB7/HE,mKACE,wBjB+/HJ,CiB5/HE,gKACE,wBjB8/HJ,CiB3/HE,0JACE,wBjB6/HJ,CiB1/HE,2LACE,4BjB4/HJ,CiB36HI,6GACE,UAxGY,CAyGZ,6BjB66HN,CiBz6HE,0BACE,ejB46HJ,CiBv6HE,8CACE,4BjB06HJ,CiBv6HE,2DAEE,sBACA,qBjBy6HJ,CiBp+HE,2GACE,UjBs+HJ,CiBp+HE,uGACE,UjBs+HJ,CiBp+HE,+FACE,UjBs+HJ,CiBl+HI,4vBAEE,qBjBm+HN,CiBh/HE,2GACE,wBjBk/HJ,CiBh/HE,uGACE,wBjBk/HJ,CiBh/HE,+FACE,wBjBk/HJ,CiB9+HI,4vBAEE,gCjB++HN,CiBjhIE,2LAXA,mCjB+hIF,CiBhhIE,uLAfA,+BjBkiIF,CiB/gIE,+KAnBA,mCjBqiIF,C4Cn6HE,iGAXA,iF5Ck7HF,C4Cv6HE,iDAXA,gG5Cs7HF,C4C36HE,kFAXA,sG5Cy7HF,C4C96HE,qEAXA,iF5C47HF,C4Cj7HE,mFAXA,kG5Cg8HF,C4Cr7HE,qJAXA,uG5Cm8HF,C4Cx7HE,2HAXA,iF5Cs8HF,CMrlIE,uDsC+IA,gG5C28HF,CMrlIE,iHAEE,eNwlIJ,CMrlIE,mBACE,qBNwlIJ,CMtlII,oDACE,gCNwlIN,CMplIE,uCACE,sBACA,eNulIJ,CMrlII,wEACE,qBNulIN,CMnlIE,mFACE,qCNslIJ,CMnlIE,6FACE,iBACA,sCNslIJ,CMllII,8GACE,iBACA,kBACA,oCNqlIN,CMjlIE,2BACE,yBACA,qBNolIJ,CMllII,iEACE,qBNolIN,CMhlIE,4BACE,sBACA,qBNmlIJ,CMjlII,kEACE,eNmlIN,CMhlII,sDACE,wBNklIN,CM9kIE,iHAEE,gCNilIJ,CkBvpIE,UAEE,gBACA,qBlBypIJ,C4ChgIE,wCAXA,gG5C8gIF,C4CngIE,sDAXA,iF5CihIF,CkBvpIE,mBACE,qBlB0pIJ,CmBxpIE,oBACE,4BnB2pIJ,CmBxpIE,wBACE,YnB2pIJ,CmBxpIE,6BAGE,wBnBypIJ,CmBtpIE,wBACE,wBnBypIJ,CmBrpII,4HACE,wBnBwpIN,CmBrpII,0HACE,wBnBupIN,CmBppII,sHACE,wBnBspIN,CmB/oIM,gJACE,wBnBkpIR,CmB7oIM,sEACE,oBnB+oIR,CmB3oII,2CACE,qBnB6oIN,CmBvoIE,kCACE,qBnB0oIJ,CmBroII,mKACE,kBnByoIN,CmBtoII,iKACE,kBnByoIN,CmBtoII,6JACE,kBnByoIN,CoBjrIE,4BA5CA,wBAyCwB,CAxCxB,qBpBiuIF,CoB/tIE,6CACE,qBAsCsB,CArCtB,UpBiuIJ,CoBtrIM,2DwBmGJ,gG5CslIF,CoBrrIM,2EACE,WpBurIR,CoBnrII,8CACE,UpBqrIN,CoBlrII,kCACE,epBorIN,CoB/qII,0DAnEF,wBAyBE,CAxBF,UpBsvIF,CoBpvIE,2EACE,UAoBsB,CAnBtB,UpBsvIJ,CoBhuIE,8EAVA,mCpB6uIF,CoBvrII,uDAvEF,wBAyBE,CAxBF,UpBiwIF,CoB/vIE,wEACE,UAoBsB,CAnBtB,UpBiwIJ,CoB3uIE,2EAVA,mCpBwvIF,CoB9rII,yDA3EF,wBAyBE,CAxBF,UpB4wIF,CoB1wIE,0EACE,UAoBsB,CAnBtB,UpB4wIJ,CoBtvIE,6EAVA,+BpBmwIF,CqBpxIE,WACE,erBuxIJ,CqBpxIE,uJAIE,kBrBuxIJ,CqBpxIE,wFAEE,mCrBuxIJ,CqBpxIE,iBACE,qBrBuxIJ,CqBpxIE,2BACE,qBrBuxIJ,CsBlvIE,oBACE,gCtBqvIJ,CsBhvIE,+HAGE,qBtBmvIJ,CsBhvIE,2BACE,qBtBmvIJ,CsBhvIE,yCACE,0BtBmvIJ,CsBhvIE,yBACE,qBtBmvIJ,CsBhvIE,gEAEE,sBACA,wBtBmvIJ,CsB1uIE,mMACE,qBtBivIJ,CsB9uIE,8BAOI,qBtB2uIN,CsBryIE,uGAqEI,4BtBouIN,CsBzyIE,mIA8EM,4BtB+tIR,CsB7oIE,mCACE,8BtBgpIJ,CsB7oIE,sFAEE,6BtBgpIJ,CsB7oIE,4GAEE,8EtBgpIJ,CsB7oIE,4GAEE,+EtBgpIJ,CsB7oIE,4IAEE,kBtBgpIJ,CsB7oIE,sIAEE,kBtBgpIJ,CsB92IE,4BACE,yBACA,UtBi3IJ,CsB92IE,wDAII,oCtB82IN,CsBr2IE,oDACE,+BtBw2IJ,CsBv1IE,weARM,oCtBq2IR,CsBjwIE,wBsBQA,kGtBNE,sBACA,qBtBowIJ,CsBnsIE,sEACE,8BtBqsIJ,CsBlsIE,4JAEE,6BtBosIJ,CsBjsIE,kLAEE,8EtBmsIJ,CsBhsIE,kLAEE,+EtBksIJ,CsB/rIE,kNAEE,kBtBisIJ,CsB9rIE,4MAEE,kBtBgsIJ,CsB95IE,+DACE,yBACA,UtBg6IJ,CsB75IE,2FAII,oCtB45IN,CsBn5IE,uFACE,+BtBq5IJ,CsBp4IE,ilBARM,oCtBi5IR,CsBzuIE,oEACE,6BtB2uIJ,CsBxuIE,wJAEE,6BtB0uIJ,CsBvuIE,8KAEE,6EtByuIJ,CsBtuIE,8KAEE,8EtBwuIJ,CsBruIE,8MAEE,kBtBuuIJ,CsBpuIE,wMAEE,kBtBsuIJ,CsBp8IE,6DACE,yBACA,UtBs8IJ,CsBn8IE,yFAII,mCtBk8IN,CsBz7IE,qFACE,+BtB27IJ,CsB16IE,2kBARM,mCtBu7IR,CsBr0IE,8BsBNA,yG5C+0IF,CsBr0IE,8BACE,atBw0IJ,CsBt0II,yCACE,atBw0IN,CsBr0II,uCACE,atBu0IN,CsBn0IE,sCACE,qBtBs0IJ,CuB9+IE,sBqBiJA,0GrB/IE,gBACA,qBvBi/IJ,C8Cz/IE,aACE,gC9C4/IJ,C8Cz/IE,sBACE,kC9C4/IJ,CO1/IE,qBAEE,gBACA,qBP4/IJ,C4Cr2IE,mDAXA,gG5Cm3IF,CO5/IE,gBACE,gCP+/IJ,C+C/gJM,mSxCoBF,0BP+/IJ,CO1/IE,oBACE,oGAEE,eP4/IJ,CACF,COz/IE,kCACE,qBP2/IJ,COx/IE,uEAEE,qBP2/IJ,COx/IE,gDACE,qBP2/IJ,COz/II,0KAEE,aP2/IN,CCzgJE,gCACE,oBDghJJ,CC7gJE,kDACE,aDghJJ,CC9gJI,6DACE,aDghJN,CC7gJI,2DACE,aD+gJN,CC3gJE,6CACE,aD8gJJ,CC3gJE,uBACE,gCD8gJJ,CC1gJI,mDACE,wBD6gJN,CC3gJM,8DACE,wBD6gJR,CC1gJM,4DACE,wBD4gJR,CCtgJI,4GACE,aDygJN,CCtgJI,uHACE,aDwgJN,CCz/IM,uVAEE,aDkgJR,CC9/II,uIAEE,wBDggJN,CC5/IE,WACE,aD+/IJ,CErlJI,oGACE,qBF2lJN,CExlJI,4DACE,gCF0lJN,CEvlJI,oF8CxBF,4FACA,yBACA,0BhDknJF,CiD5mJI,8DACE,gCjD+mJN,CiD5mJI,sFDZF,4FACA,yBACA,0BhD2nJF,CG9mJI,qDACE,gCHinJN,CG9mJI,6EACE,gCHgnJN,CG7mJI,iEACE,gCH+mJN,CG3mJM,8EACE,qBH6mJR,CG1mJM,yFACE,4BH4mJR,CIxnJI,2DACE,qBJ2nJN,CIxnJI,iEACE,qBJ0nJN,CItnJM,6EACE,aJwnJR,CIrnJM,wFACE,aJunJR,CI7mJM,qMACE,aJknJR,CI7mJM,iFACE,qBJ+mJR,CI5mJM,mFACE,qBJ8mJR,CkDjqJI,sBACE,alDoqJN,CkDjqJI,qBACE,alDmqJN,CkDhqJI,mBACE,alDkqJN,C0BvqJE,mEACE,qB1B0qJJ,C0BvqJE,uHAEE,qB1B0qJJ,C0BvqJE,mBACE,mB1B0qJJ,CmD3rJE,0CzBoBI,qB1B0qJN,CmD9rJE,gCzBoBI,qB1B0qJN,CmD1rJE,qCzBgBI,qB1B6qJN,CmDzrJE,8CzBYI,qB1BgrJN,CmDxrJE,yCzBQI,qB1BmrJN,C0BhqJE,8CACE,mB1BmqJJ,C0BhqJE,uFAEE,mB1BmqJJ,C0BhqJE,0FACE,a1BmqJJ,CiC5sJI,8DACE,qBjCktJN,CiC/sJI,8BACE,qBjCitJN,CiC7sJE,wBACE,qBjCgtJJ,CiC1sJI,gMACE,0BjCitJN,CiC5sJI,+GACE,0BjC+sJN,C2B3uJE,gBAEE,e3B6uJJ,C4CnlJE,8CAXA,iG5CimJF,C2B7uJE,eACE,uBACA,qB3BgvJJ,C2B7uJM,oGAGE,qB3B8uJR,C2BzuJE,uEAEE,qB3B4uJJ,C2BruJI,uLACE,0B3B2uJN,CQvwJE,eACE,eR0wJJ,CQvwJE,4DAEE,qBR0wJJ,CQvwJE,kDAEE,qCACA,sCR0wJJ,CQvwJE,yCAEE,oCR0wJJ,CQtwJI,uMAIE,4BRywJN,CoDvxJE,6BACE,YpD0xJJ,CoDvxJE,yBACE,wBpD0xJJ,CoDvxJE,6BACE,wBpD0xJJ,CoDtxJI,0DACE,YpDyxJN,CoDtxJI,sDACE,wBpDwxJN,CoDrxJI,0DACE,wBpDuxJN,CoDlxJI,wDACE,YpDqxJN,CoDlxJI,oDACE,wBpDoxJN,CoDjxJI,wDACE,wBpDmxJN,CqDp0JI,iDACE,crDu0JN,CqDp0JI,uEACE,crDs0JN,CqDn0JI,mEACE,crDq0JN,CsD9zJE,wBACE,4BtDi0JJ,CsDt1JE,wEACE,oBtDy1JJ,CsDt1JE,2SAIE,wBtDs1JJ,CsD91JE,uEACE,oBtDg2JJ,CsD71JE,uSAIE,wBtD61JJ,CsDr2JE,qEACE,oBtDu2JJ,CsDp2JE,+RAIE,wBtDo2JJ,CsDn0JM,4IAEE,4BtDq0JR,CsDl0JM,wIAEE,gCtDo0JR,CsDj0JM,8DACE,qBtDm0JR,CsD7zJI,sCACE,qBtD+zJN,C4Bh3JE,kBACE,qB5Bm3JJ,C4Bh3JE,wBACE,qB5Bm3JJ,C4Bh3JE,uCACE,qB5Bm3JJ,C4Bh3JE,kBACE,qB5Bm3JJ,C4Bh3JE,kBACE,e5Bm3JJ,C4C5uJE,gDAXA,iG5C0vJF,C4Bn3JI,qEACE,0B5Bq3JN,C4B/2JM,0DACE,a5Bk3JR,C4B/2JM,yDACE,a5Bi3JR,C4Bz2JI,wHACE,a5B82JN,C4B32JI,kEACE,qB5B62JN,CuDv5JE,sBACE,wBALmC,CAMnC,qBvD05JJ,CuDv5JE,YAEE,qBvD05JJ,CuDx5JI,wCAHA,qBvD85JJ,CuDv5JI,kCX6HF,wG5C6xJF,CuDn5JE,iBACE,sCvDs5JJ,CuD94JE,2DACE,qCAhCmB,CAiCnB,iBvDq5JJ,CuDn5JI,0CACE,iBACA,sCvDq5JN,CuDj5JE,sCAQI,+BvD64JN,C8Bt8JI,sDACE,wB9By8JN,C8Bt8JI,oDAGE,qC9Bs8JN,C8Bn8JI,kDAGE,wB9Bm8JN,C8Bh9JI,kEACE,wB9Bk9JN,C8B/8JI,gEAGE,qC9B+8JN,C8B58JI,8DAGE,wB9B48JN,C8Bz9JI,+DACE,wB9B29JN,C8Bx9JI,6DAGE,oC9Bw9JN,C8Br9JI,2DAGE,wB9Bq9JN,C8Bh7JI,wDAGE,qB9Bg7JN,C8B56JE,wBc2FA,iGdzFE,wB9B+6JJ,C8B56JE,sBACE,gC9B+6JJ,C6Br8JE,6BACE,gC7Bw8JJ,C6Bp/JE,wGAGE,wB7Bu/JJ,C6Bp/JE,0CACE,U7Bs/JJ,C6Bn/JE,oCAGE,oC7Bm/JJ,C6BhgKE,qGAGE,wB7BmgKJ,C6BhgKE,yCACE,U7BkgKJ,C6B//JE,mCAGE,oC7B+/JJ,C6B5gKE,+FAGE,wB7B+gKJ,C6B5gKE,uCACE,U7B8gKJ,C6B3gKE,iCAGE,mC7B2gKJ,C6B39JI,yFACE,gC7B+9JN,C6Bn9JM,6LACE,gC7B29JR,C6Br9JI,6CAGE,gC7Bs9JN,C6B58JM,oJAEE,gC7B88JR,C6B18JQ,4KAEE,gC7B48JV,C6Bt8JM,6EACE,4BA9EiB,CA+EjB,4B7Bw8JR,C6Bn8JQ,4KACE,4B7Bq8JV,C6Bl8JQ,oNACE,4B7Bo8JV,C6B97JE,gDACE,2B7Bi8JJ,C6Bx7JE,yCACE,8GAIA,qH7Bw7JJ,C6B96JE,uCACE,8G7Bi7JJ,CShkKI,kGAGE,gCTikKN,CS3jKI,oBACE,uBACE,eT6jKN,CACF,CS1jKI,qEAIE,qBT0jKN,CSvjKI,gCAGE,iCACA,UTujKN,CSpjKI,+HAGE,yBACA,UTsjKN,CSljKM,2CACE,UTojKR,CSjjKM,gKAGE,yBACA,UTmjKR,CS9iKM,yCACE,UTgjKR,CS7iKM,0JAGE,yBACA,UT+iKR,CS3iKI,4CACE,6BACA,aT6iKN,CS1iKI,uDACE,qBT4iKN,CSziKI,sDACE,aT2iKN,CSviKE,8CACE,qBT0iKJ,CSviKE,kCACE,iCT0iKJ,CSviKE,wGAGE,gCT0iKJ,CwDvoKE,uBAYI,axD+nKN,C+BvoKE,iCAEE,uC/B0oKJ,C+BtoKI,+FAEE,oCAVY,CAWZ,kB/ByoKN,C+BroKE,6BACE,qB/BwoKJ,C+BtoKI,+DACE,qB/BwoKN,C+BpoKE,mCACE,4B/BuoKJ,C+BpoKE,uEACE,4B/BuoKJ,C+BnoKE,gGAEE,mBACA,e/BsoKJ,C+BxlKM,grBACE,oC/B+lKR,C+B1mKE,kFACE,wB/B4mKJ,C+B7mKE,gVACE,qB/B+mKJ,C+BtmKM,wqBACE,oC/B4mKR,C+BvnKE,gFACE,wB/BynKJ,C+B1nKE,wUACE,qB/B4nKJ,C+BnnKM,wpBACE,qC/BynKR,C+BpoKE,4EACE,wB/BsoKJ,C+BvoKE,wTACE,qB/ByoKJ,C+BhoKM,wwBACE,oC/BsoKR,C+B3nKE,gXACE,wB/B6nKJ,C+BznKE,sSACE,U/B2nKJ,C+BznKI,0WACE,wB/B2nKN,C+BtnKE,0tBAIE,iB/B2nKJ,C+BxnKE,wdAEE,+B/B2nKJ,C+BtnKE,weAGE,oC/B0nKJ,C+BrqKM,gwBACE,oC/B2qKR,C+BhqKE,0WACE,wB/BkqKJ,C+B9pKE,kSACE,U/BgqKJ,C+B9pKI,sWACE,oB/BgqKN,C+B3pKE,ktBAIE,iB/BgqKJ,C+B7pKE,odAEE,2B/BgqKJ,C+B3pKE,keAGE,gC/B+pKJ,C+B1sKM,gvBACE,qC/BgtKR,C+BrsKE,8VACE,wB/BusKJ,C+BnsKE,0RACE,U/BqsKJ,C+BnsKI,8VACE,wB/BqsKN,C+BhsKE,ksBAIE,iB/BqsKJ,C+BlsKE,4cAEE,+B/BqsKJ,C+BhsKE,sdAGE,oC/BosKJ,CU1xKE,aACE,mBACA,qBV6xKJ,CU3xKI,yBApCF,mBACA,UVk0KF,CU3xKI,wBAxCF,mBACA,UVs0KF,CU3xKI,sBA5CF,mBACA,UV00KF,CUt0KE,4HAGE,6BVw0KJ,CUr0KE,4MAKE,aVu0KJ,CUp0KE,gCACE,wBVs0KJ,CgC11KE,aACE,4BhC61KJ,CWp2KE,UACE,eXu2KJ,CWp2KE,qCAEE,qBXu2KJ,CoC72KE,yBAGE,yBACA,mBQ6IF,kG5CkuKF,CoC12KE,4BACE,apC62KJ,CyDj4KA,KC0FE,eACA,iBDzFA,+FEHU,CFKV,UEmBS,CFjBT,mCACA,iCzDm5KF,CyDh5KA,GACE,qBCgEA,eACA,iBD/DA,gBACA,YzDo5KF,CyDl5KE,oCANF,GAOI,YzDq5KF,CACF,CyDl5KA,GC2DE,eACA,iBDzDA,kBzDu5KF,CyDn5KA,MALE,gBAEA,UzD85KF,CyD35KA,GCyDE,eACA,iBDvDA,kBzDw5KF,CyDp5KA,GCuDE,eACA,iBDtDA,gBACA,aACA,UzDw5KF,CyD94KA,MCyCE,eACA,iBD/CA,gBACA,aACA,UzDk6KF,CyD/5KA,GACE,azD85KF,CyDt5KE,yBACE,iBzDy5KJ,CyDt5KE,oCALF,eAMI,YzDy5KF,CACF,CyDt5KA,yBACE,YzDy5KF,CyDt5KA,mBCmBE,eACA,iBDjBA,ezD05KF,CyDz5KE,wDAFA,mBzD85KF,CyDt5KE,WACE,YzDy5KJ,CyDr5KA,KACE,QzDw5KF,CyDr5KA,EACE,oBzDw5KF,CyDr5KA,eCTE,eACA,iBDUA,gBACA,UEhFM,CFiFN,+FEnGU,CFoGV,yBACA,czDy5KF,CyDt5KA,mCACE,azDy5KF,CyDt5KA,OACE,ezDy5KF,CyDt5KA,MACE,yBAEA,iBACA,kBzDy5KF,CyDt5KA,eACE,gBACA,kBACA,ezDy5KF,CyDt5KA,GACE,gBACA,iBACA,mBzDy5KF,CyDv5KE,KACE,QzDy5KJ,CyDr5KA,GC5CE,eACA,iBD6CA,gBACA,kBACA,ezDy5KF,CyDt5KA,+BAEE,cACA,UEzHS,CF0HT,iBACA,cACA,cACA,wBEjIe,CFkIf,iBzDy5KF,CyDt5KA,oCAVE,qCzDq6KF,CyD35KA,KAEE,azDy5KF,CyDt5KA,mBACE,azDy5KF,CyDx5KE,yBACE,azD05KJ,C4D1jLA,UAEI,gB5D2kLJ,C4DzkLI,gBACI,kB5D2kLR,C4DzkLQ,mBACI,oBFkFV,eACA,iBEjFU,e5D4kLZ,C4DzkLQ,mBACI,+B5D2kLZ,C4DxkLQ,mBACI,qB5D0kLZ,C4DvkLQ,mBACI,a5DykLZ,C4DtkLQ,8BACI,kB5DwkLZ,C4DpkLY,8BACI,Y5DskLhB,C4DjkLY,8BACI,iB5DmkLhB,C4D/jLQ,mCACI,a5DikLZ,C6D5mLE,qCAEE,W7D8mLJ,C6D1mLA,iBACE,iBACA,sB7D6mLF,C6D1mLA,yBACE,SACE,Y7D6mLF,C6D1mLA,iBACE,iBACA,sB7D6mLF,CACF,C6D1mLA,mBACE,WACA,Y7D4mLF,C6DzmLA,wBACE,c7D4mLF,C6DzmLA,4BACE,WACA,cACA,WACA,cACA,kB7D4mLF,C8DjpLA,gCAEE,yB9DmpLF,C+DnpLA,OAEE,iBACA,OACA,aAEA,wBJMO,CILP,aJWS,CIVT,e/DkqLF,C+DhqLE,yBATA,kBAIA,S/DyqLF,C+D/pLE,qBACE,cACA,kB/DiqLJ,C+D9pLE,SACI,aJHK,CIIL,gBACA,qBACA,WACA,iB/DgqLN,C+D/pLM,eACE,yB/DiqLR,C+D/pLM,iBACE,oB/DiqLR,C+D9pLE,gBACE,c/DgqLJ,C+D9pLE,ULsDA,eACA,iBKrDE,yBACA,gBACA,e/DiqLJ,C+D/pLE,SACE,kBACA,iB/DiqLJ,C+D/pLI,yBAJF,SAKI,e/DkqLJ,CACF,C+D/pLE,sBAGE,aAEA,uBAEA,gBACA,e/D+pLJ,C+D7pLI,yBACE,2BACA,UACA,Q/D+pLN,C+D7pLM,4BACE,qBACA,UACA,e/D+pLR,C+D3pLI,yBAtBF,sBAuBI,qB/D8pLJ,C+D7pLI,oCACE,e/D+pLN,CACF,C+DxpLE,yBACE,ULAF,eACA,gB1D2pLA,CACF,C+DzpLE,yBACE,ULAF,eACA,gB1D4pLA,CACF,C+DxpLA,aACI,WACA,kBACA,WACA,MACA,SACA,OACA,O/D2pLJ,CgEpwLA,UACI,WhEuwLJ,CgEpwLA,KACI,wBhEuwLJ,CgEpwLA,UACI,WACA,ahEwwLJ,CgEpwLA,iBAHI,UhE2wLJ,CgEpwLA,kCACI,WACA,cACA,UhEuwLJ,CgEpwLA,YACI,uBhEuwLJ,CgEpwLA,aACE,aACA,chEuwLF,CgEpwLA,aACI,aACA,sBhEuwLJ,CgEpwLA,QACI,iBhEuwLJ,CgEpwLA,iBACI,4BACA,sBACA,sBhEuwLJ,CgEpwLA,gBACE,wBhEuwLF,CiExzLA,MACE,aACA,sBACA,uBACA,mBACA,kBACA,WACA,iBACA,YACA,iBACA,sBACA,uBACA,gBACA,qBjE2zLF,CiEzzLE,yBAfF,MAgBI,iBACA,iBACA,cjE4zLF,CACF,CiE1zLE,kBACE,qBACA,eACA,gBACA,iBACA,iBACA,wBjE4zLJ,CiE1zLI,mCACE,mBjE4zLN,CiEvzLA,iBACE,0CACA,oBjE0zLF,CiEvzLA,cACE,aACA,sBACA,mBACA,kBACA,YACA,aACA,oBACA,iBACA,UjE0zLF,CiExzLE,yBAXF,cAYI,uBACA,WACA,gBACA,mBjE2zLF,CiEzzLE,qBACE,SACA,WjE2zLJ,CACF,CiExzLE,kCACE,aACA,sBACA,mBACA,WACA,iBAEA,kBACA,cACA,gBjE0zLJ,CiExzLI,yBAXF,kCAYI,WACA,eACA,SjE2zLJ,CACF,CiExzLE,6BACE,eACA,iBACA,gBACA,iBjE0zLJ,CiExzLI,mCACE,YjE0zLN,CiEvzLI,yBAVF,6BAWI,iBjE0zLJ,CACF,CiExzLI,yBAdF,6BAeI,eACA,gBjE2zLJ,CACF,CiExzLE,iCACE,eACA,gBjE0zLJ,CiEvzLE,yBACE,aACA,iBACA,mBjEyzLJ,CiEvzLI,yBALF,yBAMI,sBjE0zLJ,CACF,CiExzLI,6BACE,YACA,aACA,kBACA,UACA,gDjE0zLN,CiExzLM,yBAPF,6BAQI,YACA,YjE2zLN,CACF,CiEtzLA,kBACE,aACA,mBACA,eACA,6BACA,mBACA,eACA,cACA,aACA,oCACA,kBACA,mEACA,sBACA,0BjEyzLF,CiEvzLE,yBAfF,kBAgBI,sBACA,kBACA,iBjE0zLF,CACF,CiExzLE,yBArBF,kBAsBI,WACA,cjE2zLF,CACF,CiEzzLE,oBACE,UjE2zLJ,CiExzLE,0BACE,aACA,uBACA,mBACA,YACA,gBACA,eACA,UNpJI,CMqJJ,wBN1JK,CM2JL,mBACA,uCACA,sBACA,cjE0zLJ,CiExzLI,gCACE,wBjE0zLN,CiEtzLE,kCACE,aACA,QACA,gBACA,2BACA,cjEwzLJ,CiErzLE,oBACE,eACA,WACA,iBjEuzLJ,CiElzLA,gBACE,UjEqzLF,CiElzLA,gBPzIE,UO0Ic,CPzId,UOyImB,CPxInB,qBC7CM,CD8CN,kBACA,mEACA,sBACA,0BOqIA,aACA,mBACA,mBACA,kBACA,UACA,gBACA,YACA,YACA,aACA,mEjE2zLF,C0Dv8LE,sBACE,mEACA,oB1Dy8LJ,CiE7zLE,yBAbF,gBAcI,kBjEg0LF,CiE9zLE,mBACE,QjEg0LJ,CiE7zLE,oBACE,eACA,WjE+zLJ,CACF,CiE5zLE,0BACE,oBACE,YACA,cjE8zLJ,CACF,CiE3zLE,oBACE,WjE6zLJ,CiE1zLE,qCACE,ajE4zLJ,CiE1zLI,uCACE,gBACA,UNxNK,CMyNL,SACA,ajE4zLN,CiEtzLI,yBACE,ajEwzLN,CiEnzLA,iBACE,aACA,mBACA,uBACA,YACA,YACA,eACA,eACA,gBACA,iBACA,qBNtPM,CMuPN,mBACA,uCACA,sBACA,cjEszLF,CiEpzLE,uBACE,UjEszLJ,CiEhzLI,iIACE,gBjEmzLN,CiE7yLI,4BACE,UN3QE,CM4QF,wBjE+yLN,CiE7yLI,4BACE,SjE+yLN,CiE3yLE,6FACE,UjE6yLJ,CiE3yLI,6HACE,YjE6yLN,CiE3yLM,yBAHF,6HAII,YjE8yLN,CACF,CiEzyLI,gCACE,cjE2yLN,CiEpyLM,0BADF,+IAEI,cjEuyLN,CACF,CiEpyLI,+KACE,cjEsyLN,CiEnyLI,yBACE,2PACE,ajEqyLN,CACF,CiEjyLE,6BACE,ajEmyLJ,CiE/xLA,0BACE,gBACA,ejEkyLF,CiE/xLA,eACE,UNnUM,CMoUN,eACA,gBACA,gBACA,wBjEkyLF,CiE9xLE,qEACE,cjEiyLJ,CiE7xLA,gBACI,aACA,uBACA,mBACA,qBjEgyLJ,CiE9xLI,yBANJ,gBAOM,ajEiyLJ,CACF,CiE9xLA,YACI,kBjEiyLJ,CiE9xLA,WACI,ejEiyLJ,CiEhyLI,yBAFJ,WAGM,QjEmyLJ,CACF,CiEhyLA,4BACI,qBACA,8BjEmyLJ,CiEhyLA,UACE,gBACA,gBjEmyLF,CiEjyLE,yDACE,ajEmyLJ,CiEjyLI,yBAHF,yDAII,eACA,iBjEoyLJ,CiElyLI,qFACE,6BjEoyLN,CACF,CiEhyLE,sBACE,iBjEkyLJ,CiEhyLI,yBAHF,sBAII,SjEmyLJ,CACF,CiE9xLI,mCACE,uBjEgyLN,CiE7xLI,iCACE,ajE+xLN,CiE5xLI,mCACE,ajE8xLN,CiE3xLM,yBAJF,mCAKI,eACA,oBjE8xLN,CACF,CiEzxLA,kBACE,yBACA,gBACA,YjE4xLF,CiE1xLE,yBALF,kBAMI,gBACA,YjE6xLF,CACF,CiE3xLE,mCACE,yBACA,eACA,gBACA,WACA,SACA,wBACA,sBjE6xLJ,CiE3xLI,yBATF,mCAUI,eACA,ejE8xLJ,CACF,CiE5xLI,yCACE,YjE8xLN,CiE1xLA,iCACE,kBjE6xLF,CkExuMA,oBACE,kBlE2uMF,CkEzuME,mCACE,cACA,YACA,iBACA,yBACA,UlE2uMJ,CkExuME,wCACE,kBACA,elE0uMJ,CkEvuME,2BACE,gDACA,sBACA,wBACA,YACA,iBACA,cACA,aACA,sBACA,uBACA,mBACA,kBACA,kBlEyuMJ,CkEtuME,+BACE,WACA,aACA,elEwuMJ,CkEruME,8BACE,eACA,gBACA,wBlEuuMJ,CkEruMI,yCALF,8BAMI,clEwuMJ,CACF,CkEruME,iCACE,eACA,elEuuMJ,CkEruMI,yCAJF,iCAKI,clEwuMJ,CACF,CkEruME,8BACE,clEuuMJ,CkEpuME,gCACE,kBACA,YlEsuMJ,CkEnuME,yDAEE,eACA,iBACA,WACA,yBACA,iBlEquMJ,CkEluME,6CAEE,iCACA,clEouMJ,CkEjuME,8CAEE,+BACA,wBlEmuMJ,CkEhuME,kCACE,WACA,gBACA,cACA,eACA,aACA,0DACA,uBACA,qBACA,sClEkuMJ,CkEhuMI,+CACE,kBlEkuMN,CkE/tMI,qCACE,elEiuMN,CkE9tMI,yCAnBF,kCAoBI,aACA,sBACA,kBlEiuMJ,CACF,CkE9tME,8CACE,iBACA,YACA,alEguMJ,CkE9tMI,iDACE,kBACA,eACA,yBlEguMN,CkE7tMI,gDACE,yBlE+tMN,CkE5tMI,yCAfF,8CAgBI,elE+tMJ,CACF,CkE5tME,oCAEI,sEACE,gBACA,aACA,kBlE6tMN,CkE3tMI,2EACE,gBACA,YlE6tMN,CACF,CkEztME,oCACE,8CACE,oBACA,gBACA,iBlE2tMJ,CACF,CkExtME,8BACE,YACA,sBACA,kBACA,iBlE0tMJ,CkExtMI,iCACE,cACA,eACA,kBlE0tMN,CkEttME,wCACE,gDACA,sBACA,2BACA,aACA,cACA,aACA,mBACA,uBACA,mBACA,clEwtMJ,CkEttMI,2CACE,clEwtMN,CkErtMI,iDACE,gBACA,WACA,aACA,mBACA,8BACA,kBlEutMN,CkEptMI,6CACE,alEstMN,CmEv5MA,gBACI,YnE05MJ,CmEv5MA,cACI,mBACA,YnE05MJ,CmEv5MA,aACI,YACA,YACA,qBnE05MJ,CmEx5MI,gBACI,eACA,aRFC,CQGD,yBACA,YnE05MR,CmEt5MA,wBACI,aRTK,CQUL,gBACA,enEy5MJ,CoE/6MA,oDACE,epE87MF,CoE37MA,aACE,cACA,cVwFA,eACA,gB1Du2MF,CoE97ME,+BACE,UACA,QpEg8MJ,CoE77ME,yBACE,epE+7MJ,CoE57ME,gCACE,gBpE87MJ,CoE17MA,gCACE,eACA,SACA,SACA,OACA,UACA,gBACA,wBTZS,CSaT,mCpE67MF,CoE37ME,0CACE,QpE67MJ,CoEz7MA,wCACE,gBACA,sBACA,eACA,SACA,cpE47MF,CoE17ME,yDACE,apE47MJ,CoEx7MA,8CACE,WpE27MF,CoEx7MA,mBACE,aACA,qBpE27MF,CoEx7MA,oBACE,sBACA,UTtCS,CSuCT,eACA,OACA,aACA,iBACA,mBACA,gBACA,yBACA,gBACA,mBACA,qBACA,gBACA,oBpE27MF,CoEz7ME,0BACE,wBTxDQ,CSyDR,aTjEK,CSkEL,wBpE27MJ,CoEx7ME,0BACE,wBpE07MJ,CoEv7ME,gCACE,MpEy7MJ,CoEr7ME,8BACE,UpEu7MJ,CoEn7MA,6BACE,aTpFO,CSqFP,epEs7MF,CoEn7MA,0BACE,YACA,6BACA,cpEs7MF,CoEn7MA,SACE,UTpFS,CSqFT,eACA,iBpEs7MF,CoEn7MA,2BACE,mBACA,UACA,kBACA,qDAEA,sCpEs7MF,CoEn7MA,4BACE,kBACA,UACA,eACA,0DAEA,mCpEs7MF,CoEl7ME,qFACE,yBpEq7MJ,CoEj7MA,SAIE,iBACA,+BpEq7MF,CoEl7MA,kBAPE,+FT1IU,CD2FV,eACA,iBUgDA,epEi8MF,CoE57MA,SACE,aT3HW,CS+HX,iBACA,mBpEs7MF,CoEn7MA,SAIE,gBpEu7MF,CoEp7MA,kBANE,aTpIW,CSqIX,+FT5JU,CD2FV,eACA,gB1DigNF,CoE57MA,SAIE,epEw7MF,CoEr7MA,wDV1HE,wBACA,0BACA,sC1DujNF,CoE37MA,oEV9HE,uBACA,0BACA,sC1DikNF,CoEj8MA,sBACE,gBpEo8MF,CoEl8ME,kDACE,yCpEo8MJ,CoEj8ME,mDACE,sCpEm8MJ,CoE97MA,yBACE,YACA,4BpEi8MF,CoE/7ME,gCACE,aACA,WACA,6BACA,YACA,yBACA,UpEi8MJ,CoE/7MI,uCACE,+FT1MM,CD2FV,eACA,gB1DijNF,CqE9oNA,2BACI,YACA,aACA,eACA,QACA,SACA,aACA,iBACA,wBrEipNJ,CsEppNA,wBACE,eACA,MACA,QACA,OACA,WACA,qCtEupNF,CsErpNE,wCACE,kBtEupNJ,CsEppNE,iCACE,UtEspNJ,CsEjpNA,4CACE,wBtEopNF,CsElpNE,yBACE,gEACE,6BACA,sCtEopNJ,CACF,CsE/oNA,2LAIE,etEkpNF,CsE/oNE,yBAPF,2LAQI,iBtEqpNF,CACF,CsE7oNE,yBACE,oRAEE,gBtEkpNJ,CACF,CsE7oNA,sBACE,YACA,gBA9DqB,CA+DrB,StEgpNF,CsE9oNE,yBALF,sBAQI,qBtE+oNF,CACF,CsE7oNE,yBAXF,sBAYI,atEgpNF,CACF,CsE9oNE,qCACE,wBACA,iCACA,qDtEgpNJ,CsE7oNE,4BACE,atE+oNJ,CsE5oNE,gCACE,WACA,gBtE8oNJ,CsEzoNA,eACE,eACA,kBACA,ctE4oNF,CsE1oNE,oCALF,eAMI,gBtE6oNF,CACF,CsE3oNE,mBACE,kBACA,iBACA,SACA,WtE6oNJ,CsE3oNI,yBACE,yBACE,oBtE6oNN,CACF,CsEvoNA,aAIE,yBACA,UtE0oNF,CsExoNE,6BANA,aACA,mBACA,kBtEopNF,CsEhpNE,gBAIE,2BACA,UACA,QtE0oNJ,CsExoNI,mBACE,mBACA,qBACA,ctE0oNN,CsExoNM,yBACE,UtE0oNR,CsEvoNM,yBACE,wBX9HK,CW+HL,YtEyoNR,CsEpoNE,wBACE,SACA,kBACA,ctEsoNJ,CsEpoNI,8BACE,+BACA,kBACA,aACA,gBtEsoNN,CsEhoNA,gCACE,aACA,yBACA,mBACA,WACA,gBACA,WtEmoNF,CsEjoNE,sCACE,UXnJO,CWoJP,YACA,oBACA,wBX3JO,CW4JP,iBACA,gBACA,YACA,gBACA,WACA,uBtEmoNJ,CsEjoNI,4CACE,YtEmoNN,C0DpyNI,0BYoJF,sCAiBI,gCtEmoNJ,CsEjoNI,4CACE,WtEmoNN,CACF,CsEjoNI,yBAvBF,sCAwBI,WtEooNJ,CACF,CsE9nNE,+CACE,aACA,mBACA,WtEioNJ,CsE/nNI,iDACE,aACA,mBACA,gBtEioNN,CsE/nNM,oCALF,iDAMI,etEkoNN,CACF,CsEhoNM,uDACE,UtEkoNR,CsE/nNM,qDACE,WtEioNR,CuE51NA,gBACI,aACA,cbwFF,eACA,iBavFE,UZmBO,CYlBP,WACA,sBACA,UvE+2NJ,CuE72NI,oIACE,evE+2NN,CuE52NI,wCACI,8BACA,mCvE82NR,CuE52NQ,oRACI,avE82NZ,CuE12NI,0CACI,8BACA,oCvE42NR,CuE12NQ,gSACI,avE42NZ,CuEx2NI,sCACI,8BACA,mCvE02NR,CuEx2NQ,wQACI,avE02NZ,CuEt2NI,oBACI,evEw2NR,CwEj5NA,cACE,WxEg6NF,CwE/5NE,8BACE,kBACA,YdiFF,eACA,gB1Di1NF,CwEj6NI,oCACE,wBxEm6NN,CwE95NA,YACE,aACA,kBxEi6NF,CwE/5NE,oCAJF,YAKI,sBACA,sBxEk6NF,CACF,CwE75NE,0BACE,iBxEg6NJ,CwE95NI,uCACI,UxEg6NR,CwE35NI,+HACE,mBACA,aACA,6BxE65NN,CwE15NQ,+KACE,axE45NV,CwE35NU,iPACE,gBACA,axE65NZ,CwEv5NI,+EACE,aACA,gBACA,UxEy5NN,CwEt5NI,+EdwCF,eACA,iBcvCI,gBACA,exEy5NN,CwEr5NE,uBACE,cd2BF,eACA,iBc1BE,exEw5NJ,CwEr5NE,6BACE,mBxEu5NJ,CwEp5NE,4BduBA,eACA,gB1Dg4NF,CwEj5NM,mGACE,SxEs5NR,CwEj5NE,4BACE,adSF,eACA,gB1D24NF,CwEn5NI,2CACE,SxEq5NN,CwEj5NE,4BACE,gBxEm5NJ,CwEj5NI,oCACE,eACA,gBxEm5NN,CwEl5NM,uCACE,SACA,UxEo5NR,CwE/4NE,0DACE,kBACA,axEi5NJ,CyE3/NE,iCACE,UzE2gOJ,CyEpgOI,8CACI,WACA,mBzEwgOR,CyErgOI,gCACI,WzEugOR,CyEpgOI,iCACE,aACA,sBACA,azEsgON,CyEpgOM,oCACE,ezEsgOR,CyEjgOA,YACE,aACA,azEogOF,CyElgOE,yBAJF,YAKM,sBACA,gBzEqgOJ,CACF,CyEngOE,uDACI,UzEqgON,CyE//NA,cACE,iBzEmgOF,CyEhgOA,iBACE,aACA,iBACA,QzEmgOF,CyEjgOE,uGALF,iBAQI,gBzEkgOF,CACF,CyE7/NA,aACE,iBzEigOF,CyE//NE,mBACE,mEACA,sBACA,sBACA,adpBS,CDuCX,eACA,iBelBE,YACA,iBACA,aACA,sBACA,kBzEkgOJ,CyE//NI,8CACE,ad5CY,CD0DhB,eACA,gB1Dq/NF,CyEjgOI,qCACE,adhDY,CD0DhB,eACA,gB1D2/NF,CyEngOI,yCACE,adpDY,CD0DhB,eACA,gB1DigOF,CyErgOI,oCACE,adxDY,CD0DhB,eACA,gB1DugOF,CyEtgOI,yBACE,yBACA,sEzEwgON,CyEpgOE,6BACE,adnEc,CDgDhB,eACA,iBeqBE,iBACA,YACA,SACA,kBACA,SzEsgOJ,CyE9/NA,QACE,kBACA,wCACA,UdzGM,Cc0GN,qBACA,eACA,gBACA,iBACA,kBACA,UzEmgOF,CyE9/NI,YACE,ezEggON,CyE9/NM,mBACE,WzEggOR,CyEpgOI,kBACE,kBzEsgON,CyEpgOM,yBACE,WzEsgOR,CyE1gOI,kBACE,kBzE4gON,CyE1gOM,yBACE,WzE4gOR,CyEhhOI,aACE,kBzEkhON,CyEhhOM,oBACE,WzEkhOR,CyEthOI,cACE,kBzEwhON,CyEthOM,qBACE,WzEwhOR,CyE5hOI,kBACE,kBzE8hON,CyE5hOM,yBACE,WzE8hOR,CyEliOI,iBACE,kBzEoiON,CyEliOM,wBACE,WzEoiOR,CyExiOI,aACE,kBzE0iON,CyExiOM,oBACE,WzE0iOR,CyE9iOI,cACE,kBzEgjON,CyE9iOM,qBACE,WzEgjOR,CyEpjOI,YACE,kBzEsjON,CyEpjOM,mBACE,WzEsjOR,CyE1jOI,YACE,kBzE4jON,CyE1jOM,mBACE,WzE4jOR,CyEhkOI,iBACE,ezEkkON,CyEhkOM,wBACE,WzEkkOR,CyEtkOI,mBACE,kBzEwkON,CyEtkOM,0BACE,WzEwkOR,CyE5kOI,gBACE,kBzE8kON,CyE5kOM,uBACE,YzE8kOR,CyEnkOE,uBACE,WzEwkOJ,CyEtkOI,+BACE,gBzEwkON,CyEjkOA,wBACE,gBACA,qBACA,UACA,ezEqkOF,CyEnkOE,oCANF,wBAOQ,iBzEskON,CACF,CyEpkOE,2BACE,eACA,aACA,iBACA,UACA,WACA,UACA,gBACA,gBACA,uBACA,kBzEskOJ,CyEpkOI,mCACE,gBzEskON,CyEpkOI,6BACE,ad/IY,CcgJZ,qBACA,iBACA,eACA,qBACA,mBACA,gBACA,sBzEskON,CyEpkOM,mCACE,kBd/JS,CcgKT,azEskOR,CyEhkOA,oEAEE,eACA,iBACA,YzEmkOF,CyE9jOI,+CACE,uBzEikON,CyE5jOA,YACE,ezE+jOF,CyE5jOA,WACE,4BzE+jOF,CyE1jOE,WACE,QzE6jOJ,CyE1jOE,iBACE,8BzE4jOJ,CyEzjOE,gBACE,ezE2jOJ,CyEzjOI,uBACE,kBzE2jON,CyEtjOA,YACE,kBzEyjOF,CyExjOE,eACE,gBzE0jOJ,CyEtjOA,aACE,iBzEyjOF,CyEtjOA,OACE,gBACA,SzEyjOF,CyEtjOA,mBACE,cACA,iBACA,kBACA,eACA,gBACA,ezEyjOF,CyEtjOA,iBACE,azEyjOF,CyEvjOE,0BACE,uBzEyjOJ,CyErjOA,aACE,eACA,qBACA,iBzEwjOF,CyEtjOE,mBACE,yBzEwjOJ,CyEpjOA,cfrME,eACA,iBesMA,azEwjOF,CyEpjOI,qCACE,YzEsjON,CyEjjOA,oCAKI,gCACE,uBzEgjOJ,CyE5iOA,cACE,czE+iOF,CyE5iOA,iBACE,kBACA,czE+iOF,CACF,C0Ez2OA,4BAEE,qBACA,iBACA,ehBoFA,eACA,iBgBnFA,gBACA,kBACA,qBACA,yBACA,gBACA,W1Ey3OF,C0Et3OE,sDhB+EA,eACA,iBgB9EE,iBACA,a1E03OJ,C0Ev3OE,sDhBoEA,eACA,iBgBnEE,iBACA,c1E23OJ,C0Ex3OE,0DhByDA,eACA,iBgBxDE,iBACA,c1E43OJ,C0Et3OE,8DACE,kBfhBS,CeiBT,yB1Ey3OJ,C0Et3OE,sDACE,ef1BI,Ce2BJ,wB1Ey3OJ,C0Et3OE,wDACE,kBf1BS,Ce2BT,a1Ey3OJ,C0Ev3OI,oEACE,wB1E03ON,C0Et3OE,oDACE,kBf7CK,Ce8CL,yB1Ey3OJ,C0Ev3OI,gEACE,wB1E03ON,C0Et3OE,wDACE,ef3CO,Ce4CP,yB1Ey3OJ,C0Et3OE,sIAEE,wBf5DK,Ce6DL,sGACA,0BACA,kBACA,yB1Ey3OJ,C0Ev3OI,qGARF,sIASI,sGACA,yB1E43OJ,CACF,C0Ev3OA,SACE,iB1E03OF,C0Ex3OE,iBACE,aACA,uCACA,8B1E03OJ,C0Ez3OI,uBACI,qBACA,a1E23OR,C0Et3OA,gBACE,YhBXA,eACA,iBgBYA,iBACA,eACA,WACA,yBACA,iB1E03OF,C0Ex3OE,sBACE,wBflGK,CemGL,U1E03OJ,C0Et3OA,iCACE,wB1Ey3OF,C2E7+OA,SAEE,UACA,2BACA,iB3E2/OF,C2Ez/OE,gBACE,UhBUI,CgBTJ,iBACA,gBACA,iBACA,SACA,yBACA,yB3E2/OJ,C2Ex/OE,WACE,aACA,SjBwEF,eACA,gB1Dm7OF,C2Ex/OE,qBACE,oBhBRQ,CgBSR,6B3E0/OJ,C2Ex/OI,4BACE,kB3E0/ON,C2Et/OE,sBACE,oBhBPK,CgBQL,8B3Ew/OJ,C2Et/OI,6BACE,kB3Ew/ON,C2Ep/OE,oBACE,oBhB7BK,CgB8BL,6B3Es/OJ,C2Ep/OI,2BACE,kB3Es/ON,C4EniPA,gBACI,aACA,mBACA,eACA,a5EkjPJ,C4E/iPA,WlBqDE,YkBpDc,ClBqDd,SkBrDqB,ClBsDrB,qBC7CM,CD8CN,kBACA,mEACA,sBACA,0BkBzDA,gBACA,gBACA,gBACA,oBACA,iB5EwjPF,C0DjgPE,iBACE,mEkBrDA,oB5EyjPJ,C4EvjPI,yBACE,a5E4jPN,C4EzjPI,mBACE,WACA,c5E2jPN,C4ExjPI,8BACE,iBACA,iBACA,mCACA,a5E0jPN,C4ErjPE,mBlBiDA,eACA,iBkB9CE,oBACA,mB5EyjPJ,C4ErjPE,gCARE,UjBdO,CiBgBP,SAGA,iB5EgkPJ,C4E7jPE,alBkDA,eACA,iBkBhDE,c5E0jPJ,C4ErjPE,wBACE,SACA,8BACA,sBACA,iBACA,OACA,kBACA,QACA,iBACA,a5EujPJ,C4ErjPI,0BACE,ajB3CO,CDyEX,eACA,gB1D0hPF,C4ErjPE,+BACE,iB5EujPJ,C4EnjPA,clBdE,WkBec,ClBdd,SkBcoB,ClBbpB,qBC7CM,CD8CN,kBACA,mEACA,sBACA,0BkBUA,kBACA,cACA,aACA,mBACA,kB5E4jPF,C0DxkPE,oBACE,mEACA,qBkBcA,kE5E4jPJ,C4EzjPE,sGACE,Y5E8jPJ,C4E3jPE,2DACE,iB5E6jPJ,C6EzpPA,uBACI,WACA,a7EwqPJ,C6ElqPE,0BACE,mCACA,0BACA,kBACA,UlBWO,CkBVP,gB7EqqPJ,C6EjqPI,wBACE,Q7EmqPN,C6EjqPI,yBACE,4B7EmqPN,C6E/pPE,kBACE,a7EiqPJ,C6E5pPE,2CACE,UACA,iB7E+pPJ,C6E7pPE,iCACE,a7E+pPJ,C6EzpPA,8EACE,qB7E4pPF,C6EzpPA,oBACE,wBlBnCO,CkBoCP,0BACA,alB/BS,CDwET,eACA,iBmBxCA,gB7E6pPF,C6E1pPA,wDAEE,yBACA,kB7E6pPF,C6E1pPA,wGAIE,yB7E6pPF,C6E1pPA,oCACE,W7E6pPF,C6E1pPA,2DACE,iB7E6pPF,C6E1pPA,uCACE,iE7E6pPF,C6E1pPA,aACI,aACA,gBACA,iBACA,qBACA,kB7E6pPJ,C6E3pPI,uBACE,gB7E6pPN,C6ExpPA,cACE,a7E2pPF,C6EvpPA,aACE,kBACA,SACA,YACA,UAEA,alBjEgB,CkBkEhB,6BACA,YACA,c7EypPF,C6EnpPA,iEACE,a7EypPF,C6ExpPE,0DACE,a7E0pPJ,C6EtpPA,+BAIE,kB7EspPF,C6EzpPE,qCACE,0B7E2pPJ,C6EtpPA,sCACE,YACA,c7EypPF,C6ErpPA,gBACI,e7EwpPJ,C6ErpPA,wBACE,cACA,iB7EwpPF,C6EnpPA,aACE,iB7EupPF,C6EnpPA,YACE,SACA,+FlBvJU,CkBwJV,a7EupPF,C6EtpPE,eACE,SACA,qClB1JQ,CkB2JR,cACA,gB7EwpPJ,C6EjpPA,KAAO,U7EupPP,C6ErpPA,cACE,KAAO,U7E0pPP,C6EzpPA,KAAO,a7E8pPP,C6E7pPA,KAAO,U7EkqPP,C6EjqPA,KAAO,Y7EsqPP,C6ErqPA,KAAO,a7E0qPP,C6ExqPA,eAAmB,U7E8qPnB,C6E7qPA,KAAO,U7EirPP,C6EhrPA,KAAO,U7EqrPP,C6EprPA,KAAO,U7EyrPP,C6ExrPA,UAAa,U7E6rPb,C6E5rPA,KAAO,S7EisPP,CAGF,C6EhsPA,wBACE,KAAO,U7EosPP,C6EnsPA,KAAO,WAAa,e7EwsPpB,C6EvsPA,KAAO,WAAa,iB7E4sPpB,C6E3sPA,KAAO,WAAa,e7EgtPpB,C6E/sPA,KAAO,U7EmtPP,C6EltPA,eAAmB,U7EstPnB,C6ErtPA,KAAO,WAAa,e7E0tPpB,C6EztPA,KAAO,U7E6tPP,C6E5tPA,KAAO,U7EguPP,CACF,C6E3tPE,sxCACE,a7E8tPJ,C8Ep6PE,yBACE,Q9Eu6PJ,C8Ep6PE,oCACE,8BACA,e9Es6PJ,C8Ep6PI,iDACE,kBACA,S9Es6PN,C8En6PI,+CACE,e9Eq6PN,C+En7PE,gGACE,iCACE,WAMA,iBACA,kBACA,WACA,a/E66PJ,CACF,C+Ex6PA,eACE,gB/Eo7PF,C+Ej7PI,0BACE,wBpBTG,CoBUH,U/Em7PN,C+E96PA,mBACE,aACA,mBACA,eACA,sB/Ei7PF,C+E96PA,gBACE,epBlBM,CoBmBN,WACA,kBACA,eACA,kBACA,mEACA,mBACA,iB/Ei7PF,C+E/6PE,sBACE,gCACA,kE/Ei7PJ,C+E/6PI,yCACE,qB/Ei7PN,C+E96PI,wCACE,S/Eg7PN,C+E56PE,kCACE,6BACA,aACA,YACA,aACA,mBACA,uBACA,mBACA,kBACA,UACA,iB/E86PJ,C+E56PI,+CACE,UpBrDE,CoBsDF,eACA,gBACA,WACA,S/E86PN,C+E56PM,qDACE,a/E86PR,C+E36PM,oDACE,eACA,U/E66PR,C+E36PQ,2DACE,c/E66PV,C+Ev6PE,qCACE,YACA,aACA,aACA,sBACA,mBACA,8BACA,kBACA,gBACA,kBACA,4BACA,6B/Ey6PJ,C+Ev6PI,wCACE,Y/Ey6PN,C+Et6PI,iGACE,WACA,YACA,kBACA,aACA,sBACA,qB/Ew6PN,C+Er6PI,iDACE,sB/Eu6PN,C+Ep6PI,gDACE,YACA,aACA,sBACA,uBACA,kBACA,yB/Es6PN,C+Ep6PM,wDACE,Y/Es6PR,C+En6PM,kDACE,aACA,eACA,iBACA,gBACA,e/Eq6PR,C+Eh6PI,6CACE,yB/Ek6PN,C+Ej6PM,yDACE,Y/Em6PR,C+E95PE,mCACE,aACA,uBACA,kBACA,mBACA,aACA,YACA,sBACA,wBACA,gBACA,yBACA,8B/Eg6PJ,C+E75PE,wBACE,eACA,gBACA,YACA,SACA,mBACA,gBACA,uBACA,wB/E+5PJ,C+E55PE,kBACE,eACA,eACA,iBACA,gBACA,uBACA,gBACA,e/E85PJ,CDvkQA,QACE,e2D2EA,eACA,iB3D1EA,kBACA,kBACA,a4DKM,C5DJN,YACA,aComQF,CDlmQE,gCACE,YComQJ,CDjmQE,eACE,YACA,2B2DmDF,eACA,iB3DlDE,mC2DcF,uBACA,0BACA,uC3DdE,WC0mQJ,CDtmQA,QACE,yCCymQF,CDvmQE,yBACE,iBCymQJ,CDtmQE,6B2DCA,yBACA,0BACA,sC1D4mQF,CgF3pQA,eACI,gBtByFF,eACA,iBsBxFE,arBSK,CqBRL,iBACA,kBACA,cACA,kBACA,OhF2qQJ,CiFjrQA,iBACE,ejFgsQF,CiF9rQE,iEACE,iBjFgsQJ,CiF7rQE,qCACE,WjF+rQJ,CiF5rQE,gCvB6EA,eACA,iBuB5EE,gBACA,aACA,UjF+rQJ,CiF5rQE,8BACE,aACA,cjF8rQJ,CiF5rQI,yBAJF,8BAKI,qBjF+rQJ,CACF,CiF7rQI,uCACE,gBACA,ajF+rQN,CiF7rQM,yBAJF,uCAKI,cjFgsQN,CACF,CkFpuQA,UACE,kBvBmBS,CuBlBT,yBACA,kBACA,gBACA,iBlFuuQF,CkFruQE,gBACE,cACA,+FvBRQ,CuBSR,oBACA,iBACA,UlFuuQJ,CkFpuQE,oBACE,kBACA,kBACA,elFsuQJ,CkFpuQI,0BACE,iBlFsuQN,CkFpuQM,iCACE,WACA,WACA,YACA,WACA,cACA,kBAGA,oBvBVI,CuBUJ,kBvBVI,CuBUJ,wBvBVI,CuBWJ,uBlFsuQR,CmFpwQI,sMACE,axBoBO,CwBnBP,aACA,qBACA,qFACA,kBACA,qBACA,wBACA,SnFuwQN,CmFpwQI,0OACE,kBnFswQN,CoFrxQA,GACI,YACA,mBACA,UpFwxQJ,CoFrxQA,WACI,cACA,WACA,SACA,gBACA,mBACA,SpFwxQJ,CqFjyQI,mBACE,WACA,YACA,iBACA,kBrFoyQN,CqFjyQI,kBACE,WACA,WACA,kBACA,kBrFmyQN,CqFhyQI,0BAhBF,aAiBI,eACA,WrFmyQJ,CACF,CqFjyQI,yBArBF,aAsBI,oBrFoyQJ,CqFnyQI,mBACE,arFqyQN,CqFnyQI,kBACE,crFqyQN,CACF,CqFjyQE,gBAEE,e1BhBI,C0BiBJ,aACA,qBACA,wCACA,erFmyQJ,CqFjyQI,oCAPA,iBrF2yQJ,CsF70QA,wBACE,WACA,gBACA,eACA,MACA,YACA,UtFg1QF,CuFp1QA,MACE,cACA,mEACA,kBACA,kBvFm2QF,CuFj2QE,oBACE,UvFm2QJ,CuFh2QE,sBACE,kBvFk2QJ,CuF/1QE,aACE,sBACA,oBvFi2QJ,CuF/1QI,eACE,uBACA,oBvFi2QN,CuF91QI,kBACE,6BACA,gCACA,U5BHK,CDwET,eACA,iB6BpEI,iBACA,gBACA,iBACA,gBACA,wBvFi2QN,CuF51QI,oCAEE,gCACA,aACA,gBACA,iBACA,kBvF81QN,CuF51QM,yBACE,kDAEE,oBvF81QR,CACF,CuFz1QI,kBACE,mBvF21QN,CuFx1QQ,yBADF,oCAEI,wBvF21QR,CACF,CuFv1QI,kBACE,6BACA,+BACA,gBACA,evFy1QN,CuFp1QI,6BACE,WvFs1QN,CuFp1QM,yBAHF,6BAII,+BvFu1QN,CACF,CuFh1QE,2BACE,avFm1QJ,CuFh1QE,yCAGE,qHACE,cACA,kBACA,cvFm1QJ,CuFj1QI,wJACE,UACA,wBvFm1QN,CuF/0QE,eACE,iBvFi1QJ,CuF70QI,gEACE,mBACA,gBvF+0QN,CACF,CwFh8QA,oBACE,mBxFm8QF,CwFj8QE,uBACE,axFm8QJ,CwFh8QE,oCACE,gBxFk8QJ,CwF/7QE,kCACE,0BACA,oBxFi8QJ,CwF97QE,kCACE,cACA,UxFg8QJ,CwF97QI,kDACE,aACA,kBxFg8QN,CwF97QM,yBAJF,kDAKI,qBxFi8QN,CACF,CwF/7QM,qDACE,gBACA,aACA,gBACA,axFi8QR,CwF/7QQ,yBANF,qDAOI,mBxFk8QR,CACF,CwF/7QM,sEACE,gBACA,kBACA,YACA,aACA,wBxFi8QR,CwF97QM,qDACE,UACA,oBxFg8QR,CwF97QQ,yBAJF,qDAKI,oBACA,kBxFi8QR,CACF,CwF/7QQ,wDACE,cxFi8QV,CwF17QM,yBAFF,4DAGI,iBxF67QN,CACF,CwF37QM,gEACE,aACA,WACA,kBxF67QR,CwFx7QE,8CACE,YxF07QJ,CwFx7QI,yBAHF,8CAII,exF27QJ,CACF,CyF5gRA,UACE,SzF+gRF,CyF5gRA,gBACE,SzF+gRF,CyF5gRA,qBACE,iBzF+gRF,CyF5gRA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QzF+gRF,CyF5gRA,gGACE,YACE,UzF+gRF,CyF1gRA,gCACE,iBACA,kBACA,WACA,cACA,UzF8gRF,CARF,CyFlgRA,mEACE,gCACE,cACA,eACA,WACA,cACA,UzF6gRF,CACF,CyF1gRA,mEAEE,YACE,e,MzF6gRF,CyF1gRA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QzF6gRF,CACF,CyF1gRA,mEAEE,YACE,e,MzF6gRF,CyF1gRA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QzF6gRF,CACF,CyFxgRE,4BACE,mDACA,yCzF0gRJ,CyFvgRE,4BACE,mBACA,iBzFygRJ,CyFrgRI,iCACE,SACA,gBzFugRN,CyFpgRI,gCACE,QzFsgRN,CyFlgRE,kCACE,eACA,UACA,WACA,YACA,UACA,sBACA,iBzFogRJ,CyFlgRI,oCACE,cACA,oBzFogRN,CyFjgRI,4CACE,czFmgRN,CyFjgRM,2DACE,cACA,aACA,iBACA,wBzFmgRR,CyFjgRQ,iEACE,mBACA,azFmgRV,CyF7/QM,iEACE,cACA,aACA,gBzF+/QR,CyF7/QQ,uEACE,mBACA,azF+/QV,CyFz/QE,mCACE,cACA,kBACA,UACA,iBzF2/QJ,CyFx/QE,kCACE,aACA,qBzF0/QJ,CyFv/QE,qCACE,kBzFy/QJ,CyFt/QE,gCACE,kBzFw/QJ,CyFr/QE,wCACE,QzFu/QJ,CyFp/QE,qCACE,kBACA,SACA,wB9B/JG,C8BgKH,azFs/QJ,CyFn/QE,gCACE,yBzFq/QJ,CyFl/QE,0BACE,YzFo/QJ,CyFj/QE,qCACE,cACA,6BACA,SACA,kBACA,kBACA,qBACA,kBzFm/QJ,CyFh/QE,2CACE,cACA,qBACA,qBACA,kBACA,mGACA,0BzFk/QJ,CyF/+QE,yBACE,kCACE,YzFi/QJ,CACF,C0FzsRA,uGACE,WACA,S1F4sRF,C0FzsRA,yHACE,+C1F4sRF,C0FzsRA,yHACE,wB/BcW,C+BbX,sB1F4sRF,C0FzsRA,qEACE,WACA,S1F4sRF,C0FzsRA,iFACE,+C1F4sRF,C0FzsRA,iFACE,yBACA,yB1F4sRF,C2FnuRA,mBACI,U3FkvRJ,C2F/uRA,gBACI,aACA,mBACA,6BACA,cACA,oBACA,ahCQO,CgCPP,WACA,gBACA,eACA,MACA,OACA,QACA,UACA,qBhCKO,CgCJP,sCACA,qB3FkvRJ,C2FhvRI,yBAlBJ,gBAmBQ,a3FmvRN,C2FlvRM,6BACI,cACA,W3FovRV,CACF,C2FhvRA,4CACI,UACA,cACA,WACA,gBACA,kBACA,yBACA,gBACA,qB3FmvRJ,C2FjvRI,2DACI,a3FmvRR,C2FlvRQ,iEACI,a3FovRZ,C2F/uRA,aACI,aACA,sBACA,YACA,W3FkvRJ,C2FhvRI,gBjC8BF,eACA,iBiC7BM,gBACA,kBACA,wB3FmvRR,C2FhvRI,gBACI,SACA,S3FkvRR,C2FhvRQ,mBACI,e3FkvRZ,C2F9uRI,ejCmBF,eACA,iBiClBM,ahCrDI,CgCsDJ,qBACA,e3FivRR,C2FhvRQ,qBACI,U3FkvRZ,C2FhvRQ,uBACE,oB3FkvRV,C2F/uRQ,2BACE,gB3FivRV,C2F7uRI,6BACI,e3F+uRR,C2F9uRQ,+BACI,e3FgvRZ,C0D7yRI,yBiCmBJ,aA+CQ,a3F+uRN,CACF,C4Fl1RA,eACE,UACA,eACA,SACA,QACA,YACA,gBACA,iB5Fq1RF,C4Fj1RE,yBADF,iBAEI,Y5Fq1RF,CACF,C4Fn1RE,4BACE,gB5Fq1RJ,C4Fn1RI,yCACE,c5Fq1RN,C4Fh1RA,WACE,eACA,mBACA,oB5Fm1RF,C4Fj1RE,iDAEE,c5Fm1RJ,C4Fh1RE,wBACE,gBACA,oBACA,S5Fk1RJ,C4F/0RE,kCACE,kBACA,Q5Fi1RJ,C4F/0RI,wCACE,a5Fi1RN,C4F70RE,+DAEE,eACA,qBACA,aACA,6BACA,YACA,gBACA,UACA,gB5F+0RJ,C4F70RI,6FACE,aACA,kB5Fg1RN,C4F30RI,qDACE,YACA,WACA,kBACA,UACA,O5F60RN,C4F10RI,mDACE,a5F40RN,C4Fx0RE,iCACE,ajCzDS,CiC0DT,SACA,iB5F00RJ,C4Fx0RI,uCACE,a5F00RN,C4Ft0RE,uCACE,qB5Fw0RJ,C4Fr0RE,iDACE,oB5Fu0RJ,C4Fn0RE,+BlCpDA,uBACA,0BACA,sC1D83RF,C4Fx0RE,qClCxDA,wBACA,0BACA,sC1Du4RF,C4F50RE,uBACE,qBACA,SACA,iB5F80RJ,C4F50RI,yBALF,uBAMI,U5F+0RJ,CACF,C4F70RI,0BACE,sBACA,eACA,iBACA,uBACA,kBACA,8B5F+0RN,C4F70RM,mCACE,WACA,cACA,WACA,UACA,iBACA,mBACA,U5F+0RR,C4F50RM,6BACE,iB5F80RR,C4F30RM,4BACE,kBACA,cAEA,iBACA,eACA,kB5F60RR,C4F10RM,kCACE,a5F40RR,C4Fx0RQ,mCACE,ajC5ID,CiC6IC,e5F00RV,C4Fx0RU,0CACE,WACA,kBACA,UACA,SACA,kBjCpJH,CiCqJG,kBACA,UACA,U5F00RZ,C4Fn0RM,gDACE,8BACA,SACA,WACA,OACA,kBACA,K5Fq0RR,C4Fl0RM,4DACE,Q5Fo0RR,C4Fj0RM,2DACE,wB5Fm0RR,C4Fh0RM,qEACE,WACA,kBACA,UACA,SACA,kBjC5KI,CiC6KJ,kBACA,UACA,U5Fk0RR,C4F3zRA,4CACE,Y5F8zRF,C6FvgSA,kBACE,iB7FuhSF,C6FphSA,oBACE,elCUM,CkCTN,mEACA,sBACA,sBACA,alC+BgB,CDqDhB,eACA,iBmCnFA,iBACA,gBACA,YACA,aACA,eACA,gBACA,WACA,c7FwhSF,C6FthSE,2BACE,gBACA,iBACA,wB7FwhSJ,C6FrhSE,0BACE,yBACA,sE7FuhSJ,C6FnhSA,sBACE,elClBM,CkCmBN,sEACA,kBACA,qBACA,SACA,UACA,kBACA,MACA,WACA,S7FshSF,C6FphSE,yBACE,enC2CF,eACA,iBmC1CE,iBACA,SACA,sBACA,kBACA,kB7FuhSJ,C6FrhSI,+BACE,kBlCpBW,CkCqBX,a7FuhSN,C6FphSI,kCACE,wB7FshSN,C6FnhSI,iCACE,UACA,kBACA,QACA,S7FqhSN,C8FxlSE,8EACE,kD9F2lSJ,C8FllSE,+JACE,a9FulSJ,C8FrlSI,iEACE,wB9FulSN,C8FnlSE,yDACE,a9FqlSJ,C8F/kSC,2BACG,kD9FklSJ,C8FzkSE,sJACE,a9F8kSJ,C8F5kSI,8DACE,wB9F8kSN,C8F1kSE,sDACE,a9F4kSJ,C+FtnSA,oDACE,UACA,YACA,e/FqoSF,C+FloSA,iBACE,kBpCEO,CoCDP,aACA,kBACA,mBACA,WACA,WAfmB,CAgBnB,sB/FqoSF,C+FnoSE,yBATF,iBAUI,2BACA,iB/FsoSF,CACF,C+FpoSE,+BACE,kBACA,MACA,QACA,UA3BiB,CA4BjB,WA5BiB,CA6BjB,e/FsoSJ,C+FnoSE,0BACE,4BACA,oBACA,S/FqoSJ,C+FnoSI,4BACE,Y/FqoSN,C+FloSI,gCACE,iB/FooSN,C+FnoSM,yBAFF,gCAGI,Y/FsoSN,CACF,C+FnoSI,mCACE,gBACA,uBACA,kBACA,a/FqoSN,C+FloSI,yCACE,mBACA,apCvCK,CoCwCL,mBACA,yBACA,erCmCJ,eACA,gB1DkmSF,C+FpoSM,yBAPF,yCAQI,Y/FuoSN,CACF,C+F/nSE,wCACE,iB/FkoSJ,C+F/nSE,uDACE,S/FioSJ,C+F/nSI,yBAHF,uDAII,S/FkoSJ,CACF,C+F/nSE,sCACE,S/FioSJ,C+F9nSE,uCACE,iB/FgoSJ,C+F5nSI,2QACE,gB/F8nSN,C+FpnSE,6CACE,gC/FunSJ,C+FrnSE,uGACE,wB/FunSJ,CgGnuSA,+BACI,kBACA,iBACA,etCuFF,eACA,iBsCtFE,WACA,iBACA,gBACA,wBhGmvSJ,CgGjvSI,oCAVJ,+BAWQ,cACA,YhGovSN,CACF,CgGlvSI,qDACI,aACA,mBACA,uBACA,mBACA,wBrCCD,CqCAC,arCCK,CqCAL,kBACA,WhGovSR,CgGlvSQ,qFACI,gBhGovSZ,CgGhvSI,uEtCiEF,eACA,iBsChEM,qBrCTG,CqCUH,UrChBA,CqCiBA,mBhGmvSR,CgG/uSA,kBAGI,iBtCsDF,eACA,gB1D2rSF,CgG/uSI,oCANJ,kBAOQ,YhGkvSN,CACF,CgGhvSI,mCACI,wBhGkvSR,CgGhvSQ,+CACI,wBhGkvSZ,CgG9uSI,iCACI,wBhGgvSR,CgG7uSY,qCACI,ehG+uShB,CgGhvSY,2CACI,kBhGkvShB,CgGnvSY,2CACI,kBhGqvShB,CgGtvSY,sCACI,kBhGwvShB,CgGzvSY,uCACI,kBhG2vShB,CgG5vSY,2CACI,kBhG8vShB,CgG/vSY,0CACI,kBhGiwShB,CgGlwSY,sCACI,kBhGowShB,CgGrwSY,iHACI,kBhG6wShB,CgG9wSY,0CACI,ehGgxShB,CgGjxSY,4CACI,kBhGmxShB,CgGpxSY,yCACI,kBhGsxShB,CiGr1SA,aAGI,EACI,yBjGs1SN,CiGn1SE,2BACI,yBjGs1SN,CiGn1SE,GACI,sBACA,oBjGs1SN,CiGn1SE,kBACI,sBjGs1SN,CiGn1SE,yDACI,uBjGs1SN,CiGn1SE,6BACI,yCjGs1SN,CiGn1SE,IACI,wBjGs1SN,CiGn1SE,EACI,QjGs1SN,CiGn1SE,0BACI,uBjGs1SN,CiG70SE,0CACI,sBjGo1SN,CiGh1SE,qBACI,kBjGm1SN,CiGh1SE,wCACI,ejGm1SN,CiGh1SE,iBACI,gBjGm1SN,CiGh1SE,UACI,cjGm1SN,CiGh1SE,cACI,qBjGm1SN,CiG/0SM,8EACI,ejGk1SV,CiGh1SU,sxCACI,UjGk1Sd,CiG90SM,oBACI,gBAEA,UjGg1SV,CiG50SE,kCALQ,yBjGq1SV,CiG10SU,kEACI,iBjG60Sd,CiG10SU,4DACI,ejG40Sd,CiGv0SE,kBACI,qBACA,0BACA,qBACA,oBACA,uBjG00SN,CiGv0SE,qBACI,wBjG00SN,CACF,CAv7SA,KACE,SACA,UACA,gBAy7SF,CAt7SA,EACE,qBAy7SF","file":"styles.1c34c84d0c4e23014604.css","sourcesContent":["@import '../mixins';\n\n/*\n * General styling to make detail/summary tags look a bit more material\n * To get the best out of it you should structure your usage like this:\n *\n * ```\n * <details>\n *   <summary>Some title</summary>\n *   <div class=\"details-content\">\n *     Some content\n *   </div>\n *  </details>\n *\n */\n\nsummary {\n  cursor: pointer;\n  @include typescale-default;\n  position: relative;\n  padding: 16px 24px;\n  color: $black;\n  height: 16px;\n  display: block; // Remove the built in details marker in FF\n\n  &::-webkit-details-marker {\n    display: none; // Remove the built in details marker in webkit\n  }\n\n  &::before {\n    content: '\\E5CE'; // See https://material.io/icons/#ic_expand_less\n    font-family: 'Material Icons';\n    @include typescale-xlarge;\n    -webkit-font-smoothing: antialiased;\n    @include rotate(0deg); // We will rotate 180 degrees when details is open\n    float: right;\n  }\n}\n\ndetails {\n  box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n\n  .detail-contents {\n    padding: 16px 24px;\n  }\n\n  &[open] > summary::before {\n    @include rotate(180deg); // Rotate the icon\n  }\n}\n","/* You can add global styles to this file, and also import other style files */\n@import './styles/ngrx-io-theme';\n@import './styles/main.scss';\n\nbody {\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n}\n\n* {\n  box-sizing: border-box;\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: ($height - stepper-variables.$label-header-height) / 2;\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + stepper-variables.$label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + stepper-variables.$label-header-height / 2;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@import './mixins';\n\n$dull-magenta: (\n  50: #f6e7f9,\n  100: #eac3f1,\n  200: #dc9be7,\n  300: #cd72dd,\n  400: #c354d6,\n  500: #b836cf,\n  600: #b130ca,\n  700: #a829c3,\n  800: #a022bd,\n  900: #9116b2,\n  A100: #f9e5ff,\n  A200: #edb2ff,\n  A400: #e27fff,\n  A700: #dc65ff,\n  contrast: (\n    50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #000000,\n    500: #ffffff,\n    600: #ffffff,\n    700: #ffffff,\n    800: #ffffff,\n    900: #ffffff,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000,\n  ),\n);\n$gold: (\n  50: #fff5e7,\n  100: #fee6c4,\n  200: #fed69d,\n  300: #fec576,\n  400: #fdb858,\n  500: #fdac3b,\n  600: #fda535,\n  700: #fc9b2d,\n  800: #fc9226,\n  900: #fc8219,\n  A100: #ffffff,\n  A200: #fffcfa,\n  A400: #ffdfc7,\n  A700: #ffd1ad,\n  contrast: (\n    50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #000000,\n    500: #000000,\n    600: #000000,\n    700: #000000,\n    800: #000000,\n    900: #000000,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000,\n  ),\n);\naio-shell.page-home {\n  .prettyprint-scroller {\n    overflow: auto;\n    display: block;\n    max-width: 100%;\n  }\n  pre.prettyprint {\n    border: none;\n    padding: 1rem 2rem;\n    margin: 0;\n    border-radius: 3px;\n    font-family: 'PT Mono', monospace;\n    font-weight: normal;\n    font-size: 13px;\n    line-height: 1.6em;\n    display: inline-block;\n    background-color: rgba(0, 0, 0, 0.3);\n    @media screen and (max-width: 600px) {\n      min-width: 460px;\n    }\n  }\n\n   // just for safari on ios\n  @media not all and (min-resolution: 0.001dpcm) {\n    @supports (-webkit-appearance: none) {\n      pre.prettyprint {\n        @media screen and (max-width: 600px) {\n          min-width: 680px;\n        }\n      }\n    }\n  }\n\n  pre .nocode {\n    background-color: none;\n    color: #000;\n  }\n  pre .str {\n    color: mat-color($dull-magenta, 100);\n  }\n  /* string  - pink */\n  pre .kwd {\n    color: #f0e68c;\n    font-weight: bold;\n  }\n  pre .com {\n    color: #87ceeb;\n  }\n  /* comment - skyblue */\n  pre .typ {\n    color: mat-color($gold, 300);\n  }\n  /* type    - lightgreen */\n  pre .lit {\n    color: mat-color($dull-magenta, 300);\n  }\n  /* literal - darkred */\n  pre .pun {\n    color: #fff;\n  }\n  /* punctuation */\n  pre .pln {\n    color: #fff;\n  }\n  /* plaintext */\n  pre .tag {\n    color: #f0e68c;\n    font-weight: bold;\n  }\n  /* html/xml tag    - lightyellow */\n  pre .atn {\n    color: #bdb76b;\n    font-weight: bold;\n  }\n  /* attribute name  - khaki */\n  pre .atv {\n    color: mat-color($dull-magenta, 100);\n  }\n  /* attribute value - pink */\n  pre .dec {\n    color: mat-color($gold, 300);\n  }\n  /* decimal         - lightgreen */\n  /* Specify class=linenums on a pre to get line numbering */\n  ol.linenums {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: #aeaeae;\n  }\n  /* IE indents via margin-left */\n  li.L0,\n  li.L1,\n  li.L2,\n  li.L3,\n  li.L5,\n  li.L6,\n  li.L7,\n  li.L8 {\n    list-style-type: none;\n  }\n  /* Alternate shading for lines */\n  li.L1,\n  li.L3,\n  li.L5,\n  li.L7,\n  li.L9 {\n  }\n}\nngrx-circles circle {\n  fill: white;\n}\nngrx-circles[color='primary'] circle {\n  fill: mat-color($dull-magenta, 500);\n}\nngrx-circles[color='accent'] circle {\n  fill: mat-color($gold, 500);\n}\nngrx-circles {\n  @for $i from 1 to 10 {\n    g:nth-of-type(#{$i}) {\n      transform: translate(100px, 100px)\n        rotate(#{20deg * ($i - 1)})\n        translate(-100px, -100px)\n        translate(95px, 5px);\n    }\n  }\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../../cdk/a11y';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include a11y.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typpographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n@function define-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        subtitle-2: map.get($config, subheading-1),\n        body-1: map.get($config, body-2),\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n// stylelint-disable material/theme-mixin-api\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n// stylelint-enable material/theme-mixin-api\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _unselected-cell {\n        background-color: theming.get-color-from-palette($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      option {\n        color: palette.$dark-primary-text;\n      }\n\n      option:disabled {\n        color: palette.$dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      &::after,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: ($target-height - $font-size) / 2;\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding:\n    ($handset-target-height - $handset-font-size) / 2;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: theming.get-color-from-palette($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../../../cdk/a11y';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include a11y.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assitive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","@use '../../cdk/overlay';\n@use '../../cdk/a11y';\n@use '../../cdk/text-field';\n\n// Core styles that can be used to apply material design treatments to any element.\n@use './ripple/ripple';\n@use './focus-indicators/focus-indicators';\n@use './typography/all-typography';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core($typography-config: null) {\n  @include all-typography.all-component-typographies($typography-config);\n  @include ripple.ripple();\n  @include a11y.a11y-visually-hidden();\n  @include overlay.overlay();\n  @include text-field.text-field-autosize();\n  @include text-field.text-field-autofill();\n\n  @include focus-indicators.private-strong-focus-indicators-positioning();\n  @include _mdc-core();\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mdc-core() {\n  @include _mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n    &::after {\n      color: theming.get-color-from-palette($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include ripple-theme.theme($theme);\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation(\n    $zValue,\n    $color: $color,\n    $opacity: $opacity) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin standard-typography($config-or-theme) {}\n\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n// stylelint-enable\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@import '../mixins';\n\nbody {\n  @include typescale-default;\n  font-family: $main-font;\n  margin: 0;\n  color: $darkgray;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nh1 {\n  display: inline-block;\n  @include typescale-display;\n  font-weight: 500;\n  margin: 8px 0px;\n\n  @media screen and (max-width: 600px) {\n    margin-top: 0;\n  }\n}\n\nh2 {\n  @include typescale-xlarge;\n  font-weight: 500;\n  margin: 32px 0px 24px;\n  clear: both;\n}\n\nh3 {\n  @include typescale-large;\n  font-weight: 500;\n  margin: 24px 0px 12px;\n  clear: both;\n}\n\nh4 {\n  @include typescale-default;\n  font-weight: 500;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh5 {\n  @include typescale-default;\n  font-weight: 400;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh6 {\n  color: $mediumgray;\n  @include typescale-default;\n  font-weight: 400;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh2, h3, h4, h5, h6 {\n  a {\n    font-size: inherit;\n  }\n\n  @media screen and (max-width: 600px) {\n    margin: 8px 0;\n  }\n}\n\n.mat-tab-body-wrapper h2 {\n  margin-top: 0;\n}\n\np, ol, ul, ol, li, input, a  {\n  @include typescale-default;\n  letter-spacing: 0.30px;\n  font-weight: 400;\n  & > em {\n    letter-spacing: 0.30px;\n  }\n}\n\nol {\n  li, p {\n    margin: 4px 0;\n  }\n}\n\nli p {\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n}\n\n.app-toolbar a {\n  @include typescale-large;\n  font-weight: 400;\n  color: $white;\n  font-family: $main-font;\n  text-transform: uppercase;\n  padding: 21px 0;\n}\n\naio-shell.page-home .app-toolbar a {\n  color: $purple;\n}\n\nstrong {\n  font-weight: $bold-font-weight;\n}\n\ntable {\n  border-collapse: collapse;\n  border-radius: 2px;\n  border-spacing: 0;\n  margin: 12px 0 32px;\n}\n\ntable tbody th {\n  max-width: 100px;\n  padding: 13px 32px;\n  text-align: left;\n}\n\ntd {\n  font-weight: 400;\n  padding: 8px 30px;\n  letter-spacing: 0.30px;\n\n  p {\n    margin: 0;\n  }\n}\n\nth {\n  @include typescale-default;\n  font-weight: 500;\n  padding: 13px 32px;\n  text-align: left;\n}\n\np > code, li > code, td > code, th > code {\n  font-family: $code-font;\n  font-size: 85%;\n  color: $darkgray;\n  letter-spacing: 0;\n  line-height: 1;\n  padding: 2px 0;\n  background-color: $backgroundgray;\n  border-radius: 4px;\n}\n\ncode {\n  font-family: $code-font;\n  font-size: 90%;\n}\n\n.sidenav-content a {\n  color: $lightpurple;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n","/************************************\n\n             Media queries\n\n To use these, put this snippet in the appropriate selector:\n\n     @include bp(tiny) {\n         background-color: purple;\n     }\n\n     Replace \"tiny\" with \"medium\" or \"big\" as necessary.\n*************************************/\n\n@mixin bp($point) {\n\n  $bp-xsmall: \"(min-width: 320px)\";\n  $bp-teeny: \"(min-width: 480px)\";\n  $bp-tiny: \"(min-width: 600px)\";\n  $bp-small: \"(min-width: 650px)\";\n  $bp-medium: \"(min-width: 800px)\";\n  $bp-big: \"(min-width: 1000px)\";\n\n  @if $point == big {\n    @media #{$bp-big} { @content; }\n  }\n  @else if $point == medium {\n    @media #{$bp-medium} { @content; }\n  }\n  @else if $point == small {\n    @media #{$bp-small}  { @content; }\n  }\n  @else if $point == tiny {\n    @media #{$bp-tiny}  { @content; }\n  }\n  @else if $point == teeny {\n    @media #{$bp-teeny}  { @content; }\n  }\n  @else if $point == xsmall {\n    @media #{$bp-xsmall}  { @content; }\n  }\n}\n\n@mixin rotate($degrees) {\n  -moz-transform: rotate($degrees);\n  -webkit-transform: rotate($degrees);\n  -o-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n  transition: transform 150ms;\n  transition-timing-function: ease-in-out;\n}\n\n@mixin codeblock($bgcolor) {\n    background-color: $bgcolor;\n    border-radius: 5px;\n    padding: 20px;\n    margin: 0 auto; // was 24\n    border: 0.5px solid $lightgray;\n}\n\n// INFO CARD SKELETON\n@mixin card($height, $width) {\n  height: $height;\n  width: $width;\n  background-color: $white;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: box-shadow .5s;\n\n  &:hover {\n    box-shadow: 0 8px 8px rgba($black, 0.24), 0 0 8px rgba($black, 0.12);\n    text-decoration: none;\n  }\n}\n\n@mixin typescale-display {\n  font-size: 26px;\n  line-height: 32px;\n}\n\n@mixin typescale-xlarge {\n  font-size: 24px;\n  line-height: 30px;\n}\n\n@mixin typescale-large {\n  font-size: 20px;\n  line-height: 28px;\n}\n\n@mixin typescale-default {\n  font-size: 16px;\n  line-height: 24px;\n}\n\n@mixin typescale-small {\n  font-size: 14px;\n  line-height: 20px;\n}\n","// TYPOGRAPHY\n$main-font: \"Roboto\",\"Helvetica Neue Light\",\"Helvetica Neue\",Helvetica,Arial,\"Lucida Grande\",sans-serif;\n$code-font: \"Droid Sans Mono\", monospace;\n$bold-font-weight: 600;\n\n// Z-LAYER\n$layer-1: 1;\n$layer-2: 2;\n$layer-3: 3;\n$layer-4: 4;\n$layer-5: 5;\n\n// COLOR PALETTE\n$blue: #1976D2;\n$purple: #412846;\n$lightpurple: #84438a;\n$accentblue: #1E88E5;\n$brightred: #DD0031;\n$darkred: #C3002F;\n$white: #FFFFFF;\n$offwhite: #FAFAFA;\n$backgroundgray: #F1F1F1;\n$lightgray: #DBDBDB;\n$mist: #ECEFF1;\n$mediumgray: #6e6e6e;\n$darkgray: #333;\n$black: #0A1014;\n$orange: #FF9800;\n$darkorange: #940;\n$anti-pattern: $brightred;\n\n// API & CODE COLORS\n$amber-700: #FFA000;\n$purple-400: #42A5F5;\n$purple-500: #2196F3;\n$purple-600: #1E88E5;\n$purple-800: #1565C0;\n$purple-900: #0D47A1;\n$purple-grey-50: #ECEFF1;\n$purple-grey-100: #CFD8DC;\n$purple-grey-200: #B0BEC5;\n$purple-grey-300: #90A4AE;\n$purple-grey-400: #78909C;\n$purple-grey-500: #607D8B;\n$purple-grey-600: #546E7A;\n$purple-grey-700: #455A64;\n$purple-grey-800: #37474F;\n$purple-grey-900: #263238;\n$codegreen: #17ff0b;\n$green-500: #4CAF50;\n$green-800: #2E7D32;\n$light-green-600: #7CB342;\n$pink-600: #D81B60;\n$purple-600: #8E24AA;\n$teal-500: #009688;\n$lightgrey: #F5F6F7;\n\n// GRADIENTS\n$bluegradient: linear-gradient(145deg,#0D47A1,#42A5F5);\n$redgradient: linear-gradient(145deg,$darkred,$brightred);\n\n// API LABEL COLOR AND SYMBOLS MAP\n$api-symbols: (\n  all: (\n    content: ' ',\n    background: $white\n  ),\n  decorator: (\n    content: '@',\n    background: $purple-800\n  ),\n  directive: (\n    content: 'D',\n    background: $pink-600\n  ),\n  pipe: (\n    content: 'P',\n    background: $purple-grey-600\n  ),\n  class: (\n    content: 'C',\n    background: $purple-500\n  ),\n  interface: (\n    content: 'I',\n    background: $teal-500\n  ),\n  function: (\n    content: 'F',\n    background: $green-500\n  ),\n  enum: (\n    content: 'E',\n    background: $amber-700\n  ),\n  const: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  let: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  var: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  ngmodule: (\n    content: 'M',\n    background: $darkorange\n  ),\n  type-alias: (\n    content: 'T',\n    background: $light-green-600\n  ),\n  package: (\n    content: 'Pk',\n    background: $purple-600\n  )\n);\n\n// OTHER\n$small-breakpoint-width: 840px;\n$phone-breakpoint: 480px;\n$tablet-breakpoint: 800px;\n","@import '../mixins';\n\n.api-body {\n\n    max-width: 1200px;\n\n    table {\n        margin: 12px 0 24px;\n\n        th {\n            text-transform: none;\n            @include typescale-default;\n            font-weight: bold;\n        }\n\n        tr {\n            border-bottom: 1px solid $lightgray;\n        }\n\n        td {\n            vertical-align: middle;\n        }\n\n        hr {\n            margin: 16px 0;\n        }\n\n        tr:last-child {\n            border-bottom: none;\n        }\n\n        &.item-table {\n            td {\n                padding: 32px;\n            }\n        }\n\n        &.list-table {\n            td {\n                padding: 16px 24px;\n            }\n        }\n\n        .short-description {\n            margin-left: 0;\n        }\n    }\n}\n","aio-shell.page-docs {\n  .sidenav-content {\n    // padding: 6rem 3rem 3rem 3rem; // THIS CAUSES THE TOP NAV TOOLBAR TO JUMP BETWEEN DOCS AND OTHER PAGES\n    margin: auto;\n  }\n}\n\n.sidenav-content {\n  min-height: 100vh;\n  padding: 80px 3rem 1rem;\n}\n\n@media (max-width: 600px) {\n  aio-menu {\n    display: none;\n  }\n\n  .sidenav-content {\n    min-height: 450px;\n    padding: 80px 1rem 1rem;\n  }\n}\n\n.sidenav-container {\n  width: 100%;\n  height: 100vh;\n}\n\n.sidenav-content button {\n  min-width: 24px;\n}\n\n#guide-change-log h2::before {\n  content: \"\";\n  display: block;\n  height: 1px;\n  margin: 24px 0px;\n  background: $lightgray;\n}\n",".no-animations aio-doc-viewer > * {\n  // Disable view transition animations.\n  transition: none !important;\n}\n","@import '../mixins';\n\nfooter {\n  position: relative;\n  line-height: 24px;\n  flex: 1;\n  padding: 48px;\n  z-index: 0;\n  background-color: $purple;\n  color: $offwhite;\n  font-weight: 300;\n\n  aio-footer {\n    position: relative;\n    z-index: 0;\n  }\n\n  .footer-block {\n    margin: 0 24px;\n    vertical-align: top;\n  }\n\n  a {\n      color: $offwhite;\n      font-weight: 300;\n      text-decoration: none;\n      z-index: 20;\n      position: relative;\n      &:hover {\n        text-decoration: underline;\n      }\n      &:visited {\n        text-decoration: none;\n      }\n  }\n  a.action {\n    cursor: pointer;\n  }\n  h3 {\n    @include typescale-default;\n    text-transform: uppercase;\n    font-weight: 400;\n    margin: 0 0 16px;\n  }\n  p {\n    text-align: center;\n    margin: 10px 0px 5px;\n\n    @media (max-width: 480px) {\n      text-align: left;\n    }\n  }\n\n  div.grid-fluid {\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n\n    justify-content: center;\n\n    text-align: left;\n    margin: 0 0 40px;\n\n    ul {\n      list-style-position: inside;\n      padding: 0px;\n      margin: 0px;\n\n      li {\n        list-style-type: none;\n        padding: 0px;\n        text-align: left;\n      }\n    }\n\n    @media (max-width: 480px) {\n      flex-direction: column;\n      .footer-block {\n        margin: 8px 24px;\n      }\n    }\n  }\n\n\n\n\n  @media (max-width: 700px) {\n    h3 {\n      @include typescale-large;\n    }\n  }\n  @media (max-width: 600px) {\n    h3 {\n      @include typescale-default;\n    }\n  }\n}\n\nfooter::after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n","html, body {\n    height: 100%;\n}\n\nbody {\n    background-color: $offwhite;\n}\n\n.clearfix {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.clear {\n    clear: both;\n}\n\n.l-clearfix:after, .clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.is-visible {\n    display: block!important;\n}\n\n.l-flex-wrap {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.flex-center {\n    display: flex;\n    justify-content: center;\n}\n\n.center {\n    text-align: center;\n}\n\n.visually-hidden {\n    position: absolute !important;\n    top: -9999px !important;\n    left: -9999px !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase;\n}",".hero {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  min-height: 480px;\n  height: 80vh;\n  max-height: 480px;\n  box-sizing: border-box;\n  padding: 48px 48px 32px 48px;\n  overflow: hidden;\n  transform-origin: 100%;\n\n  @media (max-width: 480px) {\n    max-height: 486px;\n    padding-top: 40px;\n    transform: none;\n  }\n\n  .hero-title {\n    display: inline-block;\n    font-size: 28px;\n    font-weight: 400;\n    line-height: 48px;\n    margin: 0 8px 0 0;\n    text-transform: uppercase;\n\n    &.is-standard-case {\n      text-transform: none;\n    }\n  }\n}\n\n.homepage-header {\n  background: url('/assets/images/banner.svg');\n  background-size: 100%;\n}\n\nsection#intro {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  width: 900px;\n  height: 480px;\n  margin: 0 auto -32px;\n  padding: 48px 0 0;\n  color: white;\n\n  @media (max-width: 780px) {\n    justify-content: center;\n    width: 100%;\n    max-width: 100vw;\n    padding: 40px 0 32px;\n\n    button {\n      margin: 0;\n      height: 60px;\n    }\n  }\n\n  .homepage-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    max-width: 1040px;\n    margin: 0 auto;\n    margin-top: -7%;\n    padding-top: 0;\n    padding-bottom: 0;\n\n    @media  (max-width: 780px) {\n      width: 100%;\n      max-width: 100%;\n      padding: 0;\n    }\n  }\n\n  .hero-headline {\n    font-size: 40px;\n    line-height: 64px;\n    font-weight: 500;\n    margin: 32px 0 8px 0;\n\n    &:after {\n      display: none;\n    }\n\n    @media (max-width: 780px) {\n      text-align: center;\n    }\n\n    @media (max-width: 575px) {\n      font-size: 32px;\n      line-height: 50px;\n    }\n  }\n\n  .hero-sub-headline {\n    font-size: 18px;\n    line-height: 32px;\n  }\n\n  .hero-logo {\n    display: flex;\n    padding-top: 48px;\n    padding-bottom: 24px;\n\n    @media (max-width: 780px) {\n      justify-content: center;\n    }\n\n    img {\n      width: 260px;\n      height: 260px;\n      margin-bottom: 8px;\n      padding: 0;\n      filter: drop-shadow(0 2px 2px rgba($black, 0.24));\n\n      @media (max-width: 780px) {\n        width: 250px;\n        height: 250px;\n      }\n    }\n  }\n}\n\n.announcement-bar {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 50vw;\n  margin: 0 auto;\n  padding: 16px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: all 0.3s ease-in;\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n    text-align: center;\n    padding: 32px 16px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    max-width: none;\n  }\n\n  & > * {\n    margin: 8px;\n  }\n\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    min-width: 160px;\n    font-size: 16px;\n    color: $white;\n    background-color: $purple;\n    border-radius: 48px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    box-sizing: border-box;\n    cursor: pointer;\n\n    &:hover {\n      color: rgba($white, 0.7);\n    }\n  }\n\n  .material-icons {\n    display: none;\n    right: 0;\n    position: static;\n    transition: all 0.3s ease-in;\n    font-size: 16px;\n  }\n\n  p {\n    font-size: 16px;\n    margin: 8px;\n    text-align: center;\n  }\n}\n\n// ANGULAR LINE\n.background-sky {\n  color: $white;\n}\n\n.home-row .card {\n  @include card(70%, auto);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n  width: 70%;\n  min-width: 350px;\n  height: auto;\n  margin: auto;\n  padding: 24px;\n  box-shadow: 0 6px 6px rgba(10, 16, 20, 0.15), 0 0 52px rgba(10, 16, 20, 0.12);\n\n  @media (max-width: 600px) {\n    margin: 16px auto 0;\n\n    h2 {\n      margin: 0;\n    }\n\n    img {\n      max-width: none;\n      height: 70px;\n    }\n  }\n\n  @media (max-width: 1300px) {\n    img {\n      height: 70px;\n      max-width: none;\n    }\n  }\n\n  img {\n    margin: 16px ;\n  }\n\n  .card-text-container {\n    margin: 0 16px;\n\n    p {\n      text-align: left;\n      color: $darkgray;\n      margin: 0;\n      padding: 8px 0;\n    }\n  }\n\n\n  &:hover {\n    h2 {\n      color: $purple;\n    }\n  }\n}\n\n.button.hero-cta {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 184px;\n  height: 40px;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 40px;\n  background-color: $white;\n  border-radius: 48px;\n  box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n}\n\naio-shell {\n  &.page-resources, &.page-events, &.page-features, &.page-contribute {\n    section {\n      padding: 0rem 0rem 3rem;\n    }\n  }\n\n  &.page-home {\n\n    article {\n      color: $white;\n      background-color: $purple;\n    }\n    section {\n      padding: 0;\n    }\n  }\n\n  &.page-home, &.page-resources, &.page-events, &.page-contribute {\n    color: $white;\n\n    article {\n      padding: 32px;\n\n      @media (max-width: 800px) {\n        padding: 24px;\n      }\n    }\n  }\n\n  &.page-features {\n    article {\n      padding: 0 3rem;\n    }\n  }\n\n  &.page-home, &.page-resources, &.page-events, &.page-features {\n\n    .content img {\n      @media (max-width: 1300px) {\n        max-width: none;\n      }\n    }\n\n    .feature-section img {\n      max-width: 70px;\n    }\n\n    @media (max-width: 600px) {\n      mat-sidenav-container.sidenav-container {\n        padding-top: 0;\n      }\n    }\n  }\n\n  .cta-bar .hero-cta {\n    color: $purple;\n  }\n}\n\n.cta-bar.announcement-bar {\n  background: none;\n  box-shadow: none;\n}\n\n.text-headline {\n  color: $white;\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 10px;\n  text-transform: uppercase;\n}\n\naio-shell:not(.view-SideNav) {\n  mat-sidenav-container.sidenav-container {\n    max-width: none;\n  }\n}\n\ndiv[layout=row]{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n\n    @media (max-width: 480px) {\n      display: block;\n  }\n}\n\n.layout-row {\n    flex-direction: row;\n}\n\n.home-rows {\n    overflow: hidden;\n    @media (max-width: 600px) {\n      margin: 0;\n    }\n}\n\n.background-superhero-paper {\n    background-size: 100%;\n    background-blend-mode: multiply;\n}\n\n.home-row {\n  max-width: 920px;\n  margin: 32px auto;\n\n  .promo-img-container, .text-container {\n    max-width: 50%;\n\n    @media(max-width: 480px) {\n      max-width: 100%;\n      text-align: center;\n\n      &:nth-child(even) {\n        flex-direction: column-reverse;\n      }\n    }\n  }\n\n  .text-block {\n    padding-right: 15%;\n\n    @media(max-width: 600px) {\n      padding: 0;\n    }\n  }\n\n  .promo-img-container {\n\n    img {\n      max-width: 90% !important;\n    }\n\n    p {\n      margin: 0 20px;\n    }\n\n    img {\n      max-width: 90%;\n\n\n      @media (max-width: 599px) {\n        max-width: 100%;\n        float: initial !important;\n      }\n    }\n  }\n}\n\n.marketing-banner {\n  background-color: lighten($purple, 10);\n  margin-top: 64px;\n  padding: 32px;\n\n  @media (max-width: 600px) {\n    margin-top: 56px;\n    padding: 18px;\n  }\n\n  .banner-headline {\n    text-transform: uppercase;\n    font-size: 24px;\n    font-weight: 300;\n    color: white;\n    margin: 0;\n    -webkit-margin-before: 0;\n    -webkit-margin-after: 0;\n\n    @media (max-width: 600px) {\n      font-size: 18px;\n      font-weight: 400;\n    }\n\n    &:after {\n      display: none;\n    }\n  }\n}\n.page-features .marketing-banner {\n  margin-bottom: 20px;\n}\n","aio-shell.page-home {\n  line-height: initial;\n\n  aio-doc-viewer {\n    display: block;\n    width: 100vw;\n    min-height: 100vh;\n    background-color: #412945;\n    color: white;\n  }\n\n  .mat-drawer-content {\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n\n  header {\n    background-image: url('/assets/images/header.svg');\n    background-size: cover;\n    background-position: center center;\n    height: 80vh;\n    max-height: 800px;\n    color: #4b334d;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    margin-bottom: 60px;\n  }\n\n  header img {\n    width: auto;\n    height: 240px;\n    max-height: 30vh;\n  }\n\n  div.title {\n    font-size: 60px;\n    margin-top: 20px;\n    text-transform: uppercase;\n\n    @media only screen and (max-width: 320px) {\n      font-size: 55px;\n    }\n  }\n\n  div.subtitle {\n    font-size: 30px;\n    margin-top: 20px;\n\n    @media only screen and (max-width: 320px) {\n      font-size: 25px;\n    }\n  }\n\n  header h2 {\n    font-size: 20px;\n  }\n\n  header .cta {\n    position: absolute;\n    bottom: -22px;\n  }\n\n  button.cta,\n  a.cta {\n    font-size: 18px;\n    padding: 6px 28px;\n    color: white;\n    text-transform: uppercase;\n    position: relative;\n  }\n\n  h2,\n  p {\n    font-family: 'Open Sans', sans-serif;\n    max-width: 100%;\n  }\n\n  h1,\n  h3 {\n    font-family: 'PT Sans', sans-serif;\n    text-transform: uppercase;\n  }\n\n  .ngrx-callout {\n    width: 100%;\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 60px 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-column-gap: 0 20px;\n    justify-items: center;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n\n    &:last-of-type {\n      border-bottom: none;\n    }\n\n    h3 {\n      font-weight: bold;\n    }\n\n    @media only screen and (max-width: 600px) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n\n  .ngrx-callout-description {\n    flex-basis: 400px;\n    flex-grow: 0;\n    flex-shrink: 0;\n\n    h3 {\n      margin-bottom: 8px;\n      font-size: 20px;\n      color: rgba(255, 255, 255, 0.82);\n    }\n\n    p {\n      color: rgba(255, 255, 255, 0.82);\n    }\n\n    @media only screen and (max-width: 600px) {\n      flex-basis: initial;\n    }\n  }\n\n  @media screen and (min-width: 820px) {\n    .ngrx-callout:nth-of-type(2) {\n      .ngrx-callout-figure {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n        justify-self: start;\n      }\n      .ngrx-callout-description {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n    }\n  }\n\n  @media screen and (max-width: 820px) {\n    .ngrx-callout-description {\n      padding: 0 20px 30px;\n      max-width: 480px;\n      text-align: center;\n    }\n  }\n\n  .sponsors {\n    width: 100vw;\n    background-color: white;\n    padding: 50px 20px;\n    text-align: center;\n\n    h3 {\n      color: #412945;\n      font-size: 24px;\n      margin-bottom: 24px;\n    }\n  }\n\n  .final-ngrx-callout {\n    background-image: url('/assets/images/header.svg');\n    background-size: cover;\n    background-position: bottom center;\n    height: 180px;\n    color: #4b334d;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 0 20px;\n\n    h3 {\n      font-size: 20px;\n    }\n\n    .content {\n      max-width: 960px;\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .cta {\n      flex-shrink: 0;\n    }\n  }\n}\n","#file-not-found {\n    padding: 3rem 3rem 3rem;\n}\n\n.nf-container {\n    align-items: center;\n    padding: 32px;\n}\n\n.nf-response {\n    margin: 32px;\n    height: 100%;\n    flex-direction: column;\n\n    h1 {\n        font-size: 48px;\n        color: $purple;\n        text-transform: uppercase;\n        margin: 8px 0;\n    }\n}\n\n.nf-icon.material-icons {\n    color: $purple;\n    font-size: 100px;\n    position: static;\n}\n","@import '../mixins';\n\n// Disable sidenav animations for the initial render.\n.starting.mat-drawer-transition .mat-drawer-content {\n  transition: none;\n}\n\naio-nav-menu {\n  display: block;\n  margin: 0 auto;\n  @include typescale-small;\n  ul, a {\n    padding: 0;\n    margin: 0;\n  }\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  aio-nav-item div a {\n    padding-left: 6px;\n  }\n}\n\nmat-sidenav.mat-sidenav.sidenav {\n  position: fixed;\n  top: 64px;\n  bottom: 0;\n  left: 0;\n  padding: 0;\n  min-width: 260px;\n  background-color: $offwhite;\n  box-shadow: 6px 0 6px rgba(0,0,0,0.10);\n\n  &.collapsed {\n    top: 56px;\n  }\n}\n\nmat-sidenav-container.sidenav-container {\n  min-height: 100%;\n  height: auto !important;\n  max-width: 100%;\n  margin: 0;\n  transform: none;\n\n  &.has-floating-toc {\n    max-width: 82%;\n  }\n}\n\nmat-sidenav-container div.mat-sidenav-content {\n  height: auto;\n}\n\n.heading-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.vertical-menu-item {\n  box-sizing: border-box;\n  color: $darkgray;\n  cursor: pointer;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  max-width: 260px;\n  overflow-wrap: break-word;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  text-decoration: none;\n  text-align: left;\n  word-wrap: break-word;\n\n  &:hover {\n    background-color: $lightgray;\n    color: $purple;\n    text-shadow: 0 0 5px #ffffff;\n  }\n\n  &:focus {\n    outline: $accentblue auto 2px;\n  }\n\n  .node-title {\n    flex: 1;\n  }\n\n  //icons _within_ nav\n  .mat-icon {\n    margin: 4px;\n  }\n}\n\n.vertical-menu-item.selected {\n  color: $purple;\n  font-weight: 500;\n}\n\nbutton.vertical-menu-item {\n  border: none;\n  background-color: transparent;\n  margin-right: 0;\n}\n\n.heading {\n  color: $darkgray;\n  cursor: pointer;\n  position: relative;\n}\n\n.heading-children.expanded {\n  visibility: visible;\n  opacity: 1;\n  max-height: 4000px; // Arbitrary max-height. Can increase if needed. Must have measurement to transition height.\n  transition: visibility 500ms, opacity 500ms, max-height 500ms;\n  -webkit-transition-timing-function: ease-in-out;\n  transition-timing-function: ease-in-out;\n}\n\n.heading-children.collapsed {\n  visibility: hidden;\n  opacity: 0;\n  max-height: 1px; // Must have measurement to transition height.\n  transition: visibility 275ms, opacity 275ms, max-height 280ms;\n  -webkit-transition-timing-function: ease-out;\n  transition-timing-function: ease-out;\n}\n\n.no-animations {\n  .heading-children.expanded, .heading-children.collapsed {\n    transition: none! important;\n  }\n}\n\n.level-1 {\n  font-family: $main-font;\n  @include typescale-default;\n  font-weight: 400;\n  margin-left: 14px;\n  transition: background-color 0.2s;\n}\n\n.level-2 {\n  color: $mediumgray;\n  font-family: $main-font;\n  @include typescale-default;\n  font-weight: 400;\n  margin-left: 12px;\n  text-transform: none;\n}\n\n.level-3 {\n  color: $mediumgray;\n  font-family: $main-font;\n  @include typescale-default;\n  margin-left: 10px;\n}\n\n.level-4 {\n  color: $mediumgray;\n  font-family: $main-font;\n  @include typescale-default;\n  margin-left: 8px;\n}\n\n.level-1.expanded .mat-icon, .level-2.expanded .mat-icon {\n  @include rotate(90deg);\n}\n\n.level-1:not(.expanded) .mat-icon, .level-2:not(.expanded) .mat-icon {\n  @include rotate(0deg);\n}\n\naio-nav-menu.top-menu {\n  padding: 24px 0 0;\n\n  aio-nav-item:last-child div {\n    border-bottom: 1px solid rgba($mediumgray, 0.5);\n  }\n\n  aio-nav-item:first-child div {\n    border-top: 1px solid rgba($mediumgray, 0.5);\n  }\n}\n\n// Angular Version Selector\nmat-sidenav .doc-version {\n  padding: 8px;\n  border-top: 1px solid $lightgray;\n\n  select {\n    outline: none;\n    width: 100%;\n    background: rgba($lightgray, 0.5);\n    height: 32px;\n    border: 1px solid $lightgray;\n    color: $darkgray;\n\n    option {\n      font-family: $main-font;\n      @include typescale-default;\n    }\n  }\n}\n","nav#main-table-of-contents {\n    width: 200px;\n    height: 900px;\n    position: fixed;\n    right: 0;\n    top: 50px;\n    bottom: 100px;\n    margin-left: 32px;\n    background-color: $purple;\n}","// VARIABLES\n$hamburgerShownMargin: 0 8px 0 0;\n$hamburgerHiddenMargin: 0 16px 0 -64px;\n\n// DOCS PAGE / STANDARD: TOPNAV TOOLBAR FIXED\nmat-toolbar.mat-toolbar {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 10;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n  mat-toolbar-row {\n    padding: 0 16px 0 0;\n  }\n\n  mat-icon {\n    color: $white;\n  }\n}\n\n// HOME PAGE OVERRIDE: TOPNAV TOOLBAR\naio-shell.page-home mat-toolbar.mat-toolbar {\n  background-color: $purple;\n\n  @media (min-width: 481px) {\n    &:not(.transitioning) {\n      background-color: transparent;\n      transition: background-color 0.2s linear;\n    }\n  }\n}\n\n// MARKETING PAGES OVERRIDE: TOPNAV TOOLBAR AND HAMBURGER\naio-shell.page-home mat-toolbar.mat-toolbar,\naio-shell.page-features mat-toolbar.mat-toolbar,\naio-shell.page-events mat-toolbar.mat-toolbar,\naio-shell.page-resources mat-toolbar.mat-toolbar {\n  box-shadow: none;\n\n  // FIXED TOPNAV TOOLBAR FOR SMALL MOBILE\n  @media (min-width: 481px) {\n    position: absolute;\n  }\n}\n\n// DOCS PAGES OVERRIDE: HAMBURGER\naio-shell.folder-api mat-toolbar.mat-toolbar,\naio-shell.folder-docs mat-toolbar.mat-toolbar,\naio-shell.folder-guide mat-toolbar.mat-toolbar,\naio-shell.folder-tutorial mat-toolbar.mat-toolbar {\n  @media (min-width: 992px) {\n    .hamburger.mat-button {\n      // Hamburger shown on non-marketing pages on large screens.\n      margin: $hamburgerShownMargin;\n    }\n  }\n}\n\n// HAMBURGER BUTTON\n.hamburger.mat-button {\n  height: 100%;\n  margin: $hamburgerShownMargin;\n  padding: 0;\n\n  @media (min-width: 992px) {\n    // Hamburger hidden by default on large screens.\n    // (Will be shown per doc.)\n    margin: $hamburgerHiddenMargin;\n  }\n\n  @media (max-width: 480px) {\n    min-width: 15%;\n  }\n\n  &:not(.starting) {\n    transition-duration: 0.4s;\n    transition-property: color, margin;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n\n  &:hover {\n    color: $offwhite;\n  }\n\n  & .mat-icon {\n    color: white;\n    position: inherit;\n  }\n}\n\n// HOME NAV-LINK\n.nav-link.home {\n  cursor: pointer;\n  margin: 0 16px 0 0;\n  padding: 21px 0;\n\n  @media screen and (max-width: 480px) {\n    margin-right: 8px;\n  }\n\n  img {\n    position: relative;\n    margin-top: -21px;\n    top: 12px;\n    height: 40px;\n\n    @media (max-width: 992px) {\n      &:hover {\n        transform: scale(1.1);\n      }\n    }\n  }\n}\n\n// TOP MENU\naio-top-menu {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n\n  ul {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    list-style-position: inside;\n    padding: 0px;\n    margin: 0px;\n\n    li {\n      padding-bottom: 2px;\n      list-style-type: none;\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.7;\n      }\n\n      &:focus {\n        background-color: $accentblue;\n        outline: none;\n      }\n    }\n  }\n\n  a.nav-link {\n    margin: 0;\n    padding: 24px 16px;\n    cursor: pointer;\n\n    &:focus {\n      background: rgba($white, 0.15);\n      border-radius: 4px;\n      outline: none;\n      padding: 8px 16px;\n    }\n  }\n}\n\n// SEARCH BOX\naio-search-box.search-container {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  min-width: 150px;\n  height: 100%;\n\n  input {\n    color: $darkgray;\n    border: none;\n    border-radius: 100px;\n    background-color: $offwhite;\n    padding: 5px 16px;\n    margin-left: 8px;\n    width: 180px;\n    max-width: 240px;\n    height: 50%;\n    -webkit-appearance: none;\n\n    &:focus {\n      outline: none;\n    }\n\n    @include bp(big) {\n      transition: width 0.4s ease-in-out;\n\n      &:focus {\n        width: 500px;\n      }\n    }\n    @media (max-width: 480px) {\n      width: 150px;\n    }\n  }\n}\n\n// EXTERNAL LINK ICONS\n.app-toolbar {\n  .toolbar-external-icons-container {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    a {\n      display: flex;\n      align-items: center;\n      margin-left: 16px;\n\n      @media screen and (max-width: 480px) {\n        margin-left: 8px;\n      }\n\n      &:hover {\n        opacity: 0.8;\n      }\n\n      img {\n        height: 24px;\n      }\n    }\n  }\n}\n","@import '../mixins';\n\n.alert {\n    padding: 16px;\n    margin: 24px 0px;\n    @include typescale-default;\n    color: $darkgray;\n    width: 100%;\n    box-sizing: border-box;\n    clear: both;\n\n    h1, h2, h3, h4, h5, h6 {\n      font-weight: 500;\n    }\n\n    &.is-critical {\n        border-left: 8px solid $brightred;\n        background-color: rgba($brightred, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $brightred;\n        }\n    }\n\n    &.is-important {\n        border-left: 8px solid $orange;\n        background-color: rgba($orange, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $orange;\n        }\n    }\n\n    &.is-helpful {\n        border-left: 8px solid $purple;\n        background-color: rgba($purple, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $purple;\n        }\n    }\n\n    > * {\n        margin: 8px 16px;\n    }\n}\n","@import '../mixins';\n\n.github-links {\n  float: right;\n  .material-icons {\n    border-radius: 4px;\n    padding: 4px;\n    @include typescale-large;\n    &:hover {\n      background-color: $mist;\n    }\n  }\n}\n\n.api-header {\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n}\n\n.api-body {\n\n  .class-overview {\n    position: relative;\n\n    code-example {\n        clear: left;\n    }\n  }\n\n  .method-table, .option-table, .list-table {\n    .with-github-links {\n      align-items: center;\n      display: flex;\n      justify-content: space-between;\n\n      .github-links {\n        a {\n          color: $mediumgray;\n          .material-icons:hover {\n            background: none;\n            color: $purple;\n          }\n        }\n      }\n    }\n\n    h3 {\n      margin: 6px 0;\n      font-weight: bold;\n      clear: left;\n    }\n\n    h4 {\n      @include typescale-small;\n      font-weight: bold;\n      margin-top: 12px;\n    }\n  }\n\n  .api-heading {\n    padding: 5px 0;\n    @include typescale-default;\n    font-weight: bold;\n  }\n\n  .short-description {\n    margin: 6px 0 0 10px;\n  }\n\n  .properties-table {\n    @include typescale-small;\n\n    thead th {\n      &:nth-child(1) {\n        width: 20%;\n      }\n      &:nth-child(2) {\n        width: 20%;\n      }\n    }\n  }\n\n  .parameters-table {\n    margin-top: 0;\n    @include typescale-small;\n    td:nth-child(1) {\n      width: 20%;\n    }\n  }\n\n  details.overloads {\n    margin-left: -8px;\n\n    summary {\n      height: inherit;\n      padding: 8px 12px;\n      h4 {\n        margin: 0;\n        clear: left;\n      }\n    }\n}\n\n  .from-constructor, .read-only-property {\n    font-style: italic;\n    color: $purple;\n  }\n}\n","@import '../mixins';\n\n/* API EDIT ICON */\n#api {\n  .api-filter .material-icons {\n    right: 48px;\n  }\n}\n\n/* API LIST STYLES */\n\naio-api-list {\n    div.form-search i.material-icons {\n        width: 20px;\n        pointer-events: none;\n    }\n\n    .form-search input {\n        width: 182px;\n    }\n\n    .api-list-container {\n      display: flex;\n      flex-direction: column;\n      margin: 0 auto;\n\n      h2 {\n        margin-top: 16px;\n      }\n    }\n}\n\n.api-filter {\n  display: flex;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n      flex-direction: column;\n      margin: 16px auto;\n  }\n\n  .form-select-menu, .form-search {\n      margin: 8px;\n  }\n}\n\n/* LAYOUT */\n\n.docs-content {\n  position: relative;\n}\n\n.l-content-small {\n  padding: 16px;\n  max-width: 1100px;\n  margin: 0;\n\n  @media handheld and (max-width: $phone-breakpoint),\n  screen and (max-device-width: $phone-breakpoint),\n  screen and (max-width: $tablet-breakpoint) {\n    padding: 24px 0 0;\n  }\n}\n\n/* SEARCH BAR */\n\n.form-search {\n  position: relative;\n\n  input {\n    box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n    box-sizing: border-box;\n    border: 1px solid $white;\n    color: $purple-600;\n    @include typescale-default;\n    height: 32px;\n    line-height: 32px;\n    outline: none;\n    padding: 0 16px 0 32px;\n    transition: all .2s;\n\n    // PLACEHOLDER TEXT\n    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n      color: $purple-grey-100;\n      @include typescale-small;\n    }\n    &::-moz-placeholder { /* Firefox 19+ */\n      color: $purple-grey-100;\n      @include typescale-small;\n    }\n    &:-ms-input-placeholder { /* IE 10+ */\n      color: $purple-grey-100;\n      @include typescale-small;\n    }\n    &:-moz-placeholder { /* Firefox 18- */\n      color: $purple-grey-100;\n      @include typescale-small;\n    }\n\n    &:focus {\n      border: 1px solid $purple-400;\n      box-shadow: 0 2px 2px rgba($purple-400, 0.24), 0 0 2px rgba($purple-400, 0.12);\n    }\n  }\n\n  .material-icons {\n    color: $purple-grey-100;\n    @include typescale-large;\n    // must match input line-height;\n    line-height: 32px;\n    height: 100%;\n    left: 8px;\n    position: absolute;\n    z-index: $layer-1;\n  }\n}\n\n/* API SYMBOLS */\n\n/* SYMBOL CLASS */\n\n.symbol {\n  border-radius: 2px;\n  box-shadow: 0 1px 2px rgba($black, .24);\n  color: $white;\n  display: inline-block;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 16px;\n  text-align: center;\n  width: 16px;\n\n  // SYMBOL TYPES\n  // Symbol mapping variables in *constants*\n  @each $name, $symbol in $api-symbols {\n    &.#{$name} {\n      background: map-get($symbol, background);\n\n      &:before {\n        content: map-get($symbol, content);\n      }\n    }\n  }\n}\n\n/* API HOMEE PAGE */\n\n/* API FILTER MENU */\n\n.api-filter {\n  aio-select {\n    width: 200px;\n\n    .symbol {\n      margin-right: 8px;\n    }\n  }\n}\n\n/* API CLASS LIST */\n\n.docs-content .api-list {\n  list-style: none;\n  margin: 0 0 32px -8px;\n  padding: 0;\n  overflow: hidden;\n\n  @media screen and (max-width: 600px) {\n        margin: 0 0 0 -8px;\n    }\n\n  li {\n    font-size: 14px;\n    margin: 8px 0;\n    line-height: 14px;\n    padding: 0;\n    float: left;\n    width: 33%;\n    overflow: hidden;\n    min-width: 220px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    .symbol {\n      margin-right: 8px;\n    }\n    a {\n      color: $purple-grey-600;\n      display: inline-block;\n      line-height: 16px;\n      padding: 0 16px 0;\n      text-decoration: none;\n      transition: all .3s;\n      overflow: hidden;\n      text-overflow: ellipsis;\n\n      &:hover {\n        background: $purple-grey-50;\n        color: $purple-500;\n      }\n    }\n  }\n}\n\n.docs-content .h2-api-docs,\n.docs-content .h2-api-docs:first-of-type {\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 0;\n}\n\n.code-links {\n  a {\n    code, .api-doc-code {\n      color: #1E88E5 !important;\n    }\n  }\n}\n\n.openParens {\n  margin-top: 15px;\n}\n\n.endParens {\n  margin-bottom: 20px !important;\n}\n\np {\n\n  &.selector {\n    margin: 0;\n  }\n\n  &.location-badge {\n    margin: 0 0 16px 16px !important;\n  }\n\n  .api-doc-code {\n    border-bottom: 0;\n\n    :hover {\n      border-bottom: none;\n    }\n  }\n}\n\n.row-margin {\n  margin-bottom: 36px;\n  h2 {\n    line-height: 28px;\n  }\n}\n\n.code-margin {\n  margin-bottom: 8px;\n}\n\n.no-bg {\n  background: none;\n  padding: 0;\n}\n\n.no-bg-with-indent {\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 16px;\n  margin-top: 6px;\n  margin-bottom: 0;\n  background: none;\n}\n\n.code-background {\n  padding: 0 5px 0;\n\n  span.pln {\n    color: #1E88E5 !important;\n  }\n}\n\n.code-anchor {\n  cursor: pointer;\n  text-decoration: none;\n  font-size: inherit;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.api-doc-code {\n  @include typescale-default;\n  color: #1a2326;\n\n  // the last .pln (white space) creates additional spacing between sections of the api doc. Remove it.\n  &.no-pln {\n    .pln:last-child {\n      display: none;\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .docs-content {\n    // Overrides display flex from angular material.\n    // This was added because Safari doesn't play nice with layout=\"column\".\n    // Look of API doc in Chrome and Firefox remains the same, and is fixed for Safari.\n    .layout-xs-column {\n      display: block !important;\n    }\n  }\n\n  .api-doc-code {\n    font-size: 12px;\n  }\n\n  p.location-badge {\n    position: relative;\n    font-size: 11px;\n  }\n}\n","@import '../mixins';\n\n/* Button Styles */\n\n.button,\na.button.mat-button {\n  display: inline-block;\n  line-height: 32px;\n  padding: 0px 16px;\n  @include typescale-default;\n  font-weight: 400;\n  border-radius: 3px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  border: none;\n\n  // SIZES\n  &.button-small {\n    @include typescale-small;\n    line-height: 24px;\n    padding: 0px 8px;\n  }\n\n  &.button-large {\n    @include typescale-default;\n    line-height: 48px;\n    padding: 0px 24px;\n  }\n\n  &.button-x-large {\n    @include typescale-large;\n    line-height: 56px;\n    padding: 0px 24px;\n  }\n\n\n  // COLORS\n\n  &.button-secondary {\n    background: $mediumgray;\n    color: rgba($white, .87);\n  }\n\n  &.button-plain {\n    background: $white;\n    color: rgba($darkgray, .87);\n  }\n\n  &.button-subtle {\n    background: $mediumgray;\n    color: darken($offwhite, 10%);\n\n    &:hover {\n      color: rgba($white, 0.7);\n    }\n  }\n\n  &.button-blue {\n    background: $purple;\n    color: rgba($white, .87);\n\n    &:hover {\n      color: rgba($white, 0.7);\n    }\n  }\n\n  &.button-banner {\n    background: $darkgray;\n    color: rgba($white, .87);\n  }\n\n  &.button-shield,\n  &.button-shield.mat-button {\n    background-color: $purple;\n    background: $purple url('/assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n    color: rgba($white, .87);\n    padding-left: 54px;\n    background-size: 22px 22px;\n\n    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n      background: $purple url('/assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n      background-size: 22px 22px;\n\n    }\n  }\n}\n\n.cta-bar {\n  text-align: center;\n\n  .button {\n    margin: 0px 8px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    transition: all .2s ease-in-out;\n    &:hover {\n        transform: scale(1.1);\n        color: $offwhite;\n    }\n  }\n}\n\na.filter-button {\n  width: 140px;\n  @include typescale-default;\n  line-height: 48px;\n  padding: 0px 16px;\n  margin: 8px;\n  border: 2px solid $purple;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: $purple;\n    color: white;\n  }\n}\n\n[mat-button], [mat-raised-button], [mat-button], [mat-raised-button] {\n  text-transform: uppercase;\n}\n","@import '../mixins';\n\n.callout {\n  @extend .alert;\n  padding: 0px;\n  border-left: none !important;\n  border-radius: 4px;\n\n  header {\n    color: $white;\n    line-height: 24px;\n    font-weight: 500;\n    padding: 8px 16px;\n    margin: 0;\n    text-transform: uppercase;\n    border-radius: 4px 4px 0 0;\n  }\n\n  p {\n    padding: 16px;\n    margin: 0px;\n    @include typescale-default;\n  }\n\n  &.is-critical {\n    border-color: $brightred;\n    background: rgba($brightred, 0.05);\n\n    header {\n      background: $brightred;\n    }\n  }\n\n  &.is-important {\n    border-color: $orange;\n    background: rgba($orange, 0.05);\n\n    header {\n      background: $amber-700;\n    }\n  }\n\n  &.is-helpful {\n    border-color: $purple;\n    background: rgba($purple, 0.05);\n\n    header {\n      background: $purple;\n    }\n  }\n}\n","@import '../mixins';\n\n.card-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 24px 0;\n}\n\n.docs-card {\n  @include card(194px, 30%);\n  max-width: 340px;\n  min-width: 262px;\n  margin: 24px 8px;\n  padding-bottom: 48px;\n  position: relative;\n\n  &:hover {\n    text-decoration: none;\n\n    section {\n      color: $purple;\n    }\n\n    p {\n      color: $darkgray;\n      padding: 0 16px;\n    }\n\n    .card-footer {\n      line-height: 32px;\n      padding: 8px 16px;\n      background-color: rgba($purple, 0.1);\n      color: $purple;\n    }\n  }\n\n\n  section {\n    color: $darkgray;\n    @include typescale-large;\n    margin: 0;\n    padding: 32px 0 24px;\n    text-transform: none;\n    text-align: center;\n  }\n\n  p {\n    color: $darkgray;\n    @include typescale-small;\n    padding: 0 16px;\n    margin: 0;\n    text-align: center;\n  }\n\n  .card-footer {\n    bottom: 0;\n    border-top: 0.5px solid $lightgray;\n    box-sizing: border-box;\n    line-height: 48px;\n    left: 0;\n    position: absolute;\n    right: 0;\n    text-align: right;\n    color: $mediumgray;\n\n    a {\n      color: $mediumgray;\n      @include typescale-small;\n    }\n  }\n  .card-footer.center {\n    text-align: center;\n  }\n}\n\n.card-section {\n  @include card(auto, 90%);\n  padding: 16px 32px;\n  margin: 16px 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  // Removes on-hover effect from card mixin\n  &:hover {\n    box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 8px 0;\n  }\n\n  a, .button, button {\n    text-align: center;\n  }\n\n}\n","@import '../mixins';\n\ncode-example, code-tabs {\n    clear: both;\n    display: block;\n}\n\ncode-example {\n\n\n  &:not(.no-box) {\n    background-color: rgba($backgroundgray, 0.2);\n    border: 0.5px solid $lightgray;\n    border-radius: 5px;\n    color: $darkgray;\n    margin: 16px auto;\n  }\n\n  &.no-box {\n    pre {\n      margin: 0;\n    }\n    code {\n      background-color: transparent;\n    }\n  }\n\n  code {\n    overflow: auto;\n  }\n}\n\ncode-example, code-tabs {\n  .mat-card {\n    padding: 0;\n    border-radius: 5px;\n  }\n  code {\n    overflow: auto;\n  }\n}\n\n// TERMINAL / SHELL TEXT STYLES\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  background-color: $darkgray;\n}\n\ncode-example header {\n  background-color: $purple;\n  border-radius: 5px 5px 0 0;\n  color: $offwhite;\n  @include typescale-default;\n  padding: 8px 16px;\n}\n\ncode-example.avoid header,\ncode-example.avoidFile header {\n  border: 2px solid $anti-pattern;\n  background: $anti-pattern;\n}\n\ncode-example.avoid,\ncode-example.avoidFile,\ncode-tabs.avoid mat-tab-body,\ncode-tabs.avoidFile mat-tab-body {\n  border: 0.5px solid $anti-pattern;\n}\n\ncode-tabs div .mat-tab-body-content {\n  height: auto;\n}\n\ncode-tabs .mat-tab-body-wrapper mat-tab-body .mat-tab-body {\n  overflow-y: hidden;\n}\n\ncode-tabs mat-tab-body-content .fadeIn {\n  animation: opacity 2s ease-in;\n}\n\naio-code pre {\n    display: flex;\n    min-height: 32px;\n    margin: 16px 24px;\n    white-space: pre-wrap;\n    align-items: center;\n\n    code span {\n      line-height: 24px;\n    }\n}\n\n\n.code-missing {\n  color: $darkred;\n}\n\n\n.copy-button {\n  position: absolute;\n  top: -7px;\n  right: -19px;\n  padding: 0;\n\n  color: $purple-grey-200;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n\n.lang-sh .copy-button, .lang-bash .copy-button {\n  color: $mediumgray;\n  &:hover {\n    color: $lightgray;\n  }\n}\n\n.code-tab-group .mat-tab-label {\n  &:hover {\n    background: rgba(black, 0.04);\n  }\n  white-space: nowrap;\n}\n\n.code-tab-group .mat-tab-body-content {\n  height: auto;\n  transform: none;\n}\n\n\n[role=\"tabpanel\"] {\n    transition: none;\n}\n\n.sidenav-content code a {\n  color: inherit;\n  font-size: inherit;\n}\n\n/* PRETTY PRINTING STYLES for prettify.js. */\n\n.prettyprint {\n  position: relative;\n}\n\n/* Specify class=linenums on a pre to get line numbering */\nol.linenums {\n  margin: 0;\n  font-family: $main-font;\n  color: #B3B6B7;\n  li {\n    margin: 0;\n    font-family: $code-font;\n    font-size: 90%;\n    line-height: 24px;\n  }\n}\n\n/* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n\n/* SPAN elements with the classes below are added by prettyprint. */\n.pln { color: #000 }  /* plain text */\n\n@media screen {\n  .str { color: #800 }  /* string content */\n  .kwd { color: mat-color($gold, 900) }  /* a keyword */\n  .com { color: #060 }  /* a comment */\n  .typ { color: purple }  /* a type name */\n  .lit { color: mat-color($gold, 900) }  /* a literal value */\n  /* punctuation, lisp open bracket, lisp close bracket */\n  .pun, .opn, .clo { color: #660 }\n  .tag { color: #008 }  /* a markup tag name */\n  .atn { color: #606 }  /* a markup attribute name */\n  .atv { color: #800 }  /* a markup attribute value */\n  .dec, .var { color: #606 }  /* a declaration; a variable name */\n  .fun { color: red }  /* a function name */\n}\n\n/* Use higher contrast and text-weight for printable form. */\n@media print, projection {\n  .str { color: #060 }\n  .kwd { color: #006; font-weight: bold }\n  .com { color: #600; font-style: italic }\n  .typ { color: #404; font-weight: bold }\n  .lit { color: #044 }\n  .pun, .opn, .clo { color: #440 }\n  .tag { color: #006; font-weight: bold }\n  .atn { color: #404 }\n  .atv { color: #060 }\n}\n\n/* SHELL / TERMINAL CODE BLOCKS */\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  .pnk, .blk, .pln, .otl, .kwd, .typ, .tag, .str, .atv, .atn, .com, .lit, .pun, .dec {\n    color: $codegreen;\n  }\n}\n",".contribute-container {\n  h2 {\n    margin: 0;\n  }\n\n  .card-section {\n    justify-content: space-between;\n    max-width: 880px;\n\n    > :first-child {\n      margin-right: 2rem;\n      width: 60%;\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n","aio-contributor-list {\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      width: auto;\n    }\n  }\n\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      margin-left: 20px;\n      margin-right: 20px;\n      float: none;\n      display: block;\n      width: auto;\n    }\n  }\n}\n\n.group-buttons {\n  margin: 32px auto;\n\n  a {\n    &.selected {\n      background-color: $purple;\n      color: white;\n    }\n  }\n}\n\n.contributor-group {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\naio-contributor {\n  background: $white;\n  margin: 8px;\n  position: relative;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  transition: all .3s;\n  perspective: 800px;\n\n  &:hover {\n    transform: translate3d(0,-3px,0);\n    box-shadow: 0 8px 8px rgba(10, 16, 20, 0.24), 0 0 8px rgba(10, 16, 20, 0.12);\n\n    .contributor-image {\n      transform: scale(1.05);\n    }\n\n    .contributor-info {\n      opacity: 1;\n    }\n  }\n\n  .contributor-info {\n    background: rgba($darkgray, 0.5);\n    height: 168px;\n    width: 168px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    opacity: 0;\n    border-radius: 50%;\n\n    [mat-button] {\n      color: $white;\n      font-size: 14px;\n      font-weight: 500;\n      margin: 8px;\n      padding: 0;\n\n      &:hover {\n        color: $lightgray;\n      }\n\n      &.icon {\n        min-width: 20px;\n        width: 20px;\n\n        .fa-2x {\n          font-size: 20px;\n        }\n      }\n    }\n  }\n\n  div.contributor-card {\n    width: 250px;\n    height: 270px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    overflow: hidden;\n    border-radius: 4px;\n    transform-style:preserve-3d;\n    transition:transform ease 500ms;\n\n    h3 {\n      margin: 8px 0;\n    }\n\n    .card-front, .card-back {\n      width: 100%;\n      height: 100%;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      box-sizing: border-box;\n    }\n\n    .card-front {\n      justify-content: center;\n    }\n\n    .card-back {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding: 16px 24px;\n      transform:rotateY(180deg);\n\n      section {\n        display: none;\n      }\n\n      p {\n        margin: 8px 0;\n        font-size: 12px;\n        line-height: 14px;\n        text-align: left;\n        overflow: hidden;\n      }\n\n    }\n\n    &.flipped {\n      transform:rotateY(180deg);\n      .card-front {\n        display: none;\n      }\n    }\n  }\n\n  .contributor-image {\n    display: flex;\n    justify-content: center;\n    border-radius: 50%;\n    align-items: center;\n    height: 168px;\n    width: 168px;\n    background-size: cover;\n    background-position: center;\n    margin: 8px auto;\n    border: 2px solid $lightgray;\n    transition: all .2s ease-in-out;\n  }\n\n  section {\n    font-size: 14px;\n    font-weight: 500;\n    padding: 8px;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n  }\n\n  p {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 18px;\n    margin: 8px 16px;\n    text-overflow: ellipsis;\n    overflow: scroll;\n    font-weight: 400;\n  }\n}\n","@import '../mixins';\n\n.edit-page-cta {\n    font-weight: 400;\n    @include typescale-default;\n    color: $purple;\n    text-align: right;\n    margin-right: 32px;\n    display: block;\n    position: absolute;\n    right: 0;\n}\n","@import '../mixins';\n\n// FEATURES MARKETING PAGE SPECIFIC STYLES\n\n.feature-section {\n  margin: 0 0 32px;\n\n  .feature-header, .text-headline {\n    text-align: center;\n  }\n\n  .feature-header img {\n    margin: 16px;\n  }\n\n  .feature-title {\n    @include typescale-default;\n    font-weight: 500;\n    margin: 8px 0px;\n    clear: both;\n  }\n\n  .feature-row {\n    display: flex;\n    flex-wrap: wrap;\n\n    @media (max-width: 600px) {\n      flex-direction: column;\n    }\n\n    .feature {\n      max-width: 300px;\n      margin: 0 16px;\n\n      @media (max-width: 768px) {\n        max-width: 100%;\n      }\n    }\n  }\n}\n",".filetree {\n  background: $offwhite;\n  border: 4px solid $lightgray;\n  border-radius: 4px;\n  margin: 0 0 24px 0;\n  padding: 16px 32px;\n\n  .file {\n    display: block;\n    font-family: $main-font;\n    letter-spacing: 0.3px;\n    line-height: 32px;\n    color: $darkgray;\n  }\n\n  .children {\n    padding-left: 24px;\n    position: relative;\n    overflow: hidden;\n\n    .file {\n      position: relative;\n\n      &:before {\n        content: '';\n        left: -18px;\n        bottom: 16px;\n        width: 16px;\n        height: 9999px;\n        position: absolute;\n        border-width: 0 0 1px 1px;\n        border-style: solid;\n        border-color: $lightgray;\n        border-radius: 0 0 0 3px;\n      }\n    }\n  }\n}",".sidenav-content {\n  h1, h2, h3, h4, h5, h6 {\n\n    .header-link {\n      color: $mediumgray;\n      margin: 0 4px;\n      text-decoration: none;\n      user-select: none;\n      visibility: hidden;\n      display: inline-block;\n      vertical-align: text-top;\n      width: 1px;\n    }\n\n    &:hover .header-link {\n      visibility: visible;\n    }\n  }\n}\n","hr {\n    border: none;\n    background: #36203A;\n    height: 1px;\n}\n\n.hr-margin {\n    display: block;\n    height: 1px;\n    border: 0;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    padding: 0;\n}",".content {\n  img {\n\n    &.right {\n      clear: both;\n      float: right;\n      margin-left: 20px;\n      margin-bottom: 20px;\n    }\n\n    &.left {\n      clear: both;\n      float: left;\n      margin-right: 20px;\n      margin-bottom: 20px;\n    }\n\n    @media (max-width: 1300px) {\n      max-width: 100%;\n      height: auto;\n    }\n\n    @media (max-width: 600px) {\n      float: none !important;\n      &.right {\n        margin-left: 0;\n      }\n      &.left {\n        margin-right: 0;\n      }\n    }\n  }\n\n  figure {\n    border-radius: 4px;\n    background: $white;\n    padding: 20px;\n    display: inline-block;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, .2);\n    margin: 0 0 14px 0;\n\n    img {\n      border-radius: 4px;\n    }\n  }\n}\n",".progress-bar-container {\n  height: 2px;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 11;\n}\n","@import '../mixins';\n\ntable {\n  margin: 24px 0px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  border-radius: 2px;\n  background: $offwhite;\n\n  &.is-full-width {\n    width: 100%;\n  }\n\n  &.is-fixed-layout {\n    table-layout: fixed;\n  }\n\n  thead > {\n    vertical-align: middle;\n    border-color: inherit;\n\n    tr {\n      vertical-align: inherit;\n      border-color: inherit;\n    }\n\n    tr > th {\n      background: rgba($lightgray, 0.2);\n      border-bottom: 1px solid $lightgray;\n      color: $darkgray;\n      @include typescale-small;\n      line-height: 28px;\n      font-weight: 500;\n      padding: 8px 24px;\n      text-align: left;\n      text-transform: uppercase;\n    }\n  }\n\n  tbody > tr > {\n    th,\n    td {\n      border-bottom: 1px solid $lightgray;\n      padding: 16px;\n      text-align: left;\n      line-height: 24px;\n      vertical-align: top;\n\n      @media (max-width: 480px) {\n        &:before {\n          // content: **ADD TABLE HEADER**;\n          display: inline-block;\n        }\n      }\n\n    }\n\n    td {\n      letter-spacing: 0.30px;\n\n      tr td:first-child {\n        @media (max-width: 480px) {\n          background-color: $lightgray;\n        }\n      }\n    }\n\n    th {\n      background: rgba($lightgray, 0.2);\n      border-right: 1px solid $lightgray;\n      font-weight: 600;\n      max-width: 100px;\n    }\n  }\n\n  tbody > tr {\n    &:last-child td {\n      border: none;\n\n      @media (max-width: 480px) {\n        border-bottom: 1px solid $lightgray;\n      }\n    }\n  }\n}\n\n#cheatsheet {\n\n  table tbody td {\n    overflow: auto;\n  }\n\n  @media only screen and (max-width: 990px) {\n\n    /* Force table to not be like tables anymore */\n    table, thead, tbody, tfoot, tr, th, td {\n      display: block;\n      position: relative;\n      max-width: 100%;\n\n      code {\n        padding: 0;\n        background-color: inherit;\n      }\n    }\n\n    th {\n      border-right: none;\n    }\n\n    th, td {\n      &:not(:last-child) {\n        border-bottom: none;\n        padding-bottom: 0px;\n      }\n    }\n  }\n}\n",".presskit-container {\n  padding: 0 32px 32px 32px;\n\n  h2 {\n    color: #37474F;\n  }\n\n  .l-space-left-3 {\n    margin-left: 3 * 8px;\n  }\n\n  .cc-by-anchor {\n    text-decoration: underline;\n    color: grey !important;\n  }\n\n  .presskit-row {\n    margin: 48px 0;\n    width: 100%;\n\n    .presskit-inner {\n      display: flex;\n      align-items: center;\n\n      @media(max-width: 599px) {\n        flex-direction: column;\n      }\n\n      h3 {\n        font-weight: 500;\n        margin-top: 0;\n        margin-bottom: 0;\n        color: #455A64;\n\n        @media(max-width: 599px) {\n          padding-bottom: 16px;\n        }\n      }\n\n      .transparent-img-bg {\n        margin-top: 10px;\n        border-radius: 4px;\n        width: 128px;\n        height: 128px;\n        background-color: #34474F;\n      }\n\n      ul {\n        padding: 0;\n        list-style-type: none;\n\n        @media(max-width: 599px) {\n          padding: 0 !important;\n          margin: 0 !important;\n        }\n\n        li {\n          margin: 0 0 8px 0;\n        }\n      }\n    }\n\n    .presskit-image-container {\n\n      @media(max-width: 599px) {\n        text-align: center;\n      }\n\n      img {\n        height: 128px;\n        width: auto;\n        margin-bottom: 8px * 2;\n      }\n    }\n  }\n\n  .presskit-row:first-child {\n    margin-top: 0;\n\n    @media(max-width: 599px) {\n      margin-top: 48px;\n    }\n  }\n}\n",".showcase {\n  width: 80%;\n}\n\n.c-resource-nav {\n  width: 20%;\n}\n\n.resources-container {\n  position: relative;\n}\n\n.grid-fixed:after, .grid-fixed:before {\n  content: '.';\n  clear: both;\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  font-size: 0;\n  line-height: 0;\n  width: 0;\n  height: 0;\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed {\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 20px;\n    margin-right: 20px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 480px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 0px;\n    margin-right: 0px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 900px), screen and (max-width: 900px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed{\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before, {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed {\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\naio-resource-list {\n\n  .shadow-1 {\n    transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n  }\n\n  .showcase {\n    margin-bottom: 8px * 6;\n    border-radius: 4px;\n  }\n\n  .c-resource {\n    h4 {\n      margin: 0;\n      line-height: 24px;\n    }\n\n    p {\n      margin: 0;\n    }\n  }\n\n  .c-resource-nav {\n    position: fixed;\n    top: 142px;\n    right: 32px;\n    width: 8px * 20;\n    z-index: 1;\n    background-color: #fff;\n    border-radius: 2px;\n\n    a {\n      color: #373E41;\n      text-decoration: none;\n    }\n\n    .category {\n      padding: 10px 0;\n\n      .category-link {\n        display: block;\n        margin: 2px 0;\n        padding: 3px 14px;\n        font-size: 18px !important;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n\n    .subcategory {\n      .subcategory-link {\n        display: block;\n        margin: 2px 0;\n        padding: 4px 14px;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n  }\n\n  .h-anchor-offset {\n    display: block;\n    position: relative;\n    top: -20px;\n    visibility: hidden;\n  }\n\n  .l-flex--column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .c-resource-header {\n    margin-bottom: 16px;\n  }\n\n  .c-contribute {\n    margin-bottom: 24px;\n  }\n\n  .c-resource-header h2 {\n    margin: 0;\n  }\n\n  .subcategory-title {\n    padding: 16px 23px;\n    margin: 0;\n    background-color: $mist;\n    color: #373E41;\n  }\n\n  .h-capitalize {\n    text-transform: capitalize;\n  }\n\n  .h-hide {\n    display: none;\n  }\n\n  .resource-row-link {\n    color: #1a2326;\n    border: transparent solid 1px;\n    margin: 0;\n    padding: 16px 23px 16px 23px;\n    position: relative;\n    text-decoration: none;\n    transition: all .3s;\n  }\n\n  .resource-row-link:hover {\n    color: #1a2326;\n    text-decoration: none;\n    border-color: #2B85E7;\n    border-radius: 4px;\n    box-shadow: 0 8px 8px rgba(1, 67, 163, .24), 0 0 8px rgba(1, 67, 163, .12), 0 6px 18px rgba(43, 133, 231, .12);\n    transform: translateY(-2px);\n  }\n\n  @media(max-width: 900px) {\n    .c-resource-nav {\n      display: none;\n    }\n  }\n}\n","body::-webkit-scrollbar, mat-sidenav.sidenav::-webkit-scrollbar, .mat-sidenav-content::-webkit-scrollbar {\n  height: 6px;\n  width: 6px;\n}\n\nbody::-webkit-scrollbar-track, mat-sidenav.sidenav::-webkit-scrollbar-track, .mat-sidenav-content::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\nbody::-webkit-scrollbar-thumb, mat-sidenav.sidenav::-webkit-scrollbar-thumb, .mat-sidenav-content::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid $darkgray;\n}\n\n.search-results::-webkit-scrollbar, .toc-container::-webkit-scrollbar {\n  height: 4px;\n  width: 4px;\n}\n\n.search-results::-webkit-scrollbar-track, .toc-container::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\n.search-results::-webkit-scrollbar-thumb, .toc-container::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid slategrey;\n}\n","@import '../mixins';\n\naio-search-results {\n    z-index: 10;\n}\n\n.search-results {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    overflow: auto;\n    padding: 68px 32px 0;\n    color: $offwhite;\n    width: auto;\n    max-height: 95vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 5;\n    background-color: $darkgray;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n    box-sizing: border-box;\n\n    @media (max-width: 480px) {\n        display: block;\n        .search-area {\n            display: block;\n            margin: 16px 16px;\n        }\n    }\n}\n\naio-search-results.embedded .search-results {\n    padding: 0;\n    color: inherit;\n    width: auto;\n    max-height: 100%;\n    position: relative;\n    background-color: inherit;\n    box-shadow: none;\n    box-sizing: border-box;\n\n    .search-area a {\n        color: lighten($darkgray, 10);\n        &:hover {\n            color: $accentblue;\n        }\n    }\n}\n\n.search-area {\n    display: flex;\n    flex-direction: column;\n    margin: 16px 16px;\n    height: 100%;\n\n    h3 {\n      @include typescale-large;\n        font-weight: 400;\n        margin: 10px 0px 5px;\n        text-transform: uppercase;\n    }\n\n    ul {\n        margin: 0;\n        padding: 0;\n\n        li {\n            list-style: none;\n        }\n    }\n\n    a {\n      @include typescale-default;\n        color: $lightgray;\n        text-decoration: none;\n        font-weight: normal;\n        &:hover {\n            color: $white;\n        }\n        &:visited {\n          text-decoration: none;\n        }\n\n        span.symbol {\n          margin-right: 8px;\n        }\n    }\n\n    .priority-pages {\n        padding: 0.5rem 0;\n        a {\n            font-weight: bold;\n        }\n    }\n\n    @include bp(tiny) {\n        display: block;\n    }\n}\n",".toc-container {\n  width: 18%;\n  position: fixed;\n  top: 76px;\n  right: 0;\n  bottom: 12px;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\naio-toc.embedded {\n  @media (min-width: 801px) {\n    display: none;\n  }\n\n  .toc-inner {\n    padding: 12px 0 0 0;\n\n    .toc-heading {\n      margin: 0 0 8px;\n    }\n  }\n}\n\n.toc-inner {\n  font-size: 13px;\n  overflow-y: visible;\n  padding: 4px 0 0 10px;\n\n  .toc-heading,\n  .toc-list .h1 {\n    font-size: 115%;\n  }\n\n  .toc-heading {\n    font-weight: 500;\n    margin: 0 0 16px 8px;\n    padding: 0;\n  }\n\n  .toc-heading.secondary {\n    position: relative;\n    top: -8px;\n\n    &:hover {\n      color: $accentblue;\n    }\n  }\n\n  button.toc-heading,\n  button.toc-more-items {\n    cursor: pointer;\n    display: inline-block;\n    background: 0;\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n    text-align: start;\n\n    &.embedded:focus {\n      outline: none;\n      background: $lightgray;\n    }\n  }\n\n  button.toc-heading {\n    mat-icon.rotating-icon {\n      height: 18px;\n      width: 18px;\n      position: relative;\n      left: -4px;\n      top: 5px;\n    }\n\n    &:hover:not(.embedded) {\n      color: $accentblue;\n    }\n  }\n\n  button.toc-more-items {\n    color: $mediumgray;\n    top: 10px;\n    position: relative;\n\n    &:hover {\n      color: $accentblue;\n    }\n  }\n\n  button.toc-more-items::after {\n    content: 'expand_less';\n  }\n\n  button.toc-more-items.collapsed::after {\n    content: 'more_horiz';\n  }\n\n\n  .mat-icon.collapsed {\n    @include rotate(0deg);\n  }\n\n  .mat-icon:not(.collapsed) {\n    @include rotate(90deg);\n    // margin: 4px;\n  }\n\n  ul.toc-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0 8px 0 0;\n\n    @media (max-width: 800px) {\n      width: auto;\n    }\n\n    li {\n      box-sizing: border-box;\n      font-size: 12px;\n      line-height: 16px;\n      padding: 3px 0 3px 12px;\n      position: relative;\n      transition: all 0.3s ease-in-out;\n\n      &.h1:after {\n        content: '';\n        display: block;\n        height: 1px;\n        width: 40%;\n        margin: 7px 0 4px 0;\n        background: #DBDBDB;\n        clear: both;\n      }\n\n      &.h3 {\n        padding-left: 24px;\n      }\n\n      a {\n        font-size: inherit;\n        color: lighten($darkgray, 10);\n        display:table-cell;\n        overflow: visible;\n        font-size: 12px;\n        display: table-cell;\n      }\n\n      &:hover a {\n        color: $accentblue;\n      }\n\n      &.active {\n        a {\n          color: $purple;\n          font-weight: 500;\n\n          &:before {\n            content: '';\n            border-radius: 50%;\n            left: -3px;\n            top: 12px;\n            background: $purple;\n            position: absolute;\n            width: 6px;\n            height: 6px;\n          }\n        }\n      }\n    }\n\n    &:not(.embedded) li {\n      &:before {\n        border-left: 1px solid $lightgray;\n        bottom: 0;\n        content: '';\n        left: 0;\n        position: absolute;\n        top: 0;\n      }\n\n      &:first-child:before {\n        top: 13px;\n      }\n\n      &:last-child:before {\n        bottom: calc(100% - 14px);\n      }\n\n      &:not(.active):hover a:before {\n        content: '';\n        border-radius: 50%;\n        left: -3px;\n        top: 12px;\n        background: $lightgray;\n        position: absolute;\n        width: 6px;\n        height: 6px;\n      }\n    }\n  }\n\n}\n\naio-toc.embedded > div.collapsed li.secondary {\n  display: none;\n}\n","@import '../mixins';\n\n/* SELECT MENU */\n\n.form-select-menu {\n  position: relative;\n}\n\n.form-select-button {\n  background: $white;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  border: 1px solid $white;\n  color: $purple-grey-600;\n  @include typescale-small;\n  line-height: 32px;\n  font-weight: 400;\n  height: 32px;\n  outline: none;\n  padding: 0 16px;\n  text-align: left;\n  width: 100%;\n  cursor: pointer;\n\n  strong {\n    font-weight: 600;\n    margin-right: 8px;\n    text-transform: uppercase;\n  }\n\n  &:focus {\n    border: 1px solid $purple-400;\n    box-shadow: 0 2px 2px rgba($purple-400, 0.24), 0 0 2px rgba($purple-400, 0.12);\n  }\n}\n\n.form-select-dropdown {\n  background: $white;\n  box-shadow: 0 16px 16px rgba($black, 0.24), 0 0 16px rgba($black, 0.12);\n  border-radius: 4px;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: $layer-2;\n\n  li {\n    cursor: pointer;\n    @include typescale-default;\n    line-height: 32px;\n    margin: 0;\n    padding: 0 16px 0 40px;\n    position: relative;\n    transition: all .2s;\n\n    &:hover {\n      background: $purple-grey-50;\n      color: $purple-500;\n    }\n\n    &.selected {\n      background-color: $purple-grey-100;\n    }\n\n    .symbol {\n      left: 16px;\n      position: absolute;\n      top: 8px;\n      z-index: $layer-5;\n    }\n  }\n}\n","\naio-shell.mode-archive {\n\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#263238,#78909C);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #263238;\n\n    &:before {\n      background-color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #263238;\n  }\n}\n\naio-shell.mode-next {\n\n footer {\n    background: linear-gradient(145deg,#84438a,#84438a);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: $lightpurple;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: $lightpurple;\n\n    &:before {\n      background-color: $lightpurple;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: $lightpurple;\n  }\n}\n","@import '../mixins';\n\n$notificationHeight: 56px;\n\n// we need to override some of the toolbar styling\n.mat-toolbar mat-toolbar-row.notification-container {\n  padding: 0;\n  height: auto;\n  overflow: hidden;\n}\n\naio-notification {\n  background: $purple;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: $notificationHeight;\n  justify-content: center;\n\n  @media (max-width: 430px) {\n    justify-content: flex-start;\n    padding-left: 10px;\n  }\n\n  .close-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: $notificationHeight;\n    height: $notificationHeight;\n    background: $darkgray;\n  }\n\n  .content {\n    max-width: calc(100% - #{$notificationHeight});\n    text-transform: none;\n    padding: 0;\n\n    > * {\n      display: flex;\n    }\n\n    .icon {\n      margin-right: 10px;\n      @media (max-width: 464px) {\n        display: none;\n      }\n    }\n\n    .message {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-right: 10px;\n      color: $offwhite;\n    }\n\n    .action-button {\n      background: mat-color($dull-magenta, 700);\n      color: $offwhite;\n      border-radius: 15px;\n      text-transform: uppercase;\n      padding: 0 10px;\n      @include typescale-small;\n      @media (max-width: 780px) {\n        display: none;\n      }\n    }\n  }\n}\n\n// Here are all the hacks to make the content and sidebars the right height\n// when the notification is visible\n.aio-notification-show {\n  .sidenav-content {\n    padding-top: 80px + $notificationHeight;\n  }\n\n  mat-sidenav.mat-sidenav.sidenav {\n    top: 56px + $notificationHeight;\n\n    @media (max-width: 600px) {\n      top: 56px + $notificationHeight;\n    }\n  }\n\n  .toc-container {\n    top: 76px + $notificationHeight;\n  }\n\n  .search-results {\n    padding-top: 68px + $notificationHeight;\n  }\n\n  &.page-home, &.page-resources, &.page-events, &.page-features, &.page-presskit, &.page-contribute  {\n    section {\n      padding-top: $notificationHeight;\n    }\n  }\n}\n\n// Animate the content when the notification bar is dismissed\n// this should be kept in sync with the animation durations in\n// - aio/src/app/layout/notification/notification.component.ts\n// - aio/src/app/app.component.ts : notificationDismissed()\n.aio-notification-animating {\n  .sidenav-content {\n    transition: padding-top 250ms ease;\n  }\n  mat-sidenav.mat-sidenav.sidenav, .toc-container {\n    transition: top 250ms ease;\n  }\n}\n","@import '../mixins';\n\nlabel.raised, .api-header label {\n    border-radius: 4px;\n    padding: 4px 16px;\n    display: inline;\n    @include typescale-default;\n    color: white;\n    margin-right: 8px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    @media screen and (max-width: 600px) {\n        display: block;\n        margin: 8px 0;\n    }\n\n    &.page-label {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        background-color: $mist;\n        color: $mediumgray;\n        margin-bottom: 8px;\n        width: 140px;\n\n        .material-icons {\n            margin-right: 8px;\n        }\n    }\n\n    &.property-type-label {\n      @include typescale-small;\n        background-color: $darkgray;\n        color: $white;\n        text-transform: none;\n    }\n}\n\n.api-header label {\n\n    // The API badges should be a little smaller\n    padding: 2px 10px;\n    @include typescale-small;\n\n    @media screen and (max-width: 600px) {\n        margin: 4px 0;\n    }\n\n    &.api-status-label {\n        background-color: $mediumgray;\n\n        &.impure-pipe {\n            background-color: $brightred;\n        }\n    }\n\n    &.api-type-label {\n        background-color: $accentblue;\n\n        @each $name, $symbol in $api-symbols {\n            &.#{$name} {\n                background: map-get($symbol, background);\n            }\n        }\n\n    }\n}\n","@media print {\n\n    // General Adjustments\n    * {\n        box-shadow: none !important;\n    }\n\n    body, mat-sidenav-container {\n        background: none !important;\n    }\n\n    h1 {\n        height: 40px !important;\n        color: $darkgray !important;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        page-break-after: avoid;\n    }\n\n    ul, ol, img, code-example, table, tr, .alert, .feature {\n        page-break-inside: avoid;\n    }\n\n    table tbody tr:last-child td {\n        border-bottom: 1px solid $lightgray !important;\n    }\n\n    img {\n        max-width: 100% !important;\n    }\n\n    p {\n        widows: 4;\n    }\n\n    p > code, li > code, table code {\n        color: $purple !important;\n    }\n\n    // No Print Class\n    .no-print {\n        display: none !important;\n    }\n\n    // Custom No Print for Sidenav Menu\n    mat-sidenav.sidenav.mat-sidenav {\n        display: none !important;\n    }\n\n    // Custom No Print Element Adjustments\n    .mat-sidenav-content {\n        margin: 0 !important;\n    }\n\n    mat-sidenav-container.sidenav-container {\n        min-width: 100vw;\n    }\n\n    .sidenav-content {\n        overflow: visible;\n    }\n\n    .filetree {\n        max-width: 100%;\n    }\n\n    aio-code code {\n        border: none !important;\n    }\n\n    code-example {\n        &.code-shell, &[language=sh], &[language=bash] {\n            background: none;\n\n            .pnk, .blk, .pln, .otl, .kwd, .typ, .tag, .str, .atv, .atn, .com, .lit, .pun, .dec {\n                color: $darkgray;\n            }\n        }\n\n        header {\n            background: none;\n            border: 0.5px solid $lightgray;\n            color: $darkgray;\n        }\n    }\n\n    .content code {\n        border: 0.5px solid $lightgray;\n    }\n\n    .mat-tab-labels {\n        div.mat-tab-label {\n            &:not(.mat-tab-label-active) span {\n                font-style: italic;\n            }\n\n            &.mat-tab-label-active span {\n                font-weight: bold;\n            }\n        }\n    }\n\n    .api-header label {\n        color: $darkgray !important;\n        font-weight: bold !important;\n        margin: 2px !important;\n        padding: 0 !important;\n        display: block !important;\n    }\n\n    .feature-section img {\n        max-width: 70px !important;\n    }\n}\n"],"sourceRoot":"webpack:///"}