{"version":3,"sources":["./src/styles/_mixins.scss","./src/styles/_ngrx.scss","./src/styles/custom-themes/dark-theme.scss","./src/styles/2-modules/deploy-theme/_deploy-theme.scss","./src/styles/_constants.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@material/theme/_css.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@angular/material/legacy-button/_button-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/legacy-core/option/_option-theme.scss","./node_modules/@angular/material/legacy-core/option/_optgroup-theme.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/legacy-core/_core-theme.scss","./node_modules/@angular/material/legacy-card/_card-theme.scss","./node_modules/@angular/material/legacy-progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/legacy-progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/legacy-tooltip/_tooltip-theme.scss","./node_modules/@angular/material/legacy-input/_input-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/core/theming/_palette.scss","./node_modules/@angular/material/legacy-form-field/_form-field-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/legacy-form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/legacy-select/_select-theme.scss","./node_modules/@angular/material/legacy-checkbox/_checkbox-theme.scss","./node_modules/@angular/material/legacy-autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/legacy-dialog/_dialog-theme.scss","./node_modules/@angular/material/legacy-chips/_chips-theme.scss","./node_modules/@angular/material/legacy-slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/legacy-radio/_radio-theme.scss","./node_modules/@angular/material/legacy-slider/_slider-theme.scss","./node_modules/@angular/material/legacy-menu/_menu-theme.scss","./node_modules/@angular/material/legacy-list/_list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/legacy-paginator/_paginator-theme.scss","./node_modules/@angular/material/legacy-tabs/_tabs-theme.scss","./node_modules/@angular/material/legacy-snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/legacy-table/_table-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./src/styles/0-base/_typography-theme.scss","./src/styles/1-layouts/footer/_footer-theme.scss","./src/styles/1-layouts/layout-global/_layout-global-theme.scss","./src/styles/1-layouts/marketing-layout/_marketing-layout-theme.scss","./src/styles/1-layouts/not-found/_not-found-theme.scss","./src/styles/1-layouts/sidenav/_sidenav-theme.scss","./src/styles/1-layouts/top-menu/_top-menu-theme.scss","./src/styles/2-modules/alert/_alert-theme.scss","./src/styles/2-modules/api-list/_api-list-theme.scss","./src/styles/2-modules/buttons/_buttons-theme.scss","./src/styles/2-modules/callout/_callout-theme.scss","./src/styles/2-modules/card/_card-theme.scss","./src/styles/2-modules/code/_code-theme.scss","./src/styles/2-modules/contributor/_contributor-theme.scss","./src/styles/2-modules/details/_details-theme.scss","./src/styles/2-modules/filetree/_filetree-theme.scss","./src/styles/2-modules/heading-anchors/_heading-anchors-theme.scss","./src/styles/2-modules/hr/_hr-theme.scss","./src/styles/2-modules/images/_images-theme.scss","./src/styles/2-modules/label/_label-theme.scss","./src/styles/2-modules/notification/_notification-theme.scss","./src/styles/2-modules/presskit/_presskit-theme.scss","./src/styles/2-modules/resources/_resources-theme.scss","./src/styles/2-modules/search-results/_search-results-theme.scss","./src/styles/2-modules/select-menu/_select-menu-theme.scss","./src/styles/2-modules/table/_table-theme.scss","./src/styles/2-modules/toc/_toc-theme.scss"],"sourcesContent":["@use './constants';\n\n/************************************\n\n             Media queries\n\n To use these, put this snippet in the appropriate selector:\n\n     @include bp(tiny) {\n         background-color: purple;\n     }\n\n     Replace \"tiny\" with \"medium\" or \"big\" as necessary.\n*************************************/\n\n@mixin bp($point) {\n  $bp-xsmall: \"(min-width: 320px)\";\n  $bp-teeny: \"(min-width: 480px)\";\n  $bp-tiny: \"(min-width: 600px)\";\n  $bp-small: \"(min-width: 650px)\";\n  $bp-medium: \"(min-width: 800px)\";\n  $bp-big: \"(min-width: 1000px)\";\n\n  @if $point == big {\n    @media #{$bp-big} { @content; }\n  }\n  @else if $point == medium {\n    @media #{$bp-medium} { @content; }\n  }\n  @else if $point == small {\n    @media #{$bp-small}  { @content; }\n  }\n  @else if $point == tiny {\n    @media #{$bp-tiny}  { @content; }\n  }\n  @else if $point == teeny {\n    @media #{$bp-teeny}  { @content; }\n  }\n  @else if $point == xsmall {\n    @media #{$bp-xsmall}  { @content; }\n  }\n}\n\n@mixin rotate($degrees) {\n  -moz-transform: rotate($degrees);\n  -webkit-transform: rotate($degrees);\n  -o-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n  transition: transform 150ms;\n  transition-timing-function: ease-in-out;\n}\n\n@mixin codeblock($bgcolor) {\n    background-color: $bgcolor;\n    border-radius: 5px;\n    padding: 20px;\n    margin: 0 auto; // was 24\n    border: 0.5px solid constants.$lightgray;\n}\n\n// INFO CARD SKELETON\n@mixin card($height, $width) {\n  height: $height;\n  width: $width;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n  box-sizing: border-box;\n  transition: box-shadow .5s;\n\n  &:hover {\n    box-shadow: 0 8px 8px rgba(constants.$black, 0.24), 0 0 8px rgba(constants.$black, 0.12);\n    text-decoration: none;\n  }\n}\n\n@mixin typescale-display {\n  font-size: 26px;\n  line-height: 32px;\n}\n\n@mixin typescale-xlarge {\n  font-size: 24px;\n  line-height: 30px;\n}\n\n@mixin typescale-large {\n  font-size: 20px;\n  line-height: 28px;\n}\n\n@mixin typescale-default {\n  font-size: 16px;\n  line-height: 24px;\n}\n\n@mixin typescale-small {\n  font-size: 14px;\n  line-height: 20px;\n}\n","@use '@angular/material' as mat;\n\n@use './mixins';\n\n$dull-magenta: (\n  50: #f6e7f9,\n  100: #eac3f1,\n  200: #dc9be7,\n  300: #cd72dd,\n  400: #c354d6,\n  500: #b836cf,\n  600: #b130ca,\n  700: #a829c3,\n  800: #a022bd,\n  900: #9116b2,\n  A100: #f9e5ff,\n  A200: #edb2ff,\n  A400: #e27fff,\n  A700: #dc65ff,\n  contrast: (\n    50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #000000,\n    500: #ffffff,\n    600: #ffffff,\n    700: #ffffff,\n    800: #ffffff,\n    900: #ffffff,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000,\n  ),\n);\n$gold: (\n  50: #fff5e7,\n  100: #fee6c4,\n  200: #fed69d,\n  300: #fec576,\n  400: #fdb858,\n  500: #fdac3b,\n  600: #fda535,\n  700: #fc9b2d,\n  800: #fc9226,\n  900: #fc8219,\n  A100: #ffffff,\n  A200: #fffcfa,\n  A400: #ffdfc7,\n  A700: #ffd1ad,\n  contrast: (\n    50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #000000,\n    500: #000000,\n    600: #000000,\n    700: #000000,\n    800: #000000,\n    900: #000000,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000,\n  ),\n);\naio-shell.page-home {\n  .prettyprint-scroller {\n    overflow: auto;\n    display: block;\n    max-width: 100%;\n  }\n  pre.prettyprint {\n    border: none;\n    padding: 1rem 2rem;\n    margin: 0;\n    border-radius: 3px;\n    font-family: 'PT Mono', monospace;\n    font-weight: normal;\n    font-size: 13px;\n    line-height: 1.6em;\n    display: inline-block;\n    background-color: rgba(0, 0, 0, 0.3);\n    @media screen and (max-width: 600px) {\n      min-width: 460px;\n    }\n  }\n\n  // just for safari on ios\n  @media not all and (min-resolution: 0.001dpcm) {\n    @supports (-webkit-appearance: none) {\n      pre.prettyprint {\n        @media screen and (max-width: 600px) {\n          min-width: 680px;\n        }\n      }\n    }\n  }\n\n  pre .nocode {\n    background-color: none;\n    color: #000;\n  }\n  pre .str {\n    color: mat.get-color-from-palette($dull-magenta, 100);\n  }\n  /* string  - pink */\n  pre .kwd {\n    color: #f0e68c;\n    font-weight: bold;\n  }\n  pre .com {\n    color: #87ceeb;\n  }\n  /* comment - skyblue */\n  pre .typ {\n    color: mat.get-color-from-palette($gold, 300);\n  }\n  /* type    - lightgreen */\n  pre .lit {\n    color: mat.get-color-from-palette($dull-magenta, 300);\n  }\n  /* literal - darkred */\n  pre .pun {\n    color: #fff;\n  }\n  /* punctuation */\n  pre .pln {\n    color: #fff;\n  }\n  /* plaintext */\n  pre .tag {\n    color: #f0e68c;\n    font-weight: bold;\n  }\n  /* html/xml tag    - lightyellow */\n  pre .atn {\n    color: #bdb76b;\n    font-weight: bold;\n  }\n  /* attribute name  - khaki */\n  pre .atv {\n    color: mat.get-color-from-palette($dull-magenta, 100);\n  }\n  /* attribute value - pink */\n  pre .dec {\n    color: mat.get-color-from-palette($gold, 300);\n  }\n  /* decimal         - lightgreen */\n  /* Specify class=linenums on a pre to get line numbering */\n  ol.linenums {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: #aeaeae;\n  }\n  /* IE indents via margin-left */\n  li.L0,\n  li.L1,\n  li.L2,\n  li.L3,\n  li.L5,\n  li.L6,\n  li.L7,\n  li.L8 {\n    list-style-type: none;\n  }\n  /* Alternate shading for lines */\n  li.L1,\n  li.L3,\n  li.L5,\n  li.L7,\n  li.L9 {\n  }\n}\nngrx-circles circle {\n  fill: white;\n}\nngrx-circles[color='primary'] circle {\n  fill: mat.get-color-from-palette($dull-magenta, 500);\n}\nngrx-circles[color='accent'] circle {\n  fill: mat.get-color-from-palette($gold, 500);\n}\nngrx-circles {\n  @for $i from 1 to 10 {\n    g:nth-of-type(#{$i}) {\n      transform: translate(100px, 100px)\n        rotate(#{20deg * ($i - 1)})\n        translate(-100px, -100px)\n        translate(95px, 5px);\n    }\n  }\n}\n","/************************************\n\n             Media queries\n\n To use these, put this snippet in the appropriate selector:\n\n     @include bp(tiny) {\n         background-color: purple;\n     }\n\n     Replace \"tiny\" with \"medium\" or \"big\" as necessary.\n*************************************/\naio-shell.page-home {\n  /* string  - pink */\n  /* comment - skyblue */\n  /* type    - lightgreen */\n  /* literal - darkred */\n  /* punctuation */\n  /* plaintext */\n  /* html/xml tag    - lightyellow */\n  /* attribute name  - khaki */\n  /* attribute value - pink */\n  /* decimal         - lightgreen */\n  /* Specify class=linenums on a pre to get line numbering */\n  /* IE indents via margin-left */\n  /* Alternate shading for lines */\n}\naio-shell.page-home .prettyprint-scroller {\n  overflow: auto;\n  display: block;\n  max-width: 100%;\n}\naio-shell.page-home pre.prettyprint {\n  border: none;\n  padding: 1rem 2rem;\n  margin: 0;\n  border-radius: 3px;\n  font-family: \"PT Mono\", monospace;\n  font-weight: normal;\n  font-size: 13px;\n  line-height: 1.6em;\n  display: inline-block;\n  background-color: rgba(0, 0, 0, 0.3);\n}\n@media screen and (max-width: 600px) {\n  aio-shell.page-home pre.prettyprint {\n    min-width: 460px;\n  }\n}\n@media not all and (min-resolution: 0.001dpcm) {\n  @supports (-webkit-appearance: none) {\n    @media screen and (max-width: 600px) {\n      aio-shell.page-home pre.prettyprint {\n        min-width: 680px;\n      }\n    }\n  }\n}\naio-shell.page-home pre .nocode {\n  background-color: none;\n  color: #000;\n}\naio-shell.page-home pre .str {\n  color: #eac3f1;\n}\naio-shell.page-home pre .kwd {\n  color: #f0e68c;\n  font-weight: bold;\n}\naio-shell.page-home pre .com {\n  color: #87ceeb;\n}\naio-shell.page-home pre .typ {\n  color: #fec576;\n}\naio-shell.page-home pre .lit {\n  color: #cd72dd;\n}\naio-shell.page-home pre .pun {\n  color: #fff;\n}\naio-shell.page-home pre .pln {\n  color: #fff;\n}\naio-shell.page-home pre .tag {\n  color: #f0e68c;\n  font-weight: bold;\n}\naio-shell.page-home pre .atn {\n  color: #bdb76b;\n  font-weight: bold;\n}\naio-shell.page-home pre .atv {\n  color: #eac3f1;\n}\naio-shell.page-home pre .dec {\n  color: #fec576;\n}\naio-shell.page-home ol.linenums {\n  margin-top: 0;\n  margin-bottom: 0;\n  color: #aeaeae;\n}\naio-shell.page-home li.L0,\naio-shell.page-home li.L1,\naio-shell.page-home li.L2,\naio-shell.page-home li.L3,\naio-shell.page-home li.L5,\naio-shell.page-home li.L6,\naio-shell.page-home li.L7,\naio-shell.page-home li.L8 {\n  list-style-type: none;\n}\nngrx-circles circle {\n  fill: white;\n}\n\nngrx-circles[color=primary] circle {\n  fill: #b836cf;\n}\n\nngrx-circles[color=accent] circle {\n  fill: #fdac3b;\n}\n\nngrx-circles g:nth-of-type(1) {\n  transform: translate(100px, 100px) rotate(0deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(2) {\n  transform: translate(100px, 100px) rotate(20deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(3) {\n  transform: translate(100px, 100px) rotate(40deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(4) {\n  transform: translate(100px, 100px) rotate(60deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(5) {\n  transform: translate(100px, 100px) rotate(80deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(6) {\n  transform: translate(100px, 100px) rotate(100deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(7) {\n  transform: translate(100px, 100px) rotate(120deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(8) {\n  transform: translate(100px, 100px) rotate(140deg) translate(-100px, -100px) translate(95px, 5px);\n}\nngrx-circles g:nth-of-type(9) {\n  transform: translate(100px, 100px) rotate(160deg) translate(-100px, -100px) translate(95px, 5px);\n}\n\naio-shell.mode-archive .mat-toolbar.mat-primary, aio-shell.mode-archive footer {\n  background: linear-gradient(145deg, #263238, #78909C);\n}\naio-shell.mode-archive .vertical-menu-item.selected, aio-shell.mode-archive .vertical-menu-item:hover {\n  color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li.active a {\n  color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li.active a:before {\n  background-color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li:hover a {\n  color: #263238;\n}\n\naio-shell.mode-next footer {\n  background: linear-gradient(145deg, #84438a, #84438a);\n}\naio-shell.mode-next .vertical-menu-item.selected, aio-shell.mode-next .vertical-menu-item:hover {\n  color: #84438a;\n}\naio-shell.mode-next .toc-inner ul.toc-list li.active a {\n  color: #84438a;\n}\naio-shell.mode-next .toc-inner ul.toc-list li.active a:before {\n  background-color: #84438a;\n}\naio-shell.mode-next .toc-inner ul.toc-list li:hover a {\n  color: #84438a;\n}\n\n.mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option:hover:not(.mdc-list-item--disabled), .mat-mdc-option:focus.mdc-list-item, .mat-mdc-option.mat-mdc-option-active.mdc-list-item, .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, #a829c3);\n}\n\n.mat-accent .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-secondary, #fc9b2d);\n}\n\n.mat-warn .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-error, #f44336);\n}\n\n.mat-mdc-optgroup-label {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #a829c3;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #a829c3;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #fc9b2d;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #fc9b2d;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #fc9b2d;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #fc9b2d;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #686868;\n}\n\n.mat-app-background {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0, .mat-mdc-elevation-specific.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1, .mat-mdc-elevation-specific.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2, .mat-mdc-elevation-specific.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3, .mat-mdc-elevation-specific.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4, .mat-mdc-elevation-specific.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5, .mat-mdc-elevation-specific.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6, .mat-mdc-elevation-specific.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7, .mat-mdc-elevation-specific.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8, .mat-mdc-elevation-specific.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9, .mat-mdc-elevation-specific.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10, .mat-mdc-elevation-specific.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11, .mat-mdc-elevation-specific.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12, .mat-mdc-elevation-specific.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13, .mat-mdc-elevation-specific.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14, .mat-mdc-elevation-specific.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15, .mat-mdc-elevation-specific.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16, .mat-mdc-elevation-specific.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17, .mat-mdc-elevation-specific.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18, .mat-mdc-elevation-specific.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19, .mat-mdc-elevation-specific.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20, .mat-mdc-elevation-specific.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21, .mat-mdc-elevation-specific.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22, .mat-mdc-elevation-specific.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23, .mat-mdc-elevation-specific.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24, .mat-mdc-elevation-specific.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.mat-mdc-option {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-body1-font-size, 16px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.03125em);\n}\n\n.mat-mdc-button.mat-unthemed {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: #a829c3;\n}\n.mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: #fc9b2d;\n}\n.mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: #f44336;\n}\n.mat-mdc-button[disabled][disabled] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: #a829c3;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: #fc9b2d;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: #f44336;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: #a829c3;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: #fc9b2d;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: #f44336;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: #a829c3;\n}\n.mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: #fc9b2d;\n}\n.mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: #f44336;\n}\n.mat-mdc-outlined-button[disabled][disabled] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button, .mat-mdc-outlined-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary, .mat-mdc-outlined-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #a829c3;\n  --mat-mdc-button-ripple-color: rgba(168, 41, 195, 0.1);\n}\n.mat-mdc-button.mat-accent, .mat-mdc-outlined-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #fc9b2d;\n  --mat-mdc-button-ripple-color: rgba(252, 155, 45, 0.1);\n}\n.mat-mdc-button.mat-warn, .mat-mdc-outlined-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #f44336;\n  --mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\n.mat-mdc-raised-button, .mat-mdc-unelevated-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary, .mat-mdc-unelevated-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent, .mat-mdc-unelevated-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn, .mat-mdc-unelevated-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base,\n.mat-mdc-raised-button.mat-mdc-button-base,\n.mat-mdc-unelevated-button.mat-mdc-button-base,\n.mat-mdc-outlined-button.mat-mdc-button-base {\n  height: 36px;\n}\n\n.mdc-button {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 36px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0892857143em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n  color: #a829c3;\n}\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n  color: #fc9b2d;\n}\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.mat-button.mat-primary.mat-button-disabled, .mat-button.mat-accent.mat-button-disabled, .mat-button.mat-warn.mat-button-disabled, .mat-button.mat-button-disabled.mat-button-disabled, .mat-icon-button.mat-primary.mat-button-disabled, .mat-icon-button.mat-accent.mat-button-disabled, .mat-icon-button.mat-warn.mat-button-disabled, .mat-icon-button.mat-button-disabled.mat-button-disabled, .mat-stroked-button.mat-primary.mat-button-disabled, .mat-stroked-button.mat-accent.mat-button-disabled, .mat-stroked-button.mat-warn.mat-button-disabled, .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #a829c3;\n}\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #fc9b2d;\n}\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.mat-button.mat-button-disabled .mat-button-focus-overlay, .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n\n.mat-button-focus-overlay {\n  background: white;\n}\n\n.mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: white;\n  background-color: #424242;\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  color: white;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  color: black;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  color: white;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  background-color: #a829c3;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  background-color: #fc9b2d;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-stroked-button:not([class*=mat-elevation-z]), .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-fab:not([class*=mat-elevation-z]), .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-content .mat-mdc-button.mat-unthemed {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: #a829c3;\n}\n.mat-datepicker-content .mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: #fc9b2d;\n}\n.mat-datepicker-content .mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: #f44336;\n}\n.mat-datepicker-content .mat-mdc-button[disabled][disabled] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n.mat-datepicker-content .mat-mdc-unelevated-button.mat-unthemed {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: #a829c3;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: #fc9b2d;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-datepicker-content .mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: #f44336;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-unelevated-button[disabled][disabled] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-unthemed {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: #a829c3;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: #fc9b2d;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: #f44336;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-raised-button[disabled][disabled] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n.mat-datepicker-content .mat-mdc-outlined-button {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-datepicker-content .mat-mdc-outlined-button.mat-unthemed {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-datepicker-content .mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: #a829c3;\n}\n.mat-datepicker-content .mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: #fc9b2d;\n}\n.mat-datepicker-content .mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: #f44336;\n}\n.mat-datepicker-content .mat-mdc-outlined-button[disabled][disabled] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-datepicker-content .mat-mdc-button, .mat-datepicker-content .mat-mdc-outlined-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-datepicker-content .mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.mat-datepicker-content .mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-button:active .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-button.mat-primary, .mat-datepicker-content .mat-mdc-outlined-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #a829c3;\n  --mat-mdc-button-ripple-color: rgba(168, 41, 195, 0.1);\n}\n.mat-datepicker-content .mat-mdc-button.mat-accent, .mat-datepicker-content .mat-mdc-outlined-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #fc9b2d;\n  --mat-mdc-button-ripple-color: rgba(252, 155, 45, 0.1);\n}\n.mat-datepicker-content .mat-mdc-button.mat-warn, .mat-datepicker-content .mat-mdc-outlined-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #f44336;\n  --mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n.mat-datepicker-content .mat-mdc-raised-button, .mat-datepicker-content .mat-mdc-unelevated-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-datepicker-content .mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.mat-datepicker-content .mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-primary, .mat-datepicker-content .mat-mdc-unelevated-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-accent, .mat-datepicker-content .mat-mdc-unelevated-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-datepicker-content .mat-mdc-raised-button.mat-warn, .mat-datepicker-content .mat-mdc-unelevated-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n  --mdc-icon-button-icon-color: inherit;\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.mat-datepicker-content .mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-datepicker-content .mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #6200ee;\n  --mat-mdc-button-ripple-color: rgba(98, 0, 238, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #018786;\n  --mat-mdc-button-ripple-color: rgba(1, 135, 134, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #b00020;\n  --mat-mdc-button-ripple-color: rgba(176, 0, 32, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-primary {\n  --mdc-icon-button-icon-color: #a829c3;\n  --mat-mdc-button-persistent-ripple-color: #a829c3;\n  --mat-mdc-button-ripple-color: rgba(168, 41, 195, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-accent {\n  --mdc-icon-button-icon-color: #fc9b2d;\n  --mat-mdc-button-persistent-ripple-color: #fc9b2d;\n  --mat-mdc-button-ripple-color: rgba(252, 155, 45, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-warn {\n  --mdc-icon-button-icon-color: #f44336;\n  --mat-mdc-button-persistent-ripple-color: #f44336;\n  --mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n.mat-datepicker-content .mat-mdc-icon-button[disabled][disabled] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-datepicker-content .mat-mdc-button.mat-mdc-button-base,\n.mat-datepicker-content .mat-mdc-raised-button.mat-mdc-button-base,\n.mat-datepicker-content .mat-mdc-unelevated-button.mat-mdc-button-base,\n.mat-datepicker-content .mat-mdc-outlined-button.mat-mdc-button-base {\n  height: 36px;\n}\n.mat-datepicker-content .mat-mdc-icon-button.mat-mdc-button-base {\n  --mdc-icon-button-state-layer-size: 48px;\n  width: var(--mdc-icon-button-state-layer-size);\n  height: var(--mdc-icon-button-state-layer-size);\n  padding: 12px;\n}\n\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-datepicker-content .mdc-button {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 36px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0892857143em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-option {\n  color: white;\n}\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.mat-option.mat-active {\n  background: rgba(255, 255, 255, 0.04);\n  color: white;\n}\n.mat-option.mat-option-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #a829c3;\n}\n\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #fc9b2d;\n}\n\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n\n.mat-option {\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n}\n\n.mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-optgroup-label {\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  font-family: Roboto, sans-serif;\n  letter-spacing: 0.03125em;\n}\n\n.mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-pseudo-checkbox-full {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #a829c3;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #a829c3;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #fc9b2d;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #fc9b2d;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #fc9b2d;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #fc9b2d;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #686868;\n}\n\n.mat-app-background {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.mat-card {\n  background: #424242;\n  color: white;\n}\n.mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-card-subtitle {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-card {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n\n.mat-progress-bar-background {\n  fill: #4e2e55;\n}\n\n.mat-progress-bar-buffer {\n  background-color: #4e2e55;\n}\n\n.mat-progress-bar-fill::after {\n  background-color: #a829c3;\n}\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #634b2f;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #634b2f;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #fc9b2d;\n}\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #613532;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #613532;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #a829c3;\n}\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #fc9b2d;\n}\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n\n.mat-tooltip {\n  font-family: Roboto, sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-input-element {\n  caret-color: #a829c3;\n}\n.mat-input-element::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-input-element::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-input-element::-webkit-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-input-element:-ms-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-input-element:not(.mat-native-select-inline) option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-input-element:not(.mat-native-select-inline) option:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-form-field.mat-accent .mat-input-element {\n  caret-color: #fc9b2d;\n}\n\n.mat-form-field.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-form-field-disabled .mat-form-field-prefix,\n.mat-form-field-disabled .mat-form-field-suffix {\n  color: rgba(255, 255, 255, 0.5);\n}\n\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n\n.mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #a829c3;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #fc9b2d;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n\n.mat-focused .mat-form-field-required-marker {\n  color: #fc9b2d;\n}\n\n.mat-form-field-ripple {\n  background-color: white;\n}\n\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #a829c3;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #fc9b2d;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #a829c3;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #fc9b2d;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n\n.mat-error {\n  color: #f44336;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: white;\n}\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #a829c3;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #fc9b2d;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.15);\n}\n\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n\n.mat-form-field-label {\n  top: 1.34375em;\n}\n\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-select-value {\n  color: white;\n}\n\n.mat-select-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-select-disabled .mat-select-value {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-select-arrow {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-select-panel {\n  background: #424242;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #a829c3;\n}\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #fc9b2d;\n}\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-select {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-select-trigger {\n  height: 1.125em;\n}\n\n.mat-checkbox-frame {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-checkbox-checkmark {\n  fill: #303030;\n}\n\n.mat-checkbox-checkmark-path {\n  stroke: #303030 !important;\n}\n\n.mat-checkbox-mixedmark {\n  background-color: #303030;\n}\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #a829c3;\n}\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #fc9b2d;\n}\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #686868;\n}\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #686868;\n}\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-checkbox .mat-ripple-element {\n  background-color: white;\n}\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #a829c3;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #fc9b2d;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n\n.mat-checkbox {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n\n.mat-autocomplete-panel {\n  background: #424242;\n  color: white;\n}\n.mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: #424242;\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: white;\n}\n\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-dialog-title {\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 32px;\n  font-family: Roboto, sans-serif;\n  letter-spacing: 0.0125em;\n}\n\n.mat-chip.mat-standard-chip {\n  background-color: #616161;\n  color: white;\n}\n.mat-chip.mat-standard-chip .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip::after {\n  background: white;\n}\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #a829c3;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #fc9b2d;\n  color: black;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: black;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.mat-chip {\n  font-size: 16px;\n  font-weight: 400;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #fc9b2d;\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(252, 155, 45, 0.54);\n}\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #fc9b2d;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #a829c3;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(168, 41, 195, 0.54);\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #a829c3;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: white;\n}\n\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #bdbdbd;\n}\n\n.mat-slide-toggle-bar {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-slide-toggle-content {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #a829c3;\n}\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #a829c3;\n}\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #fc9b2d;\n}\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #fc9b2d;\n}\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-radio-button .mat-ripple-element {\n  background-color: white;\n}\n\n.mat-radio-button {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-slider.mat-primary .mat-slider-track-fill,\n.mat-slider.mat-primary .mat-slider-thumb,\n.mat-slider.mat-primary .mat-slider-thumb-label {\n  background-color: #a829c3;\n}\n.mat-slider.mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-slider.mat-primary .mat-slider-focus-ring {\n  background-color: rgba(168, 41, 195, 0.2);\n}\n.mat-slider.mat-accent .mat-slider-track-fill,\n.mat-slider.mat-accent .mat-slider-thumb,\n.mat-slider.mat-accent .mat-slider-thumb-label {\n  background-color: #fc9b2d;\n}\n.mat-slider.mat-accent .mat-slider-thumb-label-text {\n  color: black;\n}\n.mat-slider.mat-accent .mat-slider-focus-ring {\n  background-color: rgba(252, 155, 45, 0.2);\n}\n.mat-slider.mat-warn .mat-slider-track-fill,\n.mat-slider.mat-warn .mat-slider-thumb,\n.mat-slider.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.mat-slider.mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-slider.mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n\n.mat-slider:hover .mat-slider-track-background,\n.mat-slider.cdk-focused .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-slider.mat-slider-disabled .mat-slider-track-background,\n.mat-slider.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.mat-slider.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-slider.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-slider.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: white;\n}\n.mat-slider.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n  background-color: transparent;\n}\n.mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-slider-thumb-label-text {\n  font-family: Roboto, sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n}\n\n.mat-menu-panel {\n  background: #424242;\n}\n.mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-menu-item {\n  background: transparent;\n  color: white;\n}\n.mat-menu-item[disabled],\n.mat-menu-item[disabled] .mat-menu-submenu-icon,\n.mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-submenu-icon {\n  color: white;\n}\n\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n.mat-menu-item {\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-list-base .mat-list-item {\n  color: white;\n}\n.mat-list-base .mat-list-option {\n  color: white;\n}\n.mat-list-base .mat-subheader {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-list-base .mat-list-item-disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-list-item {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-list-option {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n}\n\n.mat-paginator {\n  background: #424242;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid white;\n  border-right: 2px solid white;\n}\n\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid white;\n}\n\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-paginator-container {\n  min-height: 56px;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, sans-serif;\n  font-size: 12px;\n}\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.12);\n}\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(255, 255, 255, 0.12);\n  border-bottom: none;\n}\n\n.mat-tab-label, .mat-tab-link {\n  color: white;\n}\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-tab-group[class*=mat-background-] > .mat-tab-header,\n.mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused {\n  background-color: rgba(177, 48, 202, 0.3);\n}\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #a829c3;\n}\n.mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused {\n  background-color: rgba(253, 165, 53, 0.3);\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #fc9b2d;\n}\n.mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: black;\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused {\n  background-color: rgba(177, 48, 202, 0.3);\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header, .mat-tab-group.mat-background-primary > .mat-tab-link-container, .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #a829c3;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: white;\n  opacity: 0.4;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: white;\n  opacity: 0.12;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused {\n  background-color: rgba(253, 165, 53, 0.3);\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header, .mat-tab-group.mat-background-accent > .mat-tab-link-container, .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #fc9b2d;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: black;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.4);\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: black;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: black;\n  opacity: 0.4;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: black;\n  opacity: 0.12;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused, .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused,\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused,\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused,\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused.mat-tab-disabled,\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused.mat-tab-disabled {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header, .mat-tab-group.mat-background-warn > .mat-tab-link-container, .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: white;\n  opacity: 0.4;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: white;\n  opacity: 0.12;\n}\n\n.mat-tab-group {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-snack-bar-container {\n  color: rgba(0, 0, 0, 0.87);\n  background: #fafafa;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-simple-snackbar-action {\n  color: inherit;\n}\n\n.mat-simple-snackbar {\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n}\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n}\n\n.mat-table {\n  background: #424242;\n}\n\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit;\n}\n\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-header-cell {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-cell, .mat-footer-cell {\n  color: white;\n}\n\n.mat-table {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 400;\n}\n\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n\n.mat-badge {\n  position: relative;\n}\n\n.mat-badge.mat-badge {\n  overflow: visible;\n}\n\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content {\n  color: white;\n  background: #a829c3;\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent .mat-badge-content {\n  background: #fc9b2d;\n  color: black;\n}\n\n.mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n\n.mat-badge-disabled .mat-badge-content {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container {\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20px;\n  font-family: Roboto, sans-serif;\n  letter-spacing: 0.0178571429em;\n}\n\n.mat-button-toggle-standalone:not([class*=mat-elevation-z]),\n.mat-button-toggle-group:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),\n.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: white;\n}\n\n.mat-button-toggle-disabled {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n\n.mat-button-toggle {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow {\n  fill: white;\n}\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: white;\n}\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header,\n.mat-calendar-body-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range::before {\n  background: rgba(168, 41, 195, 0.2);\n}\n\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(168, 41, 195, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(168, 41, 195, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected {\n  background-color: #a829c3;\n  color: white;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(168, 41, 195, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(168, 41, 195, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(168, 41, 195, 0.3);\n  }\n}\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(252, 155, 45, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(252, 155, 45, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(252, 155, 45, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #fc9b2d;\n  color: black;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(252, 155, 45, 0.4);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px black;\n}\n.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(252, 155, 45, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(252, 155, 45, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(244, 67, 54, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active {\n  color: #a829c3;\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: #fc9b2d;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n\n.mat-date-range-input-inner[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base {\n  --mdc-icon-button-state-layer-size: 40px;\n  width: var(--mdc-icon-button-state-layer-size);\n  height: var(--mdc-icon-button-state-layer-size);\n  padding: 8px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target {\n  display: none;\n}\n\n.mat-calendar {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: white;\n}\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n\n.mat-expansion-panel-header {\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content {\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20px;\n  font-family: Roboto, sans-serif;\n  letter-spacing: 0.0178571429em;\n}\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n\n.mat-icon.mat-primary {\n  color: #a829c3;\n}\n.mat-icon.mat-accent {\n  color: #fc9b2d;\n}\n.mat-icon.mat-warn {\n  color: #f44336;\n}\n\n.mat-drawer-container {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push {\n  background-color: #424242;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover:not([aria-disabled]), .mat-step-header:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #a829c3;\n  color: white;\n}\n.mat-step-header.mat-accent .mat-step-icon {\n  color: black;\n}\n.mat-step-header.mat-accent .mat-step-icon-selected,\n.mat-step-header.mat-accent .mat-step-icon-state-done,\n.mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #fc9b2d;\n  color: black;\n}\n.mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\n.mat-step-header.mat-warn .mat-step-icon-selected,\n.mat-step-header.mat-warn .mat-step-icon-state-done,\n.mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: white;\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n\n.mat-step-label-error {\n  font-size: 16px;\n}\n\n.mat-step-label-selected {\n  font-size: 16px;\n  font-weight: 400;\n}\n\n.mat-sort-header-arrow {\n  color: #c6c6c6;\n}\n\n.mat-toolbar {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary {\n  background: #a829c3;\n  color: white;\n}\n.mat-toolbar.mat-accent {\n  background: #fc9b2d;\n  color: black;\n}\n.mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 32px;\n  font-family: Roboto, sans-serif;\n  letter-spacing: 0.0125em;\n  margin: 0;\n}\n\n.mat-tree {\n  background: #424242;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: white;\n}\n\n.mat-tree-node {\n  min-height: 48px;\n}\n\n.mat-tree {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n\nbody {\n  color: #FAFAFA;\n}\n\nh6 {\n  color: #FAFAFA;\n}\n\np,\nol,\nul,\nol,\nli,\ninput,\na {\n  color: #FFFFFF;\n}\n\n.app-toolbar a {\n  color: #FFFFFF;\n}\n\ncode {\n  color: #FFFFFF;\n}\n\n.sidenav-content a {\n  color: #dc65ff;\n}\n.sidenav-content a:hover {\n  color: #a829c3;\n}\n\nfooter {\n  background-color: #9116b2;\n}\nfooter aio-footer > * {\n  color: #FFFFFF;\n}\nfooter aio-footer a {\n  color: #FFFFFF;\n}\nfooter aio-footer h3 {\n  color: #FFFFFF;\n}\n\nbody {\n  background: #303030;\n}\n\n:root {\n  color-scheme: dark;\n}\n\n.background-sky {\n  color: white;\n}\n\nsection#intro {\n  color: #FFFFFF;\n}\nsection#intro .hero-logo {\n  background-image: url(/assets/images/logos/angular/angular.svg);\n}\n\n.announcement-bar {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.announcement-bar .button {\n  color: #FFFFFF;\n  background-color: #412846;\n}\n.announcement-bar .button:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.home-row .card {\n  background-color: #444444;\n}\n.home-row .card .card-text-container p {\n  color: #FAFAFA;\n}\n.home-row .card:hover h2 {\n  color: #412846;\n}\n\n.button.hero-cta {\n  background-color: #444444;\n}\n\n.cta-bar .hero-cta {\n  color: #412846;\n}\n\n.text-headline {\n  color: #444444;\n}\n\n.marketing-banner {\n  background-color: #5f3b66;\n}\n.marketing-banner .banner-headline {\n  color: #FFFFFF;\n}\n\naio-shell.page-home article {\n  color: #444444;\n  background-color: #412846;\n}\naio-shell.page-home, aio-shell.page-resources, aio-shell.page-events, aio-shell.page-contribute {\n  color: #444444;\n}\n\n.nf-response h1 {\n  color: #84438a;\n}\n\n.nf-icon.material-icons {\n  color: #412846;\n}\n\nmat-sidenav-container.sidenav-container {\n  background-color: #303030;\n}\nmat-sidenav-container.sidenav-container mat-sidenav.sidenav {\n  background-color: #333333;\n  border-right: 1px solid #444444;\n}\nmat-sidenav-container.sidenav-container mat-sidenav.sidenav .doc-version {\n  border-top: 1px solid #444444;\n}\nmat-sidenav-container.sidenav-container mat-sidenav.sidenav .doc-version select {\n  color: #444444;\n  background: rgba(219, 219, 219, 0.5);\n}\n\naio-nav-menu aio-nav-item .vertical-menu-item {\n  color: #FAFAFA;\n}\naio-nav-menu aio-nav-item .vertical-menu-item.level-2 {\n  color: #FAFAFA;\n}\naio-nav-menu aio-nav-item .vertical-menu-item.level-3 {\n  color: #FAFAFA;\n}\naio-nav-menu aio-nav-item .vertical-menu-item.level-4 {\n  color: #FAFAFA;\n}\naio-nav-menu aio-nav-item .vertical-menu-item:hover {\n  background-color: #37474F;\n  color: #dc65ff;\n  text-shadow: 0 0 5px #0A1014;\n}\naio-nav-menu aio-nav-item .vertical-menu-item:hover.selected {\n  color: #dc65ff;\n}\naio-nav-menu aio-nav-item .vertical-menu-item.selected {\n  color: #dc65ff;\n}\n\n.heading {\n  color: #FAFAFA;\n}\n\nmat-toolbar.mat-toolbar {\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n}\nmat-toolbar.mat-toolbar mat-icon {\n  color: #FFFFFF;\n}\n\naio-shell.page-home mat-toolbar.mat-toolbar {\n  background: #a022bd;\n}\n\n.hamburger.mat-mdc-button:hover {\n  color: #FAFAFA;\n}\n.hamburger.mat-mdc-button > .mat-icon {\n  color: #FFFFFF;\n}\n\n.nav-link[href=enterprise-support] {\n  background: rgba(128, 0, 128, 0.1803921569);\n}\n\naio-top-menu ul li:focus {\n  background-color: #1E88E5;\n}\naio-top-menu a.nav-link:focus {\n  background: rgba(255, 255, 255, 0.15);\n}\n\naio-search-box.search-container input {\n  color: #444444;\n  background-color: #FAFAFA;\n}\n\n@media screen and (min-width: 351px) {\n  aio-theme-toggle {\n    border-right: 1px solid #FFFFFF;\n  }\n}\n\n.alert {\n  color: #FAFAFA;\n}\n.alert.is-critical {\n  border-left: 8px solid #DD0031;\n  background-color: #444444;\n}\n.alert.is-critical h1,\n.alert.is-critical h2,\n.alert.is-critical h3,\n.alert.is-critical h4,\n.alert.is-critical h5,\n.alert.is-critical h6 {\n  color: #DD0031;\n}\n.alert.is-important {\n  border-left: 8px solid #FF9800;\n  background-color: #333333;\n}\n.alert.is-important h1,\n.alert.is-important h2,\n.alert.is-important h3,\n.alert.is-important h4,\n.alert.is-important h5,\n.alert.is-important h6 {\n  color: #FF9800;\n}\n.alert.is-helpful {\n  border-left: 8px solid #412846;\n  background-color: #444444;\n}\n.alert.is-helpful h1,\n.alert.is-helpful h2,\n.alert.is-helpful h3,\n.alert.is-helpful h4,\n.alert.is-helpful h5,\n.alert.is-helpful h6 {\n  color: #412846;\n}\n\naio-api-list .api-filter .form-search input {\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  border: 1px solid #444444;\n  background-color: #444444;\n  color: #dc65ff;\n}\naio-api-list .api-filter .form-search input::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n  color: #CFD8DC;\n}\naio-api-list .api-filter .form-search input::-moz-placeholder { /* Firefox 19+ */\n  color: #CFD8DC;\n}\naio-api-list .api-filter .form-search input:-ms-input-placeholder { /* IE 10+ */\n  color: #CFD8DC;\n}\naio-api-list .api-filter .form-search input:-moz-placeholder { /* Firefox 18- */\n  color: #CFD8DC;\n}\naio-api-list .api-filter .form-search input:focus {\n  border: 1px solid #42A5F5;\n  box-shadow: 0 2px 2px rgba(66, 165, 245, 0.24), 0 0 2px rgba(66, 165, 245, 0.12);\n}\naio-api-list .api-filter .form-search .material-icons {\n  color: #CFD8DC;\n}\naio-api-list .api-list-container a {\n  color: #dc65ff;\n}\naio-api-list .api-list-container .api-list li a {\n  color: #FFFFFF;\n}\naio-api-list .api-list-container .api-list li a:hover {\n  background: transparent;\n  color: #2196F3;\n}\n\n.symbol {\n  box-shadow: 0 1px 2px rgba(10, 16, 20, 0.24);\n  color: #FFFFFF;\n}\n.symbol.all {\n  background: #FFFFFF;\n}\n.symbol.all:before {\n  content: \" \";\n}\n.symbol.decorator {\n  background: #1565C0;\n}\n.symbol.decorator:before {\n  content: \"@\";\n}\n.symbol.directive {\n  background: #D81B60;\n}\n.symbol.directive:before {\n  content: \"D\";\n}\n.symbol.pipe {\n  background: #546E7A;\n}\n.symbol.pipe:before {\n  content: \"P\";\n}\n.symbol.class {\n  background: #2196F3;\n}\n.symbol.class:before {\n  content: \"C\";\n}\n.symbol.interface {\n  background: #009688;\n}\n.symbol.interface:before {\n  content: \"I\";\n}\n.symbol.function {\n  background: #4CAF50;\n}\n.symbol.function:before {\n  content: \"F\";\n}\n.symbol.enum {\n  background: #FFA000;\n}\n.symbol.enum:before {\n  content: \"E\";\n}\n.symbol.const {\n  background: #6e6e6e;\n}\n.symbol.const:before {\n  content: \"K\";\n}\n.symbol.let {\n  background: #6e6e6e;\n}\n.symbol.let:before {\n  content: \"K\";\n}\n.symbol.var {\n  background: #6e6e6e;\n}\n.symbol.var:before {\n  content: \"K\";\n}\n.symbol.ngmodule {\n  background: #940;\n}\n.symbol.ngmodule:before {\n  content: \"M\";\n}\n.symbol.type-alias {\n  background: #7CB342;\n}\n.symbol.type-alias:before {\n  content: \"T\";\n}\n.symbol.package {\n  background: #8E24AA;\n}\n.symbol.package:before {\n  content: \"Pk\";\n}\n\n.docs-content .api-list a {\n  color: #546E7A;\n}\n.docs-content .api-list a:hover {\n  background: #ECEFF1;\n  color: #2196F3;\n}\n\n.code-links a code, .code-links a .api-doc-code {\n  color: #1E88E5 !important;\n}\n\n.code-background span.pln {\n  color: #1E88E5 !important;\n}\n\n.api-doc-code {\n  color: #1a2326;\n}\n\na.button.mat-button.button-secondary,\n.button.button-secondary {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.87);\n}\na.button.mat-button.button-plain,\n.button.button-plain {\n  background: #FFFFFF;\n  color: rgba(68, 68, 68, 0.87);\n}\na.button.mat-button.button-subtle,\n.button.button-subtle {\n  background: #6e6e6e;\n  color: #e1e1e1;\n}\na.button.mat-button.button-subtle:hover,\n.button.button-subtle:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\na.button.mat-button.button-blue,\n.button.button-blue {\n  background: #412846;\n  color: rgba(255, 255, 255, 0.87);\n}\na.button.mat-button.button-blue:hover,\n.button.button-blue:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\na.button.mat-button.button-shield, a.button.mat-button.button-shield.mat-button,\n.button.button-shield,\n.button.button-shield.mat-button {\n  background-color: #412846;\n  background: #412846 url(\"/projects/ngrx.io/src/assets/images/logos/angular/angular_whiteTransparent.svg\") 24px 13px no-repeat;\n}\n@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n  a.button.mat-button.button-shield, a.button.mat-button.button-shield.mat-button,\n  .button.button-shield,\n  .button.button-shield.mat-button {\n    background: #412846 url(\"/projects/ngrx.io/src/assets/images/logos/angular/angular_whiteTransparent.svg\") 24px 13px no-repeat;\n    background-size: 22px 22px;\n  }\n}\na.button.mat-button.button-banner,\n.button.button-banner {\n  background: #444444;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.cta-bar .button:hover {\n  color: #FAFAFA;\n}\n\n.group-buttons a.button.mat-button.filter-button {\n  border: 2px solid #412846;\n  background-color: rgba(65, 40, 70, 0.2);\n}\n.group-buttons a.button.mat-button.filter-button.selected, .group-buttons a.button.mat-button.filter-button:hover {\n  background-color: #412846;\n  color: #FFFFFF;\n}\n\n.callout header {\n  color: #FFFFFF;\n}\n.callout.is-critical {\n  border-color: #DD0031;\n  background: rgba(221, 0, 49, 0.1);\n}\n.callout.is-critical header {\n  background: #DD0031;\n}\n.callout.is-important {\n  border-color: #FF9800;\n  background: rgba(255, 152, 0, 0.1);\n}\n.callout.is-important header {\n  background: #FFA000;\n}\n.callout.is-helpful {\n  border-color: #412846;\n  background: rgba(65, 40, 70, 0.1);\n}\n.callout.is-helpful header {\n  background: #412846;\n}\n\n.card-container .docs-card {\n  background-color: #444444;\n}\n.card-container .docs-card section {\n  color: #FAFAFA;\n}\n.card-container .docs-card p {\n  color: #FAFAFA;\n}\n.card-container .docs-card .card-footer {\n  color: #DBDBDB;\n  border-top: 0.5px solid #444444;\n}\n.card-container .docs-card .card-footer a {\n  color: #6e6e6e;\n}\n.card-container .docs-card:hover section {\n  color: #412846;\n}\n.card-container .docs-card:hover p {\n  color: #444444;\n}\n.card-container .docs-card:hover .card-footer {\n  background-color: rgba(65, 40, 70, 0.1);\n  color: #412846;\n}\n\n.card-section:hover {\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n}\n\ncode-example:not(.no-box) {\n  background-color: #444444;\n  border: 0.5px solid #444444;\n  color: #444444;\n}\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  background-color: #444444;\n}\ncode-example header {\n  background-color: #412846;\n  color: #FAFAFA;\n}\n\ncode-tabs .code-tab-group .mat-tab-label:hover {\n  background: rgba(0, 0, 0, 0.04);\n}\n\ncode-example.avoid header,\ncode-example.avoidFile header {\n  border: 2px solid #DD0031;\n  background: #DD0031;\n}\n\ncode-example.avoid,\ncode-example.avoidFile,\ncode-tabs.avoid mat-tab-body,\ncode-tabs.avoidFile mat-tab-body {\n  border: 0.5px solid #DD0031;\n}\n\naio-code pre.prettyprint code ol.linenums {\n  color: #f4f5f5;\n}\naio-code pre.prettyprint code .code-missing {\n  color: #C3002F;\n}\naio-code pre.prettyprint .copy-button {\n  color: #B0BEC5;\n}\naio-code pre.prettyprint .copy-button:hover {\n  color: #90A4AE;\n}\naio-code pre.prettyprint.lang-sh .copy-button, aio-code pre.prettyprint.lang-bash .copy-button {\n  color: #B0BEC5;\n}\naio-code pre.prettyprint.lang-sh .copy-button:hover, aio-code pre.prettyprint.lang-bash .copy-button:hover {\n  color: #90A4AE;\n}\n\n.sidenav-content code a {\n  color: #FFFFFF;\n}\n.sidenav-content code a:hover {\n  color: #FAFAFA;\n}\n.sidenav-content :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre) > code {\n  background-color: rgba(219, 219, 219, 0.1);\n  color: #FAFAFA;\n}\n\n.code-tab-group .mat-tab-label:hover {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n/* PRETTY PRINTING STYLES for prettify.js. */\n/* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n/* SPAN elements with the classes below are added by prettyprint. */\n.pln {\n  color: #FFFFFF;\n} /* plain text */\n@media screen {\n  .str {\n    color: #c3e88d;\n  } /* string content */\n  .kwd {\n    color: #17d3ff;\n  } /* a keyword */\n  .com {\n    color: rgba(255, 255, 255, 0.7);\n  } /* a comment */\n  .typ {\n    color: #ffb0b0;\n  } /* a type name */\n  .lit {\n    color: #d1b4ff;\n  } /* a literal value */\n  /* punctuation, lisp open bracket, lisp close bracket */\n  .pun,\n  .opn,\n  .clo {\n    color: #ffd779;\n  }\n  .tag {\n    color: #98caff;\n  } /* a markup tag name */\n  .atn {\n    color: #d1b4ff;\n  } /* a markup attribute name */\n  .atv {\n    color: #ffd779;\n  } /* a markup attribute value */\n  .dec,\n  .var {\n    color: #d1b4ff;\n  } /* a declaration; a variable name */\n  .fun {\n    color: #ffb0b0;\n  } /* a function name */\n}\n/* Use higher contrast and text-weight for printable form. */\n@media print, projection {\n  .str {\n    color: #060;\n  }\n  .kwd {\n    color: #006;\n    font-weight: bold;\n  }\n  .com {\n    color: #600;\n    font-style: italic;\n  }\n  .typ {\n    color: #404;\n    font-weight: bold;\n  }\n  .lit {\n    color: #044;\n  }\n  .pun,\n  .opn,\n  .clo {\n    color: #440;\n  }\n  .tag {\n    color: #006;\n    font-weight: bold;\n  }\n  .atn {\n    color: #404;\n  }\n  .atv {\n    color: #060;\n  }\n}\n/* SHELL / TERMINAL CODE BLOCKS */\ncode-example.code-shell .pnk,\ncode-example.code-shell .blk,\ncode-example.code-shell .pln,\ncode-example.code-shell .otl,\ncode-example.code-shell .kwd,\ncode-example.code-shell .typ,\ncode-example.code-shell .tag,\ncode-example.code-shell .str,\ncode-example.code-shell .atv,\ncode-example.code-shell .atn,\ncode-example.code-shell .com,\ncode-example.code-shell .lit,\ncode-example.code-shell .pun,\ncode-example.code-shell .dec, code-example[language=sh] .pnk,\ncode-example[language=sh] .blk,\ncode-example[language=sh] .pln,\ncode-example[language=sh] .otl,\ncode-example[language=sh] .kwd,\ncode-example[language=sh] .typ,\ncode-example[language=sh] .tag,\ncode-example[language=sh] .str,\ncode-example[language=sh] .atv,\ncode-example[language=sh] .atn,\ncode-example[language=sh] .com,\ncode-example[language=sh] .lit,\ncode-example[language=sh] .pun,\ncode-example[language=sh] .dec, code-example[language=bash] .pnk,\ncode-example[language=bash] .blk,\ncode-example[language=bash] .pln,\ncode-example[language=bash] .otl,\ncode-example[language=bash] .kwd,\ncode-example[language=bash] .typ,\ncode-example[language=bash] .tag,\ncode-example[language=bash] .str,\ncode-example[language=bash] .atv,\ncode-example[language=bash] .atn,\ncode-example[language=bash] .com,\ncode-example[language=bash] .lit,\ncode-example[language=bash] .pun,\ncode-example[language=bash] .dec {\n  color: #17ff0b;\n}\n\n.group-buttons a.selected {\n  background-color: #412846;\n  color: #FFFFFF;\n}\n\naio-contributor, ngrx-contributor {\n  background: #FFFFFF;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n}\naio-contributor .contributor-info, ngrx-contributor .contributor-info {\n  background: rgba(68, 68, 68, 0.5);\n}\naio-contributor .contributor-info .info-item, ngrx-contributor .contributor-info .info-item {\n  color: #FFFFFF;\n}\naio-contributor .contributor-info .info-item:hover, ngrx-contributor .contributor-info .info-item:hover {\n  box-shadow: 0 8px 8px rgba(10, 16, 20, 0.24), 0 0 8px rgba(10, 16, 20, 0.12);\n  color: #DBDBDB;\n}\naio-contributor .contributor-info [mat-button], ngrx-contributor .contributor-info [mat-button] {\n  color: #FFFFFF;\n}\naio-contributor .contributor-info [mat-button]:hover, ngrx-contributor .contributor-info [mat-button]:hover {\n  color: #DBDBDB;\n}\naio-contributor .contributor-image, ngrx-contributor .contributor-image {\n  border: 2px solid #DBDBDB;\n}\n\ndetails {\n  box-shadow: 0 1px 4px 0 rgba(10, 16, 20, 0.37);\n}\n\nsummary {\n  color: #FFFFFF;\n}\n\n.filetree {\n  background: #FAFAFA;\n  border: 4px solid #DBDBDB;\n}\n.filetree .file {\n  color: #444444;\n}\n.filetree .children .file:before {\n  border-color: #DBDBDB;\n}\n\n.sidenav-content h1 .header-link,\n.sidenav-content h2 .header-link,\n.sidenav-content h3 .header-link,\n.sidenav-content h4 .header-link,\n.sidenav-content h5 .header-link,\n.sidenav-content h6 .header-link {\n  color: #6e6e6e;\n}\n\nhr {\n  background: #84438a;\n}\n\n.content figure {\n  background: #FFFFFF;\n  box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.2);\n}\n\nlabel.raised, .api-header label {\n  color: #FFFFFF;\n}\nlabel.raised.api-status-label, .api-header label.api-status-label {\n  background-color: #6e6e6e;\n}\nlabel.raised.api-status-label.deprecated, label.raised.api-status-label.security, label.raised.api-status-label.impure-pipe, .api-header label.api-status-label.deprecated, .api-header label.api-status-label.security, .api-header label.api-status-label.impure-pipe {\n  background-color: #DD0031;\n}\nlabel.raised.api-type-label, .api-header label.api-type-label {\n  background-color: #1E88E5;\n}\nlabel.raised.api-type-label.all, .api-header label.api-type-label.all {\n  background: #FFFFFF;\n}\nlabel.raised.api-type-label.decorator, .api-header label.api-type-label.decorator {\n  background: #1565C0;\n}\nlabel.raised.api-type-label.directive, .api-header label.api-type-label.directive {\n  background: #D81B60;\n}\nlabel.raised.api-type-label.pipe, .api-header label.api-type-label.pipe {\n  background: #546E7A;\n}\nlabel.raised.api-type-label.class, .api-header label.api-type-label.class {\n  background: #2196F3;\n}\nlabel.raised.api-type-label.interface, .api-header label.api-type-label.interface {\n  background: #009688;\n}\nlabel.raised.api-type-label.function, .api-header label.api-type-label.function {\n  background: #4CAF50;\n}\nlabel.raised.api-type-label.enum, .api-header label.api-type-label.enum {\n  background: #FFA000;\n}\nlabel.raised.api-type-label.const, .api-header label.api-type-label.const {\n  background: #6e6e6e;\n}\nlabel.raised.api-type-label.let, .api-header label.api-type-label.let {\n  background: #6e6e6e;\n}\nlabel.raised.api-type-label.var, .api-header label.api-type-label.var {\n  background: #6e6e6e;\n}\nlabel.raised.api-type-label.ngmodule, .api-header label.api-type-label.ngmodule {\n  background: #940;\n}\nlabel.raised.api-type-label.type-alias, .api-header label.api-type-label.type-alias {\n  background: #7CB342;\n}\nlabel.raised.api-type-label.package, .api-header label.api-type-label.package {\n  background: #8E24AA;\n}\nlabel.raised.page-label, .api-header label.page-label {\n  background-color: #ECEFF1;\n  color: #6e6e6e;\n}\nlabel.raised.property-type-label, .api-header label.property-type-label {\n  background-color: #444444;\n  color: #FFFFFF;\n}\n\naio-notification {\n  background: #412846;\n}\naio-notification .close-button {\n  background: #444444;\n}\naio-notification .content .message {\n  color: #FAFAFA;\n}\naio-notification .content .action-button {\n  background: #a829c3;\n  color: #FAFAFA;\n}\n\n.presskit-container h2 {\n  color: #37474F;\n}\n.presskit-container .cc-by-anchor {\n  color: grey !important;\n}\n.presskit-container .presskit-row .presskit-inner h3 {\n  color: #455A64;\n}\n.presskit-container .presskit-row .presskit-inner .transparent-img-bg {\n  background-color: #34474F;\n}\n\naio-resource-list .shadow-1 {\n  box-shadow: 0 1px 4px 0 rgba(10, 16, 20, 0.37);\n}\naio-resource-list c-resource-nav {\n  background-color: #fff;\n}\naio-resource-list c-resource-nav a {\n  color: #373E41;\n}\naio-resource-list c-resource-nav .category .category-link:hover {\n  background: #edf0f2;\n  color: #2B85E7;\n}\naio-resource-list c-resource-nav .subcategory .subcategory-link:hover {\n  background: #edf0f2;\n  color: #2B85E7;\n}\naio-resource-list .subcategory-title {\n  background-color: #444444;\n  color: #FFFFFF;\n}\naio-resource-list .resource-row-link {\n  color: #FAFAFA;\n}\naio-resource-list .resource-row-link:hover {\n  color: #FAFAFA;\n  border-color: rgba(30, 136, 229, 0.5);\n  box-shadow: 0 8px 8px rgba(1, 131, 163, 0.24), 0 0 8px rgba(1, 67, 163, 0.12), 0 6px 18px rgba(43, 133, 231, 0.12);\n}\n\naio-search-results.embedded .search-results .search-area .search-section-header {\n  color: #444444;\n}\naio-search-results.embedded .search-results .search-area a {\n  color: #FAFAFA;\n}\naio-search-results.embedded .search-results .search-area a:hover {\n  color: #1E88E5;\n}\n\n.search-results {\n  background-color: #444444;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n}\n.search-results .search-area .search-section-header {\n  color: #FFFFFF;\n}\n.search-results .no-results {\n  color: white;\n}\n.search-results a {\n  color: white;\n}\n\n.search-area a {\n  color: #DBDBDB;\n}\n.search-area a:hover {\n  color: #FFFFFF;\n}\n\n.form-select-button {\n  background: #444444;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  border: 1px solid #444444;\n  color: #B0BEC5;\n}\n.form-select-button:focus {\n  border: 1px solid #42A5F5;\n  box-shadow: 0 2px 2px rgba(66, 165, 245, 0.24), 0 0 2px rgba(66, 165, 245, 0.12);\n}\n.form-select-button[disabled] {\n  color: lightgrey;\n}\n\n.form-select-dropdown {\n  background: #303030;\n  box-shadow: 0 16px 16px rgba(10, 16, 20, 0.24), 0 0 16px rgba(10, 16, 20, 0.12);\n}\n.form-select-dropdown li:hover {\n  background-color: #444;\n}\n.form-select-dropdown li.selected {\n  background-color: #444444;\n}\n\n.heading {\n  color: #444444;\n}\n\ntable {\n  box-shadow: 0 2px 2px rgba(110, 110, 110, 0.24), 0 0 2px rgba(255, 255, 255, 0.12);\n  background-color: #303030;\n}\ntable thead > tr > th {\n  background: #444444;\n  border-bottom: 1px solid #444444;\n  color: #FFFFFF;\n}\ntable tbody > tr > th,\ntable tbody > tr > td {\n  border-bottom: 1px solid #444444;\n}\n@media (max-width: 480px) {\n  table tbody > tr > td tr td:first-child {\n    background-color: #DBDBDB;\n  }\n}\ntable tbody > tr > th {\n  background: #333333;\n}\ntable tbody > tr > th:not(:last-child) {\n  border-right: 1px solid #444444;\n}\n@media (max-width: 480px) {\n  table tbody > tr:last-child td {\n    border-bottom: 1px solid #333333;\n  }\n}\n\n.toc-inner .toc-heading.secondary:hover {\n  color: #1E88E5;\n}\n.toc-inner button.toc-heading.embedded:focus, .toc-inner button.toc-more-items.embedded:focus {\n  background: #444444;\n  color: #FFFFFF;\n}\n.toc-inner button.toc-heading:hover:not(.embedded) {\n  color: #1E88E5;\n}\n.toc-inner button.toc-more-items {\n  color: #DBDBDB;\n}\n.toc-inner button.toc-more-items:hover {\n  color: #1E88E5;\n}\n.toc-inner ul.toc-list li.h1:after {\n  background: #6e6e6e;\n}\n.toc-inner ul.toc-list li a {\n  color: #FFFFFF;\n}\n.toc-inner ul.toc-list li:hover * {\n  color: #7fc9ff;\n}\n.toc-inner ul.toc-list li.active * {\n  color: #dc65ff;\n}\n.toc-inner ul.toc-list li.active a:before {\n  background: #dc65ff;\n}\n.toc-inner ul.toc-list:not(.embedded) li:before {\n  border-left-color: #444444;\n}\n.toc-inner ul.toc-list:not(.embedded) li:not(.active):hover a:before {\n  background: #DBDBDB;\n}\n.toc-inner.embedded .toc-inner .toc-heading.secondary {\n  color: white;\n}","@use \"../../constants\";\naio-shell.mode-archive {\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#263238,#78909C);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #263238;\n\n    &:before {\n      background-color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #263238;\n  }\n}\n\naio-shell.mode-next {\n\n footer {\n    background: linear-gradient(145deg,#84438a,#84438a);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: constants.$lightpurple;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: constants.$lightpurple;\n\n    &:before {\n      background-color: constants.$lightpurple;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: constants.$lightpurple;\n  }\n}\n","// TYPOGRAPHY\n$main-font: \"Roboto\",\"Helvetica Neue Light\",\"Helvetica Neue\",Helvetica,Arial,\"Lucida Grande\",sans-serif;\n$code-font: \"Droid Sans Mono\", monospace;\n$bold-font-weight: 600;\n\n// Z-LAYER\n$layer-1: 1;\n$layer-2: 2;\n$layer-3: 3;\n$layer-4: 4;\n$layer-5: 5;\n\n// COLOR PALETTE\n$lightblue: #7fc9ff;\n$blue: #1976D2;\n$purple: #412846;\n$lightpurple: #84438a;\n$accentblue: #1E88E5;\n$brightred: #DD0031;\n$darkred: #C3002F;\n$white: #FFFFFF;\n$offwhite: #FAFAFA;\n$backgroundgray: #F1F1F1;\n$lightgray: #DBDBDB;\n$mist: #ECEFF1;\n$mediumgray: #6e6e6e;\n$darkgray: #444444;\n$deepgray: #333333;\n$black: #0A1014;\n$orange: #FF9800;\n$darkorange: #940;\n$anti-pattern: $brightred;\n\n// API & CODE COLORS\n$amber-700: #FFA000;\n$purple-400: #42A5F5;\n$purple-500: #2196F3;\n$purple-600: #1E88E5;\n$purple-800: #1565C0;\n$purple-900: #0D47A1;\n$purple-grey-50: #ECEFF1;\n$purple-grey-100: #CFD8DC;\n$purple-grey-200: #B0BEC5;\n$purple-grey-300: #90A4AE;\n$purple-grey-400: #78909C;\n$purple-grey-500: #607D8B;\n$purple-grey-600: #546E7A;\n$purple-grey-700: #455A64;\n$purple-grey-800: #37474F;\n$purple-grey-900: #263238;\n$codegreen: #17ff0b;\n$green-500: #4CAF50;\n$green-800: #2E7D32;\n$light-green-600: #7CB342;\n$pink-600: #D81B60;\n$purple-600: #8E24AA;\n$purple-700: #a829c3;\n$dull-magenta-700: #dc65ff;\n$teal-500: #009688;\n$lightgrey: #F5F6F7;\n\n// GRADIENTS\n$bluegradient: linear-gradient(145deg,#0D47A1,#42A5F5);\n$redgradient: linear-gradient(145deg,$darkred,$brightred);\n\n// API LABEL COLOR AND SYMBOLS MAP\n$api-symbols: (\n  all: (\n    content: ' ',\n    background: $white\n  ),\n  decorator: (\n    content: '@',\n    background: $purple-800\n  ),\n  directive: (\n    content: 'D',\n    background: $pink-600\n  ),\n  pipe: (\n    content: 'P',\n    background: $purple-grey-600\n  ),\n  class: (\n    content: 'C',\n    background: $purple-500\n  ),\n  interface: (\n    content: 'I',\n    background: $teal-500\n  ),\n  function: (\n    content: 'F',\n    background: $green-500\n  ),\n  enum: (\n    content: 'E',\n    background: $amber-700\n  ),\n  const: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  let: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  var: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  ngmodule: (\n    content: 'M',\n    background: $darkorange\n  ),\n  type-alias: (\n    content: 'T',\n    background: $light-green-600\n  ),\n  package: (\n    content: 'Pk',\n    background: $purple-600\n  )\n);\n\n// OTHER\n$small-breakpoint-width: 840px;\n$phone-breakpoint: 480px;\n$tablet-breakpoint: 800px;\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/list/evolution-mixins' as mdc-list-mixins;\n@use '@material/typography' as mdc-typography;\n@use '@material/ripple' as mdc-ripple;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-option {\n      // Since this will usually be rendered in an overlay,\n      // we have explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n\n      // Increase specificity to override styles from list theme.\n      &:hover:not(.mdc-list-item--disabled),\n      &:focus.mdc-list-item,\n      &.mat-mdc-option-active.mdc-list-item,\n\n      // In multiple mode there is a checkbox to show that the option is selected.\n      &.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n        $color: mdc-theme-color.$on-surface;\n        background: rgba($color, mdc-ripple.states-opacity($color, hover));\n      }\n    }\n\n    .mat-primary {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(primary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-accent {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(secondary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-warn {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(error,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    // MDC uses the `subtitle1` level for list items, but\n    // the spec shows `body1` as the correct level.\n    .mat-mdc-option {\n      @include mdc-typography.typography(body1,\n        $query: mdc-helpers.$mdc-typography-styles-query,\n        // Exclude these properties, because they cause some build\n        // issues internally and they aren't used for anything.\n        $exclude-props: (text-decoration, text-transform)\n      );\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use '@material/theme/theme' as mdc-theme;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-optgroup-label {\n      // Since this will usually be rendered in an overlay,\n      // we have to explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        @include rtl.ignore-next-line();\n        transform: translate(-50%, -50%);\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../datepicker/datepicker-legacy-compat';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n/// @deprecated Use `mat.button-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: $config,\n      typography: null,\n      density: null,\n  ));\n}\n\n/// @deprecated Use `mat.button-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: $config,\n      density: null,\n  ));\n}\n\n@mixin _density($config-or-theme) {\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: null,\n      density: theming.get-density-config($config-or-theme)\n  ));\n}\n\n/// @deprecated Use `mat.button-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'variables';\n@use '@material/elevation/elevation-theme' as mdc-elevation;\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: null) {\n  @if meta.type-of($color) == color and $opacity == null {\n    @include mdc-elevation.elevation($zValue, $color);\n  }\n  @else {\n    // Copied from @material/elevation/_elevation-theme.scss#_box-shadow\n    // TODO(mmalerba): Add support for graceful handling of CSS var color to MDC.\n    $shadow-color:\n      if(meta.type-of($color) == color and $opacity != null, rgba($color, $opacity), $color);\n    $umbra-z-value: map.get(mdc-elevation.$umbra-map, $zValue);\n    $penumbra-z-value: map.get(mdc-elevation.$penumbra-map, $zValue);\n    $ambient-z-value: map.get(mdc-elevation.$ambient-map, $zValue);\n    $box-shadow: (\n      #{'#{$umbra-z-value} #{$shadow-color}'},\n      #{'#{$penumbra-z-value} #{$shadow-color}'},\n      #{$ambient-z-value} $shadow-color\n    );\n    @include mdc-elevation.shadow($box-shadow);\n  }\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation($zValue, $color: $color) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/mixins' as mdc-icon-button;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n\n@use './button-theme-private';\n@use '../core/theming/theming';\n\n$_icon-size: 24px;\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@function _variable-safe-contrast-tone($value, $is-dark) {\n  @if ($value == 'dark' or $value == 'light' or type-of($value) == 'color') {\n    @return mdc-theme-color.contrast-tone($value);\n  }\n\n  @return if($is-dark, 'light', 'dark');\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $color-tokens: tokens-mdc-icon-button.get-color-tokens($config);\n  $background-palette: map.get($config, background);\n  $surface: theming.get-color-from-palette($background-palette, card);\n  $is-dark: map.get($config, is-dark);\n  $on-surface: if(_variable-safe-contrast-tone($surface, $is-dark) == 'dark', #000, #fff);\n\n  .mat-mdc-icon-button {\n    @include button-theme-private.ripple-theme-styles($config, false);\n    @include mdc-icon-button-theme.theme($color-tokens);\n    @include _ripple-color($on-surface);\n\n    &.mat-primary {\n      $color: theming.get-color-from-palette(map.get($config, primary));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n      @include mdc-icon-button-theme.theme((\n        icon-color: $disabled-color,\n        disabled-icon-color: $disabled-color,\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $_icon-size, 2);\n\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.option-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n/// @deprecated Use `mat.option-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.option-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.optgroup-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n/// @deprecated Use `mat.optgroup-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.optgroup-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  // we deliberately do not use the font shorthand here because it overrides\n  // certain font properties that can't be configured in the current typography\n  // config, e.g. the font-variant-caps or font-feature-settings property\n  font-size: font-size($config, $level);\n  font-weight: font-weight($config, $level);\n  line-height: line-height($config, $level);\n  font-family: font-family($config, $level);\n\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/ripple/ripple-theme';\n@use '../core/selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use '../core/style/elevation';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.core-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n/// @deprecated Use `mat.core-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-core') {\n    // Legacy-specific themes.\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n\n    // Non-legacy themes that are forwarded.\n    @include ripple-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.card-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n/// @deprecated Use `mat.card-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.card-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n/// @deprecated Use `mat.progress-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.progress-spinner-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-spinner-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-spinner-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n/// @deprecated Use `mat.tooltip-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n/// @deprecated Use `mat.tooltip-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tooltip-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n/// @deprecated Use `mat.input-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-disabled {\n    .mat-form-field-prefix,\n    .mat-form-field-suffix {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.input-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.input-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n\n@mixin clip-path($value) {\n  -webkit-clip-path: $value;\n  clip-path: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$red-palette: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$pink-palette: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$purple-palette: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$deep-purple-palette: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$indigo-palette: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$blue-palette: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-palette: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$cyan-palette: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$teal-palette: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$green-palette: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$light-green-palette: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$lime-palette: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$yellow-palette: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$amber-palette: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$orange-palette: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$deep-orange-palette: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$brown-palette: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$grey-palette: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$gray-palette: $grey-palette;\n\n$blue-grey-palette: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$blue-gray-palette: $blue-grey-palette;\n\n\n// Background palette for light themes.\n$light-theme-background-palette: (\n  status-bar: map.get($grey-palette, 300),\n  app-bar:    map.get($grey-palette, 100),\n  background: map.get($grey-palette, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map.get($grey-palette, 300),\n  selected-disabled-button: map.get($grey-palette, 400),\n  disabled-button-toggle: map.get($grey-palette, 200),\n  unselected-chip: map.get($grey-palette, 300),\n  disabled-list-option: map.get($grey-palette, 200),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Background palette for dark themes.\n$dark-theme-background-palette: (\n  status-bar: black,\n  app-bar:    map.get($grey-palette, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map.get($grey-palette, 800),\n  dialog:     map.get($grey-palette, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map.get($grey-palette, 800),\n  focused-button: $light-focused,\n  selected-button: map.get($grey-palette, 900),\n  selected-disabled-button: map.get($grey-palette, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map.get($grey-palette, 700),\n  disabled-list-option: rgba(white, 0.12),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Foreground palette for light themes.\n$light-theme-foreground-palette: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$dark-theme-foreground-palette: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n/// @deprecated Use `mat.form-field-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n/// @deprecated Use `mat.form-field-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n/// @deprecated Use `mat.form-field-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-legacy-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-legacy-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label] + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-legacy-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-legacy-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-standard-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-standard-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-typography($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-private-form-field-standard-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-standard-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-fill-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-fill-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-fill-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-fill-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-outline-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-outline-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-outline-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-outline-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.select-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.select-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.select-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.checkbox-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, disabled);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.checkbox-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.checkbox-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.autocomplete-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.autocomplete-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.autocomplete-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.dialog-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.dialog-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.dialog-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n/// @deprecated Use `mat.chips-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n/// @deprecated Use `mat.chips-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.chips-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slide-toggle-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n/// @deprecated Use `mat.radio-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n/// @deprecated Use `mat.radio-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.radio-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slider-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.menu-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n/// @deprecated Use `mat.menu-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.menu-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n/// @deprecated Use `mat.list-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n/// @deprecated Use `mat.list-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.list-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n/// @deprecated Use `mat.paginator-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.tabs-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($foreground, $tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n\n      &.mat-tab-disabled {\n        background-color: theming.get-color-from-palette($foreground, disabled, 0.1);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n/// @deprecated Use `mat.tabs-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tabs-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.snack-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n/// @deprecated Use `mat.snack-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.snack-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.table-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.table-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.table-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../button/icon-button-theme';\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Regardless of the user-passed density, we want the calendar previous/next buttons to remain at\n  // density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  body {\n    color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n  }\n\n  h6 {\n    color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n  }\n\n  p,\n  ol,\n  ul,\n  ol,\n  li,\n  input,\n  a {\n    color: if($is-dark-theme, constants.$white, constants.$darkgray);\n  }\n\n  .app-toolbar a {\n    color: constants.$white;\n  }\n\n  code {\n    color: if($is-dark-theme, constants.$white, constants.$darkgray);\n  }\n\n  .sidenav-content a {\n    color: if($is-dark-theme, constants.$dull-magenta-700, constants.$lightpurple);\n\n    &:hover {\n      color: if($is-dark-theme, constants.$purple-700, constants.$mediumgray);\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map-get($theme, primary);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  footer {\n    // Because the footer background is always the same color in both light and dark mode, there is no need to specify a foreground color\n    background-color: mat.get-color-from-palette($primary, if($is-dark-theme, 900, 700));\n\n    aio-footer {\n      & > * {\n        color: constants.$white;\n      }\n\n      a {\n        color: constants.$white;\n      }\n\n      h3 {\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use '../../constants' ;\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map-get($theme, background);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  body{\n    background: if($is-dark-theme,  mat.get-color-from-palette($background, background), constants.$offwhite);\n  }\n\n  @if $is-dark-theme {\n    :root {\n      color-scheme: dark;\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map-get($theme, primary);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .background-sky {\n    color: mat.get-color-from-palette($foreground, text);\n  }\n\n  section#intro {\n    color: constants.$white;\n\n    .hero-logo {\n      background-image: url(/assets/images/logos/angular/angular.svg);\n    }\n  }\n\n  .announcement-bar {\n    background-color: rgba(255, 255, 255, 0.1);\n\n    .button {\n      color: constants.$white;\n      background-color: constants.$purple;\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n  }\n\n  .home-row .card {\n    background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n\n    .card-text-container {\n      p {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n    }\n\n    &:hover {\n      h2 {\n        color: constants.$purple\n      }\n    }\n  }\n\n  .button.hero-cta {\n    background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n  }\n\n  // Verify\n  .cta-bar {\n    .hero-cta {\n      color: constants.$purple\n    }\n  }\n\n  // Verify\n  .text-headline {\n    color: if($is-dark-theme, constants.$darkgray, constants.$white);\n  }\n\n  .marketing-banner {\n    background-color: lighten(constants.$purple, 10);\n\n    .banner-headline {\n      color: constants.$white;\n    }\n  }\n\n  aio-shell {\n    &.page-home {\n      article {\n        color: if($is-dark-theme, constants.$darkgray, constants.$white);\n        background-color: constants.$purple;\n      }\n    }\n\n    &.page-home, &.page-resources, &.page-events, &.page-contribute {\n      color: if($is-dark-theme, constants.$darkgray, constants.$white);;\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .nf-response {\n    h1 {\n      color: if($is-dark-theme, constants.$lightpurple, constants.$purple);\n    }\n  }\n\n  .nf-icon.material-icons {\n    color: constants.$purple;\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map-get($theme, background);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  mat-sidenav-container.sidenav-container {\n    background-color: if($is-dark-theme, mat.get-color-from-palette($background, background), constants.$offwhite);\n\n    mat-sidenav.sidenav {\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$white);\n      border-right: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n\n      .doc-version {\n        border-top: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n\n        select {\n          // Verify\n          color: constants.$darkgray;\n          background: rgba(constants.$lightgray, 0.5);\n        }\n      }\n    }\n  }\n\n  aio-nav-menu {\n    aio-nav-item {\n      .vertical-menu-item {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n\n        &.level-2  {\n          color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n        }\n\n        &.level-3  {\n          color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n        }\n\n        &.level-4  {\n          color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n        }\n\n        &:hover {\n          background-color: if($is-dark-theme, constants.$purple-grey-800, constants.$lightgray);\n          color: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple);\n          text-shadow: 0 0 5px if($is-dark-theme, constants.$black, constants.$white);\n\n          &.selected {\n            color: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple);\n          }\n        }\n\n        &.selected {\n          color: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple);\n        }\n      }\n    }\n  }\n\n  .heading {\n    color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n  }\n}\n","@use '../../constants';\n@use '../../mixins';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map-get($theme, primary);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  mat-toolbar.mat-toolbar {\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n    mat-icon {\n      color: constants.$white;\n    }\n  }\n\n  // HOME PAGE OVERRIDE: TOPNAV TOOLBAR\n  aio-shell.page-home mat-toolbar.mat-toolbar {\n    background: if($is-dark-theme,  mat.get-color-from-palette($primary, darker), constants.$purple);\n  }\n\n  // HAMBURGER BUTTON\n  .hamburger.mat-mdc-button {\n    &:hover {\n      color: constants.$offwhite;\n    }\n\n    > .mat-icon {\n      color: constants.$white;\n    }\n  }\n\n  .nav-link[href='enterprise-support'] {\n    background: #8000802e;\n  }\n\n  aio-top-menu {\n    ul {\n      li {\n        &:focus {\n          background-color: constants.$accentblue;\n        }\n      }\n    }\n\n    a.nav-link {\n      &:focus {\n        background: rgba(constants.$white, 0.15);\n      }\n    }\n  }\n\n  // SEARCH BOX\n  aio-search-box.search-container {\n    input {\n      color: constants.$darkgray;\n      background-color: constants.$offwhite;\n    }\n  }\n\n  aio-theme-toggle {\n    @media screen and (min-width: 351px) {\n      border-right: 1px solid constants.$white;\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .alert {\n    color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n\n    &.is-critical {\n      border-left: 8px solid constants.$brightred;\n      background-color: if($is-dark-theme, constants.$darkgray, rgba(constants.$brightred, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$brightred;\n      }\n    }\n\n    &.is-important {\n      border-left: 8px solid constants.$orange;\n      background-color: if($is-dark-theme, constants.$deepgray, rgba(constants.$orange, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$orange;\n      }\n    }\n\n    &.is-helpful {\n      border-left: 8px solid constants.$purple;\n      background-color: if($is-dark-theme, constants.$darkgray, rgba(constants.$purple, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$purple;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '../../mixins';\n@use '../../ngrx';\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  aio-api-list {\n    .api-filter {\n      .form-search {\n        input {\n          box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n          border: 1px solid if($is-dark-theme, constants.$darkgray, constants.$white);\n          background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n          color: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple-700);\n\n          &::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n            color: constants.$purple-grey-100;\n          }\n          &::-moz-placeholder { /* Firefox 19+ */\n            color: constants.$purple-grey-100;\n          }\n          &:-ms-input-placeholder { /* IE 10+ */\n            color: constants.$purple-grey-100;\n          }\n          &:-moz-placeholder { /* Firefox 18- */\n            color: constants.$purple-grey-100;\n          }\n\n          &:focus {\n            border: 1px solid constants.$purple-400;\n            box-shadow: 0 2px 2px rgba(constants.$purple-400, 0.24), 0 0 2px rgba(constants.$purple-400, 0.12);\n          }\n        }\n\n        .material-icons {\n          // TODO: verify\n          color: constants.$purple-grey-100;\n        }\n      }\n    }\n\n    .api-list-container {\n      a {\n        color: if($is-dark-theme, constants.$dull-magenta-700, constants.$lightpurple);\n      }\n\n      .api-list {\n        li {\n          a {\n            color: if($is-dark-theme, constants.$white, constants.$purple-grey-600);\n\n            &:hover {\n              background: if($is-dark-theme, transparent, constants.$purple-grey-50);\n              color: constants.$purple-500\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .symbol {\n    box-shadow: 0 1px 2px rgba(constants.$black, .24);\n    color: constants.$white;\n\n    // SYMBOL TYPES\n    // Symbol mapping variables in *constants*\n    @each $name, $symbol in constants.$api-symbols {\n      &.#{$name} {\n        background: map-get($symbol, background);\n\n        &:before {\n          content: map-get($symbol, content);\n        }\n      }\n    }\n  }\n\n  .docs-content .api-list {\n    a {\n      color: constants.$purple-grey-600;\n\n      &:hover {\n        background: constants.$purple-grey-50;\n        color: constants.$purple-500;\n      }\n    }\n  }\n\n  .code-links {\n    a {\n      code, .api-doc-code {\n        color: #1E88E5 !important;\n      }\n    }\n  }\n\n  .code-background {\n    span.pln {\n      color: #1E88E5 !important;\n    }\n  }\n\n  .api-doc-code {\n    color: #1a2326;\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  // This rule overrides some Angular Material styles defined for `.mat-button`\n  // (hence we include `.mat-button` in the selector).\n  a.button.mat-button,\n  .button {\n    // COLORS\n\n    &.button-secondary {\n      background: constants.$mediumgray;\n      color: rgba(constants.$white, 0.87);\n    }\n\n    &.button-plain {\n      background: constants.$white;\n      color: rgba(constants.$darkgray, 0.87);\n    }\n\n    &.button-subtle {\n      background: constants.$mediumgray;\n      color: darken(constants.$offwhite, 10%);\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n\n    &.button-blue {\n      background: constants.$purple;\n      color: rgba(constants.$white, 0.87);\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n\n    &.button-shield,\n    &.button-shield.mat-button {\n      background-color: constants.$purple;\n      background: constants.$purple url('/projects/ngrx.io/src/assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n      @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n        background: constants.$purple url('/projects/ngrx.io/src/assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n        background-size: 22px 22px;\n      }\n    }\n\n    &.button-banner {\n      background: constants.$darkgray;\n      color: rgba(constants.$white, 0.87);\n    }\n  }\n\n  .cta-bar {\n    .button {\n      &:hover {\n        color: constants.$offwhite;\n      }\n    }\n  }\n\n  .group-buttons {\n    // This rule overrides some Angular Material styles defined for `.mat-button`\n    // (hence we include `.mat-button` in the selector).\n    a.button.mat-button.filter-button {\n      border: 2px solid constants.$purple;\n      background-color: rgba(constants.$purple, 0.2);\n      &.selected,\n      &:hover {\n        background-color: constants.$purple;\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  .callout {\n    header {\n      color: constants.$white;\n    }\n\n    &.is-critical {\n      border-color: constants.$brightred;\n      background: rgba(constants.$brightred, if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$brightred;\n      }\n    }\n\n    &.is-important {\n      border-color: constants.$orange;\n      background: rgba(constants.$orange,if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$amber-700;\n      }\n    }\n\n    &.is-helpful {\n      border-color: constants.$purple;\n      background: rgba(constants.$purple, if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$purple;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .card-container {\n    .docs-card {\n      background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n\n      section {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n\n      p {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n\n      .card-footer {\n        color: if($is-dark-theme, constants.$lightgray, constants.$mediumgray);\n        border-top: 0.5px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n\n        a {\n          color: constants.$mediumgray;\n        }\n      }\n\n      &:hover {\n        section {\n          color: constants.$purple;\n        }\n\n        p {\n          color: constants.$darkgray;\n        }\n\n        .card-footer {\n          background-color: rgba(constants.$purple, 0.1);\n          color: constants.$purple;\n        }\n      }\n    }\n  }\n\n  .card-section {\n    &:hover {\n      box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n@use '../../ngrx';\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  code-example {\n    &:not(.no-box) {\n      background-color: if($is-dark-theme, constants.$darkgray, rgb(constants.$backgroundgray, 0.2));\n      border: 0.5px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      color: constants.$darkgray;\n    }\n\n    // TERMINAL / SHELL TEXT STYLES\n    &.code-shell,\n    &[language=\"sh\"],\n    &[language=\"bash\"] {\n      background-color: constants.$darkgray;\n    }\n\n    header {\n      background-color: constants.$purple;\n      color: constants.$offwhite;\n    }\n  }\n\n  code-tabs {\n    .code-tab-group {\n      .mat-tab-label {\n        &:hover {\n          background: rgba(black, 0.04);\n        }\n      }\n    }\n  }\n\n  code-example.avoid header,\n  code-example.avoidFile header {\n    border: 2px solid constants.$anti-pattern;\n    background: constants.$anti-pattern;\n  }\n\n  code-example.avoid,\n  code-example.avoidFile,\n  code-tabs.avoid mat-tab-body,\n  code-tabs.avoidFile mat-tab-body {\n    border: 0.5px solid constants.$anti-pattern;\n  }\n\n  aio-code {\n    pre.prettyprint {\n      code {\n        ol.linenums {\n          color: lighten(#b3b6b7, 25%);\n        }\n\n        .code-missing {\n          color: constants.$darkred;\n        }\n      }\n\n      .copy-button {\n        color: constants.$purple-grey-200;\n\n        &:hover {\n          color: if($is-dark-theme, constants.$purple-grey-300,  constants.$mediumgray);\n        }\n      }\n\n      &.lang-sh,\n      &.lang-bash {\n        .copy-button {\n          color: if($is-dark-theme, constants.$purple-grey-200, constants.$mediumgray);\n\n          &:hover {\n            color: if($is-dark-theme, constants.$purple-grey-300, constants.$lightgray);\n          }\n        }\n      }\n    }\n  }\n\n  .sidenav-content {\n    code {\n      a {\n        color: if($is-dark-theme, constants.$white, inherit);\n\n        &:hover {\n          color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n        }\n      }\n    }\n\n    :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre) {\n      > code {\n        background-color: if($is-dark-theme, rgba(constants.$lightgray, 0.1), rgba(constants.$lightgray, 0.5));\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n    }\n  }\n\n  .code-tab-group .mat-tab-label {\n    &:hover {\n      background: rgba(black, 0.04);\n    }\n  }\n\n  // Dark Mode Code Palette\n  $code-lightteal: #17d3ff;\n  $code-lightred: #ffb0b0;\n  $code-lightgreen: #c3e88d;\n  $code-lightpurple: #d1b4ff;\n  $code-lightorange: #ffd779;\n  $code-lightblue: #98caff;\n  $code-grey: rgba(255, 255, 255, 0.7);\n\n  /* PRETTY PRINTING STYLES for prettify.js. */\n\n  /* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n\n  /* SPAN elements with the classes below are added by prettyprint. */\n  .pln {\n    color: if($is-dark-theme, constants.$white, #000);\n  } /* plain text */\n\n  @media screen {\n    .str {\n      color: if($is-dark-theme, $code-lightgreen, #800);\n    } /* string content */\n    .kwd {\n      color: if($is-dark-theme, $code-lightteal, #00f);\n    } /* a keyword */\n    .com {\n      color: if($is-dark-theme, $code-grey, #060);\n    } /* a comment */\n    .typ {\n      color: if($is-dark-theme, $code-lightred, purple);\n    } /* a type name */\n    .lit {\n      color: if($is-dark-theme, $code-lightpurple, mat.get-color-from-palette(ngrx.$gold, 900));\n    } /* a literal value */\n    /* punctuation, lisp open bracket, lisp close bracket */\n    .pun,\n    .opn,\n    .clo {\n      color: if($is-dark-theme, $code-lightorange, #660);\n    }\n    .tag {\n      color: if($is-dark-theme, $code-lightblue, #008);\n    } /* a markup tag name */\n    .atn {\n      color: if($is-dark-theme, $code-lightpurple, #606);\n    } /* a markup attribute name */\n    .atv {\n      color: if($is-dark-theme, $code-lightorange, #800);\n    } /* a markup attribute value */\n    .dec,\n    .var {\n      color: if($is-dark-theme, $code-lightpurple, #606);\n    } /* a declaration; a variable name */\n    .fun {\n      color: if($is-dark-theme, $code-lightred, red);\n    } /* a function name */\n  }\n\n  /* Use higher contrast and text-weight for printable form. */\n  @media print, projection {\n    .str {\n      color: #060;\n    }\n    .kwd {\n      color: #006;\n      font-weight: bold;\n    }\n    .com {\n      color: #600;\n      font-style: italic;\n    }\n    .typ {\n      color: #404;\n      font-weight: bold;\n    }\n    .lit {\n      color: #044;\n    }\n    .pun,\n    .opn,\n    .clo {\n      color: #440;\n    }\n    .tag {\n      color: #006;\n      font-weight: bold;\n    }\n    .atn {\n      color: #404;\n    }\n    .atv {\n      color: #060;\n    }\n  }\n\n  /* SHELL / TERMINAL CODE BLOCKS */\n\n  code-example {\n    &.code-shell,\n    &[language=\"sh\"],\n    &[language=\"bash\"] {\n      .pnk,\n      .blk,\n      .pln,\n      .otl,\n      .kwd,\n      .typ,\n      .tag,\n      .str,\n      .atv,\n      .atn,\n      .com,\n      .lit,\n      .pun,\n      .dec {\n        color: constants.$codegreen;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map-get($theme, background);\n\n  .group-buttons {\n    a {\n      &.selected {\n        background-color: constants.$purple;\n        color: constants.$white;\n      }\n    }\n  }\n\n  aio-contributor, ngrx-contributor {\n    background: constants.$white;\n    box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n\n    .contributor-info {\n      background: rgba(constants.$darkgray, 0.5);\n\n      .info-item {\n        color: constants.$white;\n\n        &:hover {\n          box-shadow: 0 8px 8px rgba(10, 16, 20, 0.24), 0 0 8px rgba(10, 16, 20, 0.12);\n          color: constants.$lightgray;\n        }\n      }\n\n      [mat-button] {\n        color: constants.$white;\n\n        &:hover {\n          color: constants.$lightgray;\n        }\n      }\n    }\n\n    .contributor-image {\n      border: 2px solid constants.$lightgray;\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n\n  details {\n    box-shadow: 0 1px 4px 0 rgba(constants.$black, 0.37);\n  }\n\n  summary {\n    color: if($is-dark-theme, constants.$white, constants.$black);\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  .filetree {\n    background: constants.$offwhite;\n    border: 4px solid constants.$lightgray;\n\n    .file {\n      color: constants.$darkgray;\n    }\n\n    .children {\n      .file {\n        &:before {\n          border-color: constants.$lightgray;\n        }\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  .sidenav-content {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      .header-link {\n        color: constants.$mediumgray;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  hr {\n    background: if($is-dark-theme, constants.$lightpurple, #36203A);\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  .content {\n    figure {\n      background: constants.$white;\n      box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, .2);\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  label.raised, .api-header label {\n    color: constants.$white;\n\n    &.api-status-label {\n      background-color: constants.$mediumgray;\n\n      &.deprecated, &.security, &.impure-pipe {\n        background-color: constants.$brightred;\n      }\n    }\n\n    &.api-type-label {\n      background-color: constants.$accentblue;\n\n      @each $name, $symbol in constants.$api-symbols {\n        &.#{$name} {\n          background: map-get($symbol, background);\n        }\n      }\n    }\n\n    &.page-label {\n      background-color: constants.$mist;\n      color: constants.$mediumgray;\n    }\n\n    &.property-type-label {\n      background-color: constants.$darkgray;\n      color: constants.$white;\n    }\n  }\n}\n","@use '../../constants';\n@use '../../ngrx';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  aio-notification {\n    background: constants.$purple;\n\n    .close-button {\n      background: constants.$darkgray;\n    }\n\n    .content {\n      .message {\n        color: constants.$offwhite;\n      }\n\n      .action-button {\n        background: mat.get-color-from-palette(ngrx.$dull-magenta, 700);\n        color: constants.$offwhite;\n      }\n    }\n  }\n}\n","@mixin theme($theme) {\n  .presskit-container {\n    h2 {\n      color: #37474F;\n    }\n\n    .cc-by-anchor {\n      color: grey !important;\n    }\n\n    .presskit-row {\n      .presskit-inner {\n        h3 {\n          color: #455A64;\n        }\n\n        .transparent-img-bg {\n          background-color: #34474F;\n        }\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n\n  aio-resource-list {\n    .shadow-1 {\n      box-shadow: 0 1px 4px 0 rgba(constants.$black, 0.37);\n    }\n\n    c-resource-nav {\n      background-color: #fff;\n\n      a {\n        color: #373E41;\n      }\n\n      .category {\n        .category-link {\n          &:hover {\n            background: #edf0f2;\n            color: #2B85E7;\n          }\n        }\n      }\n\n      .subcategory {\n        .subcategory-link {\n          &:hover {\n            background: #edf0f2;\n            color: #2B85E7;\n          }\n        }\n      }\n    }\n\n    .subcategory-title {\n      background-color: if($is-dark-theme, constants.$darkgray, constants.$mist);\n      color: if($is-dark-theme, constants.$white, #373E41) ;\n    }\n\n    .resource-row-link {\n      color: if($is-dark-theme, constants.$offwhite, #1a2326);\n\n      &:hover {\n        color: if($is-dark-theme, constants.$offwhite, #1a2326);\n        border-color: if($is-dark-theme, rgba(constants.$accentblue, 0.5), rgba(constants.$blue, 0.5));\n        box-shadow: 0 8px 8px rgb(1 131 163 / 24%), 0 0 8px rgb(1 67 163 / 12%), 0 6px 18px rgb(43 133 231 / 12%);\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  aio-search-results {\n    &.embedded {\n      .search-results {\n        .search-area {\n          .search-section-header {\n            color: constants.$darkgray;\n          }\n\n          a {\n            color: if($is-dark-theme, constants.$offwhite ,lighten(constants.$darkgray, 10));\n            &:hover {\n              color: constants.$accentblue;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .search-results {\n    background-color: constants.$darkgray;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n    .search-area {\n      .search-section-header {\n        color: constants.$white;\n      }\n    }\n\n    .no-results {\n      color:  mat.get-color-from-palette($foreground, text);\n    }\n\n    a {\n      color:  mat.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .search-area {\n    a {\n      color: constants.$lightgray;\n      &:hover {\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map-get($theme, background);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .form-select-button {\n    background: if($is-dark-theme, constants.$darkgray, constants.$white);\n    box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n    border: 1px solid if($is-dark-theme, constants.$darkgray, constants.$white);\n    color: if($is-dark-theme, constants.$purple-grey-200, constants.$purple-grey-600);\n\n    &:focus {\n      border: 1px solid constants.$purple-400;\n      box-shadow: 0 2px 2px rgba(constants.$purple-400, 0.24), 0 0 2px rgba(constants.$purple-400, 0.12);\n    }\n\n    &[disabled] {\n      color: lightgrey;\n    }\n  }\n\n  .form-select-dropdown {\n    background: mat.get-color-from-palette($background, background);\n    box-shadow: 0 16px 16px rgba(constants.$black, 0.24), 0 0 16px rgba(constants.$black, 0.12);\n\n    li {\n      &:hover {\n        background-color: if($is-dark-theme, #444, constants.$purple-grey-50);\n      }\n\n      &.selected {\n        background-color: if($is-dark-theme, constants.$darkgray, constants.$purple-grey-100);\n      }\n    }\n  }\n\n  .heading {\n    color: constants.$darkgray;\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map-get($theme, background);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  table {\n    box-shadow: 0 2px 2px rgba(constants.$mediumgray, 0.24), 0 0 2px rgba(if($is-dark-theme, constants.$white, constants.$black), 0.12);\n    background-color: if($is-dark-theme,  mat.get-color-from-palette($background, background), constants.$offwhite);\n\n    thead > {\n      tr > th {\n        background: if($is-dark-theme, constants.$darkgray, rgba(constants.$lightgray, 0.2));\n        border-bottom: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n        color: if($is-dark-theme, constants.$white, constants.$darkgray);\n      }\n    }\n\n    tbody > tr > {\n      th,\n      td {\n        border-bottom: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      }\n\n      td {\n        tr td:first-child {\n          @media (max-width: 480px) {\n            background-color: constants.$lightgray;\n          }\n        }\n      }\n\n      th {\n        background: if($is-dark-theme, constants.$deepgray, rgba(constants.$lightgray, 0.2));\n        &:not(:last-child) {\n          border-right: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n        }\n      }\n    }\n\n    tbody > tr {\n      &:last-child td {\n        @media (max-width: 480px) {\n          border-bottom: 1px solid if($is-dark-theme, constants.$deepgray, constants.$lightgray);\n        }\n      }\n    }\n  }\n}\n","@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  .toc-inner {\n    .toc-heading {\n      &.secondary {\n        &:hover {\n          color: constants.$accentblue;\n        }\n      }\n    }\n\n    button {\n      &.toc-heading,\n      &.toc-more-items {\n        &.embedded:focus {\n          background: if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n          color: if($is-dark-theme, constants.$white, constants.$mediumgray);\n        }\n      }\n\n      &.toc-heading {\n        &:hover:not(.embedded) {\n          color: constants.$accentblue;\n        }\n      }\n\n      &.toc-more-items {\n        color: if($is-dark-theme, constants.$lightgray, constants.$mediumgray);\n\n        &:hover {\n          color: constants.$accentblue;\n        }\n      }\n    }\n\n    ul.toc-list {\n      li {\n        &.h1:after {\n          background: if($is-dark-theme, constants.$mediumgray, constants.$lightgray);\n        }\n\n        a {\n          color: if($is-dark-theme, constants.$white, lighten(constants.$darkgray, 10));\n        }\n\n        &:hover {\n          * {\n            color: if($is-dark-theme, constants.$lightblue, constants.$accentblue);\n          }\n        }\n\n        &.active {\n          * {\n            color: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple);\n          }\n\n          a:before {\n            background: if($is-dark-theme, constants.$dull-magenta-700, constants.$purple);\n          }\n        }\n      }\n\n      &:not(.embedded) li {\n        &:before {\n          border-left-color: if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n        }\n\n        &:not(.active):hover {\n          a:before {\n            background: constants.$lightgray;\n          }\n        }\n      }\n    }\n\n    &.embedded {\n      .toc-inner {\n        .toc-heading {\n          &.secondary {\n            color:  mat.get-color-from-palette($foreground, text);\n          }\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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,CAAA,iBJ0CA,WAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,EAAA,SLiNJ,CS3PI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,SLqNJ,CS/PI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,SLyNJ,CSnQI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,SL6NJ,CSvQI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SLiOJ,CS3QI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SLqOJ,CS/QI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SLyOJ,CSnRI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL6OJ,CSvRI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLiPJ,CS3RI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLqPJ,CS/RI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLyPJ,CSnSI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL6PJ,CSvSI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLiQJ,CS3SI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLqQJ,CS/SI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLyQJ,CSnTI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL6QJ,CSvTI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLiRJ,CS3TI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLqRJ,CS/TI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBJ0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLyRJ,CSnUI,CAAA,kBAAA,CAAA,0BAAA,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AAA,IAAA,SLy7BJ,CoB1+BI,CAAA,iBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL67BJ,CoB9+BI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLi8BJ,CoBl/BI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLq8BJ,CoBt/BI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLy8BJ,CoB1/BI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL68BJ,CoB9/BI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLi9BJ,CoBlgCI,CAAA,kBfiDA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLq9BJ,CoBtgCI,CAAA,kBfiDA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLy9BJ,CoB1gCI,CAAA,kBfiDA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SL69BJ,CoB9gCI,CAAA,kBfiDA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SLi+BJ,CoBlhCI,CAAA,kBfiDA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA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","names":[],"sourceRoot":"webpack:///","file":"dark-theme.css","x_google_ignoreList":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]}