{"version":3,"mappings":"yVA2BaA,EAAb,eAAaA,EAAb,WAkCI,WAAoBC,EAA0BC,IAAc,eAAxCC,YAA0BA,cAjCtCA,aAAUC,KAAyB,OACnCD,wBAAqB,gBACrBA,gBAAY,EACZA,eAAY,IAAIE,KAChBF,qBAAkB,IAAIG,IAA4B,GAClDH,eAAYA,KAAKI,gBAAgBC,MAAKC,OAAUN,KAAKO,YANjE,qCAYI,WAAY,WACR,OAAIP,KAAKQ,YACLR,KAAKQ,WAAY,EACjBR,KAAKS,gBAGLT,KAAKU,UAAUC,UAAU,YAAQ,OAC7BC,EAAKb,OAAOc,IAAI,kCAIjBb,KAAKU,UAAUL,MAClBS,OAAI,YACAC,EAASC,QAAQ,YACbC,EAAQC,aACdD,EAAQE,OACVF,EAAQE,MAAMC,MAAM,YAAI,MAAuB,eAAnBC,EAAKC,mBA5B7C,yBAoCI,WACItB,KAAKO,UAAUgB,SArCvB,2BA+CI,SAAcC,GAAY,WAEhBC,EAAMzB,KAAK0B,SAAWF,GAAOxB,KAAK2B,oBACxC3B,KAAKF,KACA8B,IAAkBH,GAClBpB,QACGC,KAAUN,KAAKO,YACfO,OAAI,kBAAMe,EAAK9B,OAAOc,IAAZ,gCAAyCY,OAEtDd,UACG,YAAQ,OAAIkB,EAAKzB,gBAAgBmB,KAAKR,IACtC,SAACe,GAEG,QAAK/B,OAAOgC,MAAMD,GACZA,QA7D1BE,kDAAanC,GAAUoC,mDAAVpC,EAAUqC,QAAVrC,EAAU,YAAVA,EAAb,6DCHIoC,cAA0BA,gBAA0EA,SAAuBA,QAAIA,sCAA5EA,mDAAtBA,2BAAuEA,8DAElGA,SACEA,iBACEA,gBACEA,gBACAA,SACFA,QACFA,QACFA,gCAL0BA,iEAAnBA,2BACKA,uCACNA,0DALRA,iBACEA,gCAQFA,sCARiCA,4DAHnCA,eACEA,sBACAA,uBAUFA,gCAXOA,+BACiBA,8DCPpBE,UAAN,6BACInC,WAAS,GACTA,YAAU,MACVA,UAAQ,QAOCoC,EAAb,eAAaA,EAAb,WAqCI,WACYC,EACAC,IAAgC,eADhCtC,kBACAA,uBApCZA,qBAAiB,EACjBA,mBAAe,EAEPA,qBAAkB,IAAIG,IAA8B,GACpDH,oBAAiB,IAAImC,EAM7BnC,WAAkB,CACd,CAAEuC,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,UAAWC,MAAO,YAG/BxC,cAAqB,CACjB,CAAEuC,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,gBAAiBC,MAAO,kBAhCzC,uCA0CI,WAAQ,WACJxC,KAAKyC,kBAAmBC,QAAc,CAClC1C,KAAKqC,WAAWtB,SAChBf,KAAK2C,kBACNtC,MACCuC,OAAI,YAAyB,mBAAbC,EAAaC,KACzB,OADyBA,KACTF,IAAI,YAAO,OAAIG,+BACxB9B,GAAO,CACVE,MAAOP,EAAKoC,cAAc/B,EAAS4B,UAK/C7C,KAAKiD,6BAvDb,sBA4DI,SAASC,GACLlD,KAAKmD,kBAAkB,CAAED,OAAQA,GAAS,IAAIE,cAAcC,WA7DpE,uBAgEI,SAAUC,GACNtD,KAAKuD,mBACLvD,KAAKsD,OAASA,EACdtD,KAAKmD,kBAAkB,CAAEG,OAAQA,EAAOf,UAnEhD,qBAsEI,SAAQiB,GACJxD,KAAKyD,iBACLzD,KAAKwD,KAAOA,EACZxD,KAAKmD,kBAAkB,CAAEK,KAAMA,EAAKjB,UAzE5C,8BA4EI,WACIvC,KAAK0D,gBAAkB1D,KAAK0D,iBA7EpC,4BAgFI,WACI1D,KAAK2D,cAAgB3D,KAAK2D,eAjFlC,2BAsFY,SACJ1C,EADIY,GAEmC,IAArCqB,EAAqCrB,EAArCqB,MAAOI,EAA8BzB,EAA9ByB,OAAQE,EAAsB3B,EAAtB2B,KAEXrC,EAAQF,EAAQE,MAAOyC,OAAO,YAChC,OAmBoB,QAATJ,GAAkBA,IAASnC,EAAKwC,WAPxB,QAAXP,GACVA,IAAWjC,EAAKC,WACJ,kBAAXgC,GAA8BjC,EAAKyC,iBAVzBZ,IACqB,IAAhCjC,EAAQ8C,KAAKC,QAAQd,KACQ,IAA7B7B,EAAK0C,KAAKC,QAAQd,MAkBpB,OAAO/B,EAAM8C,OACP9C,EACS,YAATqC,GAAwBN,IAAyC,IAAhCjC,EAAQ8C,KAAKC,QAAQd,GAElD,KADA,KAtHlB,sCA2HY,WACJ,MAAgClD,KAAKsC,gBAAgB4B,SAAtCZ,EAAf1C,EAAe0C,OAAQE,EAAvB5C,EAAuB4C,KAEjBW,GAFNvD,EAAQsC,OAEY,IAAIE,cAExBpD,KAAKoE,QAAQC,cAAc9B,MAAQ4B,EAEnCnE,KAAKsD,OACPtD,KAAKsE,SAASC,KAAK,YAAC,OAAIC,EAAEjC,QAAUe,KAAWtD,KAAKsE,SAAS,GAC3DtE,KAAKwD,KAAOxD,KAAKyE,MAAMF,KAAK,YAAC,OAAIC,EAAEjC,QAAUiB,KAASxD,KAAKyE,MAAM,GAEjEzE,KAAK0E,eAAiB,CAClBxB,MAAOiB,EACPb,OAAQtD,KAAKsD,OAAOf,MACpBiB,KAAMxD,KAAKwD,KAAKjB,OAGpBvC,KAAK2C,gBAAgBpB,KAAKvB,KAAK0E,kBA5IvC,+BA+IY,WACJ,MAAgC1E,KAAK0E,eAAtBpB,EAAf1C,EAAe0C,OAAQE,EAAvB5C,EAAuB4C,KAOvBxD,KAAKsC,gBAAgBqC,UAAU,aANhB,CACXzB,MAFJtC,EAAQsC,YAEmB0B,EACvBtB,OAAmB,QAAXA,EAAmBA,OAASsB,EACpCpB,KAAe,QAATA,EAAiBA,OAAOoB,MApJ1C,+BA0JY,SAAkB/B,GACtB7C,KAAK2C,gBAAgBpB,KAAKwB,OAAO8B,OAAO7E,KAAK0E,eAAgB7B,IAC7D7C,KAAK8E,wBA5Jb9C,kDAAaI,GAAgBH,8CAAhBG,EAAgB2C,mkBD5B7B9C,iBAEEA,wBAAYA,kCAAU+C,sBAKtB/C,QAEAA,wBAAYA,kCAAU+C,wBAKtB/C,QAEAA,iBACEA,eAA0BA,kBAAMA,QAChCA,qBAAoCA,iCAAS+C,6BAA7C/C,QACFA,QACFA,QAEAA,qBACEA,yCAaFA,eAjCcA,kCAAiB,kBAAjBA,CAAiB,iBAOjBA,qCAAoB,oBAApBA,CAAoB,qCAaPA,qHCKdG,EAAb,GCda6C,EAAb,eAAaA,KAAbC,KANA,6BAOIlF,4BAAoCoC,iDAD3B6C,6DAFE,CAAEpF,GAAYsF,SAHhB,CAAEC,KAAcC,IAAcC,SAK9BL,EAAb","names":["ApiService","http","logger","this","DOC_CONTENT_URL_PREFIX","Subject","ReplaySubject","sectionsSubject","pipe","takeUntil","onDestroy","firstTime","fetchSections","_sections","subscribe","i","log","tap","sections","forEach","section","deprecated","items","every","item","stability","next","src","url","apiBase","apiListJsonDefault","get","a","err","error","r","i0","factory","SearchCriteria","ApiListComponent","apiService","locationService","value","title","filteredSections","combineLatest","criteriaSubject","map","criteria","n","Object","filterSection","initializeSearchCriteria","query","setSearchCriteria","toLowerCase","trim","status","toggleStatusMenu","type","toggleTypeMenu","showStatusMenu","showTypeMenu","filter","docType","securityRisk","name","indexOf","length","search","q","queryEl","nativeElement","statuses","find","x","types","searchCriteria","setSearch","undefined","assign","setLocationSearch","selectors","ctx","ApiListModule","p","imports","CommonModule","SharedModule","HttpClientModule"],"sources":["./src/app/custom-elements/api/api.service.ts","./src/app/custom-elements/api/api-list.component.html","./src/app/custom-elements/api/api-list.component.ts","./src/app/custom-elements/api/api-list.module.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { Logger } from 'app/shared/logger.service';\nimport { DOC_CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nexport interface ApiItem {\n    name: string;\n    title: string;\n    path: string;\n    docType: string;\n    stability: string;\n    securityRisk: boolean;\n}\n\nexport interface ApiSection {\n    path: string;\n    name: string;\n    title: string;\n    deprecated: boolean;\n    items: ApiItem[] | null;\n}\n\n@Injectable()\nexport class ApiService implements OnDestroy {\n    private apiBase = DOC_CONTENT_URL_PREFIX + 'api/';\n    private apiListJsonDefault = 'api-list.json';\n    private firstTime = true;\n    private onDestroy = new Subject();\n    private sectionsSubject = new ReplaySubject<ApiSection[]>(1);\n    private _sections = this.sectionsSubject.pipe(takeUntil(this.onDestroy));\n\n    /**\n   * Return a cached observable of API sections from a JSON file.\n   * API sections is an array of Angular top modules and metadata about their API documents (items).\n   */\n    get sections() {\n        if (this.firstTime) {\n            this.firstTime = false;\n            this.fetchSections(); // TODO: get URL for fetchSections by configuration?\n\n            // makes sectionsSubject hot; subscribe ensures stays alive (always refCount > 0);\n            this._sections.subscribe(sections =>\n                this.logger.log('ApiService got API sections')\n            );\n        }\n\n        return this._sections.pipe(\n            tap(sections => {\n                sections.forEach(section => {\n                    section.deprecated =\n            !!section.items &&\n            section.items.every(item => item.stability === 'deprecated');\n                });\n            })\n        );\n    }\n\n    constructor(private http: HttpClient, private logger: Logger) {}\n\n    ngOnDestroy() {\n        this.onDestroy.next();\n    }\n\n    /**\n   * Fetch API sections from a JSON file.\n   * API sections is an array of Angular top modules and metadata about their API documents (items).\n   * Updates `sections` observable\n   *\n   * @param {string} [src] - Name of the api list JSON file\n   */\n    fetchSections(src?: string) {\n    // TODO: get URL by configuration?\n        const url = this.apiBase + (src || this.apiListJsonDefault);\n        this.http\n            .get<ApiSection[]>(url)\n            .pipe(\n                takeUntil(this.onDestroy),\n                tap(() => this.logger.log(`Got API sections from ${url}`))\n            )\n            .subscribe(\n                sections => this.sectionsSubject.next(sections),\n                (err: HttpErrorResponse) => {\n                    // TODO: handle error\n                    this.logger.error(err);\n                    throw err; // rethrow for now.\n                }\n            );\n    }\n}\n","<div class=\"l-flex-wrap api-filter\">\n\n  <aio-select (change)=\"setType($event.option)\"\n              [options]=\"types\"\n              [selected]=\"type\"\n              [showSymbol]=\"true\"\n              label=\"Type:\">\n  </aio-select>\n\n  <aio-select (change)=\"setStatus($event.option)\"\n              [options]=\"statuses\"\n              [selected]=\"status\"\n              [disabled]=\"type.value === 'package'\"\n              label=\"Status:\">\n  </aio-select>\n\n  <div class=\"form-search\">\n    <i class=\"material-icons\">search</i>\n    <input #filter placeholder=\"Filter\" (input)=\"setQuery($event.target.value)\">\n  </div>\n</div>\n\n<article class=\"api-list-container l-content-small docs-content\">\n  <div *ngFor=\"let section of filteredSections | async\" >\n    <h2 *ngIf=\"section.items\"><a [href]=\"section.path\" [class.deprecated-api-item]=\"section.deprecated\">@ngrx/{{section.title}}</a></h2>\n    <ul class=\"api-list\" *ngIf=\"section.items?.length\">\n      <ng-container *ngFor=\"let item of section.items\">\n        <li class=\"api-item\">\n          <a [href]=\"item.path\" [class.deprecated-api-item]=\"item.stability === 'deprecated'\">\n            <span class=\"symbol {{item.docType}}\"></span>\n            {{item.title}}\n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</article>\n","/*\n* API List & Filter Component\n*\n* A page that displays a formatted list of the public Angular API entities.\n* Clicking on a list item triggers navigation to the corresponding API entity document.\n* Can add/remove API entity links based on filter settings.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LocationService } from 'app/shared/location.service';\nimport { ApiSection, ApiService } from './api.service';\n\nimport { Option } from 'app/shared/select/select.component';\n\nclass SearchCriteria {\n    query? = '';\n    status? = 'all';\n    type? = 'all';\n}\n\n@Component({\n    selector: 'aio-api-list',\n    templateUrl: './api-list.component.html',\n})\nexport class ApiListComponent implements OnInit {\n    filteredSections: Observable<ApiSection[]>;\n\n    showStatusMenu = false;\n    showTypeMenu = false;\n\n    private criteriaSubject = new ReplaySubject<SearchCriteria>(1);\n    private searchCriteria = new SearchCriteria();\n\n    status: Option;\n    type: Option;\n\n    // API types\n    types: Option[] = [\n        { value: 'all', title: 'All' },\n        { value: 'class', title: 'Class' },\n        { value: 'const', title: 'Const' },\n        { value: 'decorator', title: 'Decorator' },\n        { value: 'directive', title: 'Directive' },\n        { value: 'enum', title: 'Enum' },\n        { value: 'function', title: 'Function' },\n        { value: 'interface', title: 'Interface' },\n        { value: 'pipe', title: 'Pipe' },\n        { value: 'ngmodule', title: 'NgModule' },\n        { value: 'type-alias', title: 'Type alias' },\n        { value: 'package', title: 'Package' },\n    ];\n\n    statuses: Option[] = [\n        { value: 'all', title: 'All' },\n        { value: 'stable', title: 'Stable' },\n        { value: 'deprecated', title: 'Deprecated' },\n        { value: 'security-risk', title: 'Security Risk' },\n    ];\n\n    @ViewChild('filter', { static: true }) queryEl: ElementRef;\n\n    constructor(\n        private apiService: ApiService,\n        private locationService: LocationService\n    ) {}\n\n    ngOnInit() {\n        this.filteredSections = combineLatest([\n            this.apiService.sections,\n            this.criteriaSubject\n        ]).pipe(\n            map(([sections, criteria]) => {\n                return sections.map(section => ({\n                    ...section,\n                    items: this.filterSection(section, criteria),\n                }));\n            })\n        );\n\n        this.initializeSearchCriteria();\n    }\n\n    // TODO: may need to debounce as the original did\n    // although there shouldn't be any perf consequences if we don't\n    setQuery(query: string) {\n        this.setSearchCriteria({ query: (query || '').toLowerCase().trim() });\n    }\n\n    setStatus(status: Option) {\n        this.toggleStatusMenu();\n        this.status = status;\n        this.setSearchCriteria({ status: status.value });\n    }\n\n    setType(type: Option) {\n        this.toggleTypeMenu();\n        this.type = type;\n        this.setSearchCriteria({ type: type.value });\n    }\n\n    toggleStatusMenu() {\n        this.showStatusMenu = !this.showStatusMenu;\n    }\n\n    toggleTypeMenu() {\n        this.showTypeMenu = !this.showTypeMenu;\n    }\n\n    /// ///// Private //////////\n\n    private filterSection(\n        section: ApiSection,\n        { query, status, type }: SearchCriteria\n    ) {\n        const items = section.items!.filter(item => {\n            return matchesType() && matchesStatus() && matchesQuery();\n\n            function matchesQuery() {\n                return (\n                    !query ||\n          section.name.indexOf(query) !== -1 ||\n          item.name.indexOf(query) !== -1\n                );\n            }\n\n            function matchesStatus() {\n                return (\n                    status === 'all' ||\n          status === item.stability ||\n          (status === 'security-risk' && item.securityRisk)\n                );\n            }\n\n            function matchesType() {\n                return type === 'all' || type === item.docType;\n            }\n        });\n\n        // If there are no items we still return an empty array if the section name matches and the type is 'package'\n        return items.length\n            ? items\n            : type === 'package' && (!query || section.name.indexOf(query) !== -1)\n                ? []\n                : null;\n    }\n\n    // Get initial search criteria from URL search params\n    private initializeSearchCriteria() {\n        const { query, status, type } = this.locationService.search();\n\n        const q = (query || '').toLowerCase();\n        // Hack: can't bind to query because input cursor always forced to end-of-line.\n        this.queryEl.nativeElement.value = q;\n\n        this.status =\n      this.statuses.find(x => x.value === status) || this.statuses[0];\n        this.type = this.types.find(x => x.value === type) || this.types[0];\n\n        this.searchCriteria = {\n            query: q,\n            status: this.status.value,\n            type: this.type.value,\n        };\n\n        this.criteriaSubject.next(this.searchCriteria);\n    }\n\n    private setLocationSearch() {\n        const { query, status, type } = this.searchCriteria;\n        const params = {\n            query: query ? query : undefined,\n            status: status !== 'all' ? status : undefined,\n            type: type !== 'all' ? type : undefined,\n        };\n\n        this.locationService.setSearch('API Search', params);\n    }\n\n    private setSearchCriteria(criteria: SearchCriteria) {\n        this.criteriaSubject.next(Object.assign(this.searchCriteria, criteria));\n        this.setLocationSearch();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApiListComponent } from './api-list.component';\nimport { ApiService } from './api.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [ CommonModule, SharedModule, HttpClientModule ],\n    declarations: [ ApiListComponent ],\n    entryComponents: [ ApiListComponent ],\n    providers: [ ApiService ]\n})\nexport class ApiListModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = ApiListComponent;\n}\n"],"sourceRoot":"webpack:///","file":"src_app_custom-elements_api_api-list_module_ts.8f6d4e6812e1e40b.js"}