{"version":3,"mappings":"6VA8CEA,iBACEA,iBACEA,iBACAA,eACAA,eAAgDA,sBAAUA,QAC5DA,QACFA,4BAJSA,oDACFA,yDACeA,qDA7CxB,IAAMC,EAAoBC,KAAqB,qBAiDlCC,EAAb,eAAaA,EAAb,WAGI,WAAoBC,EAA0BC,MAAcC,aAAxCC,YAA0BA,cAHlD,uCAKI,WAAQ,WACJA,KAAKH,KAAKI,IAAoBP,GACzBQ,MACGC,OAAW,YACP,SAAKL,OAAOM,MAAM,IAAIC,MAAJ,UAAaX,EAAb,4BAAkDU,EAAME,WACnE,MAEXC,OAAI,YAAa,OAAIC,EAAKC,wBAAwBC,MAClDP,OAAW,YACP,SAAKL,OAAOM,MAAM,IAAIC,MAAJ,UAAaX,EAAb,mCAAyDU,EAAME,WAC1E,MAGdK,UAAU,YAAY,OAAIH,EAAKI,aAAeA,MAlB3D,qCAwBY,SAAwBF,GAC5B,OAAOA,EACFG,OAAO,YAAY,OAAI,IAAIC,KAAKF,EAAaG,WAAWC,UAAYF,KAAKG,QACzEJ,OAAO,YAAY,OAAI,IAAIC,KAAKF,EAAaM,SAASF,UAAYF,KAAKG,QACvE,OA5BbE,kDAAavB,GAAwBH,iDAAxBG,EAAwBwB,iOARnC3B,4BAAiCA,kEAQtBG,EAAb,GC1CayB,EAAb,eAAaA,KAAbC,KALA,6BAMItB,4BAAoCJ,iDAD3ByB,4DAJA,CAAEE,KAAcC,IAAcC,SAI9BJ,EAAb","names":["i0","announcementsPath","CONTENT_URL_PREFIX","AnnouncementBarComponent","http","logger","s","this","get","pipe","catchError","error","Error","message","map","a","findCurrentAnnouncement","announcements","subscribe","announcement","filter","Date","startDate","valueOf","now","endDate","c","selectors","AnnouncementBarModule","i","CommonModule","SharedModule","HttpClientModule"],"sources":["./src/app/custom-elements/announcement-bar/announcement-bar.component.ts","./src/app/custom-elements/announcement-bar/announcement-bar.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Logger } from 'app/shared/logger.service';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n\nexport interface Announcement {\n    imageUrl: string;\n    message: string;\n    linkUrl: string;\n    startDate: string;\n    endDate: string;\n}\n\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\n@Component({\n    selector: 'aio-announcement-bar',\n    template: `\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\n    <div class=\"announcement-bar\">\n      <img [src]=\"announcement.imageUrl\">\n      <p [innerHTML]=\"announcement.message\"></p>\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\n    </div>\n  </div>`\n})\nexport class AnnouncementBarComponent implements OnInit {\n    announcement: Announcement;\n\n    constructor(private http: HttpClient, private logger: Logger) {}\n\n    ngOnInit() {\n        this.http.get<Announcement[]>(announcementsPath)\n            .pipe(\n                catchError(error => {\n                    this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\n                    return [];\n                }),\n                map(announcements => this.findCurrentAnnouncement(announcements)),\n                catchError(error => {\n                    this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\n                    return [];\n                }),\n            )\n            .subscribe(announcement => this.announcement = announcement);\n    }\n\n    /**\n   * Get the first date in the list that is \"live\" now\n   */\n    private findCurrentAnnouncement(announcements: Announcement[]) {\n        return announcements\n            .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\n            .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())\n            [0];\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [ CommonModule, SharedModule, HttpClientModule ],\n    declarations: [ AnnouncementBarComponent ],\n    entryComponents: [ AnnouncementBarComponent ],\n})\nexport class AnnouncementBarModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = AnnouncementBarComponent;\n}\n"],"sourceRoot":"webpack:///","file":"src_app_custom-elements_announcement-bar_announcement-bar_module_ts.9817df5b2ff0187e.js"}