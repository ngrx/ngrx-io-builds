{"version":3,"sources":["./src/app/custom-elements/resource/resource.service.ts","./src/app/custom-elements/resource/resource-list.component.html","./src/app/custom-elements/resource/resource-list.component.ts","./src/app/custom-elements/resource/resource-list.module.ts"],"names":["resourcesPath","http","this","categories","getCategories","get","pipe","map","data","categoryJson","Object","keys","catKey","cat","id","makeId","title","order","subCategories","mkSubCategories","sort","compareCats","publishLast","connect","ResourceService","subCategoryJson","subKey","sub","resources","mkResources","resourceJson","resKey","res","category","subCategory","compareTitles","l","r","toUpperCase","toLowerCase","replace","location","resourceService","scrollPos","pathname","href","ngOnInit","subscribe","cats","onScroll","target","scrollTop","body","ResourceListComponent","customElementComponent","ResourceListModule"],"mappings":"mRASMA,EAAgB,KAAqB,iBAE3C,aAII,WAAoBC,GAAA,KAAAA,OAChBC,KAAKC,WAAaD,KAAKE,gB,OAGnB,YAAAA,cAAR,WAEI,IAAMD,EAAaD,KAAKD,KAAKI,IAASL,GAAeM,MACjD,EAAAC,EAAA,GAAI,SAAAC,GAAQ,OAUFC,EAVeD,EAW1BE,OAAOC,KAAKF,GAAcF,IAAI,SAAAK,GACjC,IAAMC,EAAMJ,EAAaG,GACzB,MAAO,CACHE,GAAIC,EAAOH,GACXI,MAAOJ,EACPK,MAAOJ,EAAII,MACXC,cAAeC,EAAgBN,EAAIK,cAAeN,MAGrDQ,KAAKC,GAVd,IAAsBZ,KATV,EAAAa,EAAA,MAIJ,OADCnB,EAAiDoB,UAC3CpB,G,sCAfFqB,GAAe,c,0BAAfA,EAAe,QAAfA,EAAe,Y,EAD5B,GAmCA,SAASL,EAAgBM,EAAsBb,GAC3C,OAAOF,OAAOC,KAAKc,GAAiBlB,IAAI,SAAAmB,GACpC,IAAMC,EAAMF,EAAgBC,GAC5B,MAAO,CACHZ,GAAIC,EAAOW,GACXV,MAAOU,EACPT,MAAOU,EAAIV,MACXW,UAAWC,EAAYF,EAAIC,UAAWF,EAAQd,MAGjDQ,KAAKC,GAId,SAASQ,EAAYC,EAAmBJ,EAAgBd,GACpD,OAAOF,OAAOC,KAAKmB,GAAcvB,IAAI,SAAAwB,GACjC,IAAMC,EAAMF,EAAaC,GAIzB,OAHAC,EAAIC,SAAWrB,EACfoB,EAAIE,YAAcR,EAClBM,EAAIlB,GAAKC,EAAOgB,GACTC,IAENZ,KAAKe,GAGd,SAASd,EAAYe,EAA2BC,GAC5C,OAAOD,EAAEnB,QAAUoB,EAAEpB,MAAQkB,EAAcC,EAAGC,GAAKD,EAAEnB,MAAQoB,EAAEpB,MAAQ,GAAK,EAGhF,SAASkB,EAAcC,EAAoBC,GACvC,OAAOD,EAAEpB,MAAMsB,cAAgBD,EAAErB,MAAMsB,cAAgB,GAAK,EAGhE,SAASvB,EAAOC,GACZ,OAAOA,EAAMuB,cAAcC,QAAQ,OAAQ,K,yBClEjC,kBACE,gBACE,eACE,cAAI,SAAkB,QACtB,gBAAgC,SAAqC,QACvE,QACF,QACF,S,6BAN8D,mCAEpD,wBAC4B,0C,yBALxC,eACE,uBAQF,S,uBAR2B,8B,yBAL7B,eACE,eACA,gBAA8B,SAAqB,QAEnD,uBAUF,S,uBAb6B,sBAAA1B,IACG,wBAEJ,uC,yBAXhC,iBACE,oBACE,eACA,cAAI,SAAkB,QACxB,QAEA,iBACE,uBAeF,QACF,S,uBArB+B,sBAAAA,IACvB,wBAIyB,2CCHvC,iBAUI,WACI2B,EACQC,GAAA,KAAAA,kBAJZ,KAAAC,UAAY,EAKRzC,KAAKuC,SAAWA,EAASG,SAASJ,QAAQ,OAAQ,I,OAGtD,YAAAK,KAAA,SAAKhC,GACD,OAAOX,KAAKuC,SAAW,IAAM5B,EAAIC,IAGrC,YAAAgC,SAAA,sBAGI5C,KAAKwC,gBAAgBvC,WAAW4C,UAAU,SAAAC,GAAQ,SAAK7C,WAAa6C,KAIxE,YAAAC,SADA,SACSC,GACLhD,KAAKyC,UAAYO,IAASA,EAAOC,WAAaD,EAAOE,KAAKD,YAAkB,G,sCAxBvEE,GAAqB,uB,wBAArBA,EAAqB,kE,kCAArB,uBAAuB,U,8ZDVpC,iBACI,iBACE,uBAwBF,QACJ,S,MAzBiD,yC,2CCIjD,GCAA,0BAOI,KAAAC,uBAAoCD,E,6CAD3BE,I,wBAAAA,I,6BAFE,CAAE/B,GAAiB,SAHrB,CAAE,S,EADf","file":"src_app_custom-elements_resource_resource-list_module_ts.09910bf9f40ed27bd802.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Category, Resource, SubCategory } from './resource.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst resourcesPath = CONTENT_URL_PREFIX + 'resources.json';\n\n@Injectable()\nexport class ResourceService {\n    categories: Observable<Category[]>;\n\n    constructor(private http: HttpClient) {\n        this.categories = this.getCategories();\n    }\n\n    private getCategories(): Observable<Category[]> {\n\n        const categories = this.http.get<any>(resourcesPath).pipe(\n            map(data => mkCategories(data)),\n            publishLast(),\n        );\n\n        (categories as ConnectableObservable<Category[]>).connect();\n        return categories;\n    };\n}\n\n// Extract sorted Category[] from resource JSON data\nfunction mkCategories(categoryJson: any): Category[] {\n    return Object.keys(categoryJson).map(catKey => {\n        const cat = categoryJson[catKey];\n        return {\n            id: makeId(catKey),\n            title: catKey,\n            order: cat.order,\n            subCategories: mkSubCategories(cat.subCategories, catKey)\n        } as Category;\n    })\n        .sort(compareCats);\n}\n\n// Extract sorted SubCategory[] from JSON category data\nfunction mkSubCategories(subCategoryJson: any, catKey: string): SubCategory[] {\n    return Object.keys(subCategoryJson).map(subKey => {\n        const sub = subCategoryJson[subKey];\n        return {\n            id: makeId(subKey),\n            title: subKey,\n            order: sub.order,\n            resources: mkResources(sub.resources, subKey, catKey)\n        } as SubCategory;\n    })\n        .sort(compareCats);\n}\n\n// Extract sorted Resource[] from JSON subcategory data\nfunction mkResources(resourceJson: any, subKey: string, catKey: string): Resource[] {\n    return Object.keys(resourceJson).map(resKey => {\n        const res = resourceJson[resKey];\n        res.category = catKey;\n        res.subCategory = subKey;\n        res.id = makeId(resKey);\n        return res as Resource;\n    })\n        .sort(compareTitles);\n}\n\nfunction compareCats(l: Category | SubCategory, r: Category | SubCategory) {\n    return l.order === r.order ? compareTitles(l, r) : l.order > r.order ? 1 : -1;\n}\n\nfunction compareTitles(l: {title: string}, r: {title: string}) {\n    return l.title.toUpperCase() > r.title.toUpperCase() ? 1 : -1;\n}\n\nfunction makeId(title: string) {\n    return title.toLowerCase().replace(/\\s+/g, '-');\n}\n","<div class=\"resources-container\">\n    <div class=\"l-flex--column\">\n      <div class=\"showcase\" *ngFor=\"let category of categories\">\n        <header class=\"c-resource-header\">\n          <a class=\"h-anchor-offset\" id=\"{{category.id}}\"></a>\n          <h2>{{category.title}}</h2>\n        </header>\n\n        <div class=\"shadow-1\">\n          <div *ngFor=\"let subCategory of category.subCategories\">\n            <a class=\"h-anchor-offset\" id=\"{{subCategory.id}}\"></a>\n            <h3 class=\"subcategory-title\">{{subCategory.title}}</h3>\n\n            <div *ngFor=\"let resource of subCategory.resources\">\n              <div class=\"c-resource\" *ngIf=\"resource.rev\">\n                <a class=\"l-flex--column resource-row-link\" target=\"_blank\" [href]=\"resource.url\">\n                  <div>\n                    <h4>{{resource.title}}</h4>\n                    <p class=\"resource-description\">{{resource.desc || 'No Description'}}</p>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { PlatformLocation } from '@angular/common';\n\nimport { Category } from './resource.model';\nimport { ResourceService } from './resource.service';\n\n@Component({\n    selector: 'aio-resource-list',\n    templateUrl: 'resource-list.component.html'\n})\nexport class ResourceListComponent implements OnInit {\n\n    categories: Category[];\n    location: string;\n    scrollPos = 0;\n\n    constructor(\n        location: PlatformLocation,\n        private resourceService: ResourceService) {\n        this.location = location.pathname.replace(/^\\/+/, '');\n    }\n\n    href(cat: {id: string}) {\n        return this.location + '#' + cat.id;\n    }\n\n    ngOnInit() {\n    // Not using async pipe because cats appear twice in template\n    // No need to unsubscribe because categories observable completes.\n        this.resourceService.categories.subscribe(cats => this.categories = cats);\n    }\n\n    @HostListener('window:scroll', ['$event.target'])\n    onScroll(target: any) {\n        this.scrollPos = target ? target.scrollTop || target.body.scrollTop ||  0 : 0;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResourceListComponent } from './resource-list.component';\nimport { ResourceService } from './resource.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [ CommonModule ],\n    declarations: [ ResourceListComponent ],\n    entryComponents: [ ResourceListComponent ],\n    providers: [ ResourceService ]\n})\nexport class ResourceListModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = ResourceListComponent;\n}\n"],"sourceRoot":"webpack:///"}