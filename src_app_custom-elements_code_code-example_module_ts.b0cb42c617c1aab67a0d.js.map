{"version":3,"sources":["./src/app/custom-elements/code/code-example.component.ts","./src/app/custom-elements/code/code-example.module.ts"],"names":["_path","isAvoid","this","_header","header","classes","path","indexOf","_hidecopy","hidecopy","ngAfterViewInit","aioCode","code","content","nativeElement","innerHTML","CodeExampleComponent","customElementComponent","CodeExampleModule"],"mappings":"sRA4BI,kBAAuB,SAAY,S,mBAAZ,0B,YAN3B,0BAkDY,KAAAA,MAAQ,GAsBgB,KAAAC,SAAU,E,OA3C1C,sBACI,qBAAM,C,IAOV,WACI,OAAOC,KAAKC,S,IAThB,SACWC,GACPF,KAAKC,QAAUC,EACfF,KAAKG,QAAU,CACX,gBAAiBH,KAAKE,OACtB,eAAgBF,KAAKE,S,gCAQ7B,sBACI,mBAAI,C,IAIR,WACI,OAAOF,KAAKF,O,IANhB,SACSM,GACLJ,KAAKF,MAAQM,EACbJ,KAAKD,SAA4C,IAAlCC,KAAKI,KAAKC,QAAQ,Y,gCAOrC,sBACI,uBAAQ,C,IAIZ,WACI,OAAOL,KAAKM,W,IANhB,SACaC,GAETP,KAAKM,UAAwB,MAAZC,GAAoB,GAAGA,GAAe,S,gCAO3D,sBACI,iCAAkB,C,IADtB,SACuBA,GACnBP,KAAKO,SAAWA,G,gCAGpB,sBACI,kCAAmB,C,IADvB,SACwBA,GACpBP,KAAKO,SAAWA,G,gCASpB,YAAAC,gBAAA,WACIR,KAAKS,QAAQC,KAAOV,KAAKW,QAAQC,cAAcC,W,sCA3D1CC,I,wBAAAA,EAAoB,qD,GAAA,M,eAwDlB,IAAe,I,glBAxE1B,mBAAoC,SAAyB,QAE7D,0BAEA,uB,MAFS,gCAGP,oCAAmB,sBAAnB,CAAmB,sBAAnB,CAAmB,cAAnB,CAAmB,kBAAnB,CAAmB,sBAAnB,CAAmB,qB,+CATzB,G,UChBA,0BAOI,KAAAC,uBAAoCD,E,6CAD3BE,I,wBAAAA,I,4BALA,CAAE,KAAc,Q,EAD7B","file":"src_app_custom-elements_code_code-example_module_ts.b0cb42c617c1aab67a0d.js","sourcesContent":["/* eslint-disable  @angular-eslint/component-selector */\nimport {\n    Component,\n    HostBinding,\n    ElementRef,\n    ViewChild,\n    Input,\n    AfterViewInit,\n} from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n    selector: 'code-example',\n    template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{ header }}</header>\n\n    <aio-code\n      [ngClass]=\"classes\"\n      [language]=\"language\"\n      [linenums]=\"linenums\"\n      [path]=\"path\"\n      [region]=\"region\"\n      [hideCopy]=\"hidecopy\"\n      [header]=\"header\"\n    >\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n    classes: {};\n\n    @Input() language: string;\n\n    @Input() linenums: string;\n\n    @Input() region: string;\n\n    @Input()\n    set header(header: string) {\n        this._header = header;\n        this.classes = {\n            'headed-code': !!this.header,\n            'simple-code': !this.header,\n        };\n    }\n    get header(): string {\n        return this._header;\n    }\n    private _header: string;\n\n    @Input()\n    set path(path: string) {\n        this._path = path;\n        this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n    }\n    get path(): string {\n        return this._path;\n    }\n    private _path = '';\n\n    @Input()\n    set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n        this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n    }\n    get hidecopy(): boolean {\n        return this._hidecopy;\n    }\n    private _hidecopy: boolean;\n\n    @Input('hide-copy')\n    set hyphenatedHideCopy(hidecopy: boolean) {\n        this.hidecopy = hidecopy;\n    }\n\n    @Input('hideCopy')\n    set capitalizedHideCopy(hidecopy: boolean) {\n        this.hidecopy = hidecopy;\n    }\n\n    @HostBinding('class.avoidFile') isAvoid = false;\n\n    @ViewChild('content', { static: true }) content: ElementRef;\n\n    @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n    ngAfterViewInit() {\n        this.aioCode.code = this.content.nativeElement.innerHTML;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n    imports: [ CommonModule, CodeModule ],\n    declarations: [ CodeExampleComponent ],\n    exports: [ CodeExampleComponent ],\n    entryComponents: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n    customElementComponent: Type<any> = CodeExampleComponent;\n}\n"],"sourceRoot":"webpack:///"}